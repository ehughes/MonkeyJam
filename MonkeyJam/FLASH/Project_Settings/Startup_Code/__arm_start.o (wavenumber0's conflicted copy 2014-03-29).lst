   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"__arm_start.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.__thumb_startup,"ax",%progbits
  19              		.align	2
  20              		.global	__thumb_startup
  21              		.thumb
  22              		.thumb_func
  24              	__thumb_startup:
  25              	.LFB2:
  26              		.file 1 "../Project_Settings/Startup_Code/__arm_start.c"
   1:../Project_Settings/Startup_Code/__arm_start.c **** /* CodeWarrior ARM Runtime Support Library
   2:../Project_Settings/Startup_Code/__arm_start.c **** 
   3:../Project_Settings/Startup_Code/__arm_start.c ****  * Copyright © 2012 Freescale Semiconductors. All rights reserved.
   4:../Project_Settings/Startup_Code/__arm_start.c **** 
   5:../Project_Settings/Startup_Code/__arm_start.c ****  *
   6:../Project_Settings/Startup_Code/__arm_start.c **** 
   7:../Project_Settings/Startup_Code/__arm_start.c ****  * $Date: 2013/02/08 07:14:44 $
   8:../Project_Settings/Startup_Code/__arm_start.c **** 
   9:../Project_Settings/Startup_Code/__arm_start.c ****  * $Revision: 1.6 $
  10:../Project_Settings/Startup_Code/__arm_start.c **** 
  11:../Project_Settings/Startup_Code/__arm_start.c ****  */
  12:../Project_Settings/Startup_Code/__arm_start.c **** 
  13:../Project_Settings/Startup_Code/__arm_start.c **** 
  14:../Project_Settings/Startup_Code/__arm_start.c **** 
  15:../Project_Settings/Startup_Code/__arm_start.c **** 
  16:../Project_Settings/Startup_Code/__arm_start.c **** 
  17:../Project_Settings/Startup_Code/__arm_start.c **** /*
  18:../Project_Settings/Startup_Code/__arm_start.c **** 
  19:../Project_Settings/Startup_Code/__arm_start.c ****  *	__arm_start.c	-	entry-point for ARM programs
  20:../Project_Settings/Startup_Code/__arm_start.c **** 
  21:../Project_Settings/Startup_Code/__arm_start.c ****  *
  22:../Project_Settings/Startup_Code/__arm_start.c **** 
  23:../Project_Settings/Startup_Code/__arm_start.c ****  */
  24:../Project_Settings/Startup_Code/__arm_start.c **** 
  25:../Project_Settings/Startup_Code/__arm_start.c **** #include <string.h>
  26:../Project_Settings/Startup_Code/__arm_start.c **** 
  27:../Project_Settings/Startup_Code/__arm_start.c **** #include <stdlib.h>
  28:../Project_Settings/Startup_Code/__arm_start.c **** 
  29:../Project_Settings/Startup_Code/__arm_start.c **** #include <runtime_configuration.h>
  30:../Project_Settings/Startup_Code/__arm_start.c **** 
  31:../Project_Settings/Startup_Code/__arm_start.c **** 
  32:../Project_Settings/Startup_Code/__arm_start.c **** 
  33:../Project_Settings/Startup_Code/__arm_start.c **** _EWL_BEGIN_EXTERN_C
  34:../Project_Settings/Startup_Code/__arm_start.c **** 
  35:../Project_Settings/Startup_Code/__arm_start.c **** 
  36:../Project_Settings/Startup_Code/__arm_start.c **** 
  37:../Project_Settings/Startup_Code/__arm_start.c **** #if SUPPORT_SEMIHOST_ARGC_ARGV
  38:../Project_Settings/Startup_Code/__arm_start.c **** 
  39:../Project_Settings/Startup_Code/__arm_start.c **** #define __MAX_CMDLINE_ARGS 10
  40:../Project_Settings/Startup_Code/__arm_start.c **** 
  41:../Project_Settings/Startup_Code/__arm_start.c **** static char *argv[__MAX_CMDLINE_ARGS] = { 0 };
  42:../Project_Settings/Startup_Code/__arm_start.c **** 
  43:../Project_Settings/Startup_Code/__arm_start.c **** #else
  44:../Project_Settings/Startup_Code/__arm_start.c **** 
  45:../Project_Settings/Startup_Code/__arm_start.c **** static char *argv[] = { 0 };
  46:../Project_Settings/Startup_Code/__arm_start.c **** 
  47:../Project_Settings/Startup_Code/__arm_start.c **** #endif
  48:../Project_Settings/Startup_Code/__arm_start.c **** 
  49:../Project_Settings/Startup_Code/__arm_start.c **** 
  50:../Project_Settings/Startup_Code/__arm_start.c **** 
  51:../Project_Settings/Startup_Code/__arm_start.c **** #if __GNUC__
  52:../Project_Settings/Startup_Code/__arm_start.c **** 
  53:../Project_Settings/Startup_Code/__arm_start.c **** #define __call_static_initializers __init_cpp
  54:../Project_Settings/Startup_Code/__arm_start.c **** 
  55:../Project_Settings/Startup_Code/__arm_start.c **** #endif
  56:../Project_Settings/Startup_Code/__arm_start.c **** 
  57:../Project_Settings/Startup_Code/__arm_start.c **** #if SUPPORT_SEMIHOST_ARGC_ARGV
  58:../Project_Settings/Startup_Code/__arm_start.c **** 
  59:../Project_Settings/Startup_Code/__arm_start.c **** extern int __argc_argv(int, char **);
  60:../Project_Settings/Startup_Code/__arm_start.c **** 
  61:../Project_Settings/Startup_Code/__arm_start.c **** #endif /* SUPPORT_SEMIHOST_ARGC_ARGV */
  62:../Project_Settings/Startup_Code/__arm_start.c **** 
  63:../Project_Settings/Startup_Code/__arm_start.c **** 
  64:../Project_Settings/Startup_Code/__arm_start.c **** 
  65:../Project_Settings/Startup_Code/__arm_start.c **** extern void __call_static_initializers(void);
  66:../Project_Settings/Startup_Code/__arm_start.c **** 
  67:../Project_Settings/Startup_Code/__arm_start.c **** extern int main(int, char **);
  68:../Project_Settings/Startup_Code/__arm_start.c **** 
  69:../Project_Settings/Startup_Code/__arm_start.c **** 
  70:../Project_Settings/Startup_Code/__arm_start.c **** 
  71:../Project_Settings/Startup_Code/__arm_start.c **** #ifdef __VFPV4__
  72:../Project_Settings/Startup_Code/__arm_start.c **** 
  73:../Project_Settings/Startup_Code/__arm_start.c **** extern void __fp_init(void);
  74:../Project_Settings/Startup_Code/__arm_start.c **** 
  75:../Project_Settings/Startup_Code/__arm_start.c **** #endif /* __VFPV4__ */
  76:../Project_Settings/Startup_Code/__arm_start.c **** 
  77:../Project_Settings/Startup_Code/__arm_start.c **** 
  78:../Project_Settings/Startup_Code/__arm_start.c **** 
  79:../Project_Settings/Startup_Code/__arm_start.c **** extern void __init_registers();
  80:../Project_Settings/Startup_Code/__arm_start.c **** 
  81:../Project_Settings/Startup_Code/__arm_start.c **** extern void __init_hardware();
  82:../Project_Settings/Startup_Code/__arm_start.c **** 
  83:../Project_Settings/Startup_Code/__arm_start.c **** extern void __init_user();
  84:../Project_Settings/Startup_Code/__arm_start.c **** 
  85:../Project_Settings/Startup_Code/__arm_start.c **** 
  86:../Project_Settings/Startup_Code/__arm_start.c **** 
  87:../Project_Settings/Startup_Code/__arm_start.c **** #if defined(__APCS_ROPI)
  88:../Project_Settings/Startup_Code/__arm_start.c **** 
  89:../Project_Settings/Startup_Code/__arm_start.c **** extern void __init_pic();
  90:../Project_Settings/Startup_Code/__arm_start.c **** 
  91:../Project_Settings/Startup_Code/__arm_start.c **** #endif
  92:../Project_Settings/Startup_Code/__arm_start.c **** 
  93:../Project_Settings/Startup_Code/__arm_start.c **** 
  94:../Project_Settings/Startup_Code/__arm_start.c **** 
  95:../Project_Settings/Startup_Code/__arm_start.c **** #if defined(__APCS_RWPI)
  96:../Project_Settings/Startup_Code/__arm_start.c **** 
  97:../Project_Settings/Startup_Code/__arm_start.c **** extern void __init_pid();
  98:../Project_Settings/Startup_Code/__arm_start.c **** 
  99:../Project_Settings/Startup_Code/__arm_start.c **** #endif
 100:../Project_Settings/Startup_Code/__arm_start.c **** 
 101:../Project_Settings/Startup_Code/__arm_start.c **** 
 102:../Project_Settings/Startup_Code/__arm_start.c **** 
 103:../Project_Settings/Startup_Code/__arm_start.c **** #if defined(__APCS_ROPI) || defined(__APCS_RWPI)
 104:../Project_Settings/Startup_Code/__arm_start.c **** 
 105:../Project_Settings/Startup_Code/__arm_start.c **** extern void __load_static_base();
 106:../Project_Settings/Startup_Code/__arm_start.c **** 
 107:../Project_Settings/Startup_Code/__arm_start.c **** #endif
 108:../Project_Settings/Startup_Code/__arm_start.c **** 
 109:../Project_Settings/Startup_Code/__arm_start.c **** 
 110:../Project_Settings/Startup_Code/__arm_start.c **** 
 111:../Project_Settings/Startup_Code/__arm_start.c **** #if defined(__SEMIHOSTING)
 112:../Project_Settings/Startup_Code/__arm_start.c **** 
 113:../Project_Settings/Startup_Code/__arm_start.c **** extern void __init_semihost(void) _EWL_WEAK;
 114:../Project_Settings/Startup_Code/__arm_start.c **** 
 115:../Project_Settings/Startup_Code/__arm_start.c **** #endif
 116:../Project_Settings/Startup_Code/__arm_start.c **** 
 117:../Project_Settings/Startup_Code/__arm_start.c **** 
 118:../Project_Settings/Startup_Code/__arm_start.c **** 
 119:../Project_Settings/Startup_Code/__arm_start.c **** #if SUPPORT_ROM_TO_RAM
 120:../Project_Settings/Startup_Code/__arm_start.c **** 
 121:../Project_Settings/Startup_Code/__arm_start.c **** extern void __copy_rom_sections_to_ram(void);
 122:../Project_Settings/Startup_Code/__arm_start.c **** 
 123:../Project_Settings/Startup_Code/__arm_start.c **** extern char __S_romp[];
 124:../Project_Settings/Startup_Code/__arm_start.c **** 
 125:../Project_Settings/Startup_Code/__arm_start.c **** #endif
 126:../Project_Settings/Startup_Code/__arm_start.c **** 
 127:../Project_Settings/Startup_Code/__arm_start.c **** 
 128:../Project_Settings/Startup_Code/__arm_start.c **** 
 129:../Project_Settings/Startup_Code/__arm_start.c **** static void zero_fill_bss(void)
 130:../Project_Settings/Startup_Code/__arm_start.c **** 
 131:../Project_Settings/Startup_Code/__arm_start.c **** {
 132:../Project_Settings/Startup_Code/__arm_start.c **** 
 133:../Project_Settings/Startup_Code/__arm_start.c **** 	extern char __START_BSS[];
 134:../Project_Settings/Startup_Code/__arm_start.c **** 
 135:../Project_Settings/Startup_Code/__arm_start.c **** 	extern char __END_BSS[];
 136:../Project_Settings/Startup_Code/__arm_start.c **** 
 137:../Project_Settings/Startup_Code/__arm_start.c **** 
 138:../Project_Settings/Startup_Code/__arm_start.c **** 
 139:../Project_Settings/Startup_Code/__arm_start.c **** 	memset(__START_BSS, 0, (__END_BSS - __START_BSS));
 140:../Project_Settings/Startup_Code/__arm_start.c **** 
 141:../Project_Settings/Startup_Code/__arm_start.c **** }
 142:../Project_Settings/Startup_Code/__arm_start.c **** 
 143:../Project_Settings/Startup_Code/__arm_start.c **** 
 144:../Project_Settings/Startup_Code/__arm_start.c **** 
 145:../Project_Settings/Startup_Code/__arm_start.c **** #ifndef __thumb // Thumb version
 146:../Project_Settings/Startup_Code/__arm_start.c **** 
 147:../Project_Settings/Startup_Code/__arm_start.c **** #error Thumb startup
 148:../Project_Settings/Startup_Code/__arm_start.c **** 
 149:../Project_Settings/Startup_Code/__arm_start.c **** #endif
 150:../Project_Settings/Startup_Code/__arm_start.c **** 
 151:../Project_Settings/Startup_Code/__arm_start.c **** 
 152:../Project_Settings/Startup_Code/__arm_start.c **** 
 153:../Project_Settings/Startup_Code/__arm_start.c **** // To keep iar debugger happy
 154:../Project_Settings/Startup_Code/__arm_start.c **** 
 155:../Project_Settings/Startup_Code/__arm_start.c **** void __iar_program_start(void) _EWL_NAKED;
 156:../Project_Settings/Startup_Code/__arm_start.c **** 
 157:../Project_Settings/Startup_Code/__arm_start.c **** void __thumb_startup(void);
 158:../Project_Settings/Startup_Code/__arm_start.c **** 
 159:../Project_Settings/Startup_Code/__arm_start.c **** void __iar_program_start()
 160:../Project_Settings/Startup_Code/__arm_start.c **** 
 161:../Project_Settings/Startup_Code/__arm_start.c **** {
 162:../Project_Settings/Startup_Code/__arm_start.c **** 
 163:../Project_Settings/Startup_Code/__arm_start.c **** 	__thumb_startup();
 164:../Project_Settings/Startup_Code/__arm_start.c **** 
 165:../Project_Settings/Startup_Code/__arm_start.c **** }
 166:../Project_Settings/Startup_Code/__arm_start.c **** 
 167:../Project_Settings/Startup_Code/__arm_start.c **** 
 168:../Project_Settings/Startup_Code/__arm_start.c **** 
 169:../Project_Settings/Startup_Code/__arm_start.c **** 
 170:../Project_Settings/Startup_Code/__arm_start.c **** 
 171:../Project_Settings/Startup_Code/__arm_start.c **** void __thumb_startup(void) _EWL_NAKED;
 172:../Project_Settings/Startup_Code/__arm_start.c **** 
 173:../Project_Settings/Startup_Code/__arm_start.c **** void __thumb_startup(void)
 174:../Project_Settings/Startup_Code/__arm_start.c **** 
 175:../Project_Settings/Startup_Code/__arm_start.c **** {
  27              		.loc 1 175 0
  28              		.cfi_startproc
  29              		@ Naked Function: prologue and epilogue provided by programmer.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
 176:../Project_Settings/Startup_Code/__arm_start.c **** 
 177:../Project_Settings/Startup_Code/__arm_start.c **** 		// Setup registers
 178:../Project_Settings/Startup_Code/__arm_start.c **** 
 179:../Project_Settings/Startup_Code/__arm_start.c **** 		__init_registers();
  32              		.loc 1 179 0
  33 0000 FFF7FEFF 		bl	__init_registers
  34              	.LVL0:
 180:../Project_Settings/Startup_Code/__arm_start.c **** 
 181:../Project_Settings/Startup_Code/__arm_start.c **** 
 182:../Project_Settings/Startup_Code/__arm_start.c **** 
 183:../Project_Settings/Startup_Code/__arm_start.c **** 		// setup hardware
 184:../Project_Settings/Startup_Code/__arm_start.c **** 
 185:../Project_Settings/Startup_Code/__arm_start.c **** 		__init_hardware();
  35              		.loc 1 185 0
  36 0004 FFF7FEFF 		bl	__init_hardware
  37              	.LVL1:
  38              	.LBB4:
  39              	.LBB5:
 139:../Project_Settings/Startup_Code/__arm_start.c **** 	memset(__START_BSS, 0, (__END_BSS - __START_BSS));
  40              		.loc 1 139 0
  41 0008 40F20000 		movw	r0, #:lower16:__START_BSS
  42 000c 40F20002 		movw	r2, #:lower16:__END_BSS
  43 0010 C0F20000 		movt	r0, #:upper16:__START_BSS
  44 0014 C0F20002 		movt	r2, #:upper16:__END_BSS
  45 0018 0021     		movs	r1, #0
  46 001a 121A     		subs	r2, r2, r0
  47 001c FFF7FEFF 		bl	memset
  48              	.LVL2:
  49              	.LBE5:
  50              	.LBE4:
 186:../Project_Settings/Startup_Code/__arm_start.c **** 
 187:../Project_Settings/Startup_Code/__arm_start.c **** 
 188:../Project_Settings/Startup_Code/__arm_start.c **** 
 189:../Project_Settings/Startup_Code/__arm_start.c **** 
 190:../Project_Settings/Startup_Code/__arm_start.c **** 
 191:../Project_Settings/Startup_Code/__arm_start.c **** #if defined(__APCS_ROPI) || defined(__APCS_RWPI)
 192:../Project_Settings/Startup_Code/__arm_start.c **** 
 193:../Project_Settings/Startup_Code/__arm_start.c **** 		//	static base register initialization
 194:../Project_Settings/Startup_Code/__arm_start.c **** 
 195:../Project_Settings/Startup_Code/__arm_start.c **** 		__load_static_base();
 196:../Project_Settings/Startup_Code/__arm_start.c **** 
 197:../Project_Settings/Startup_Code/__arm_start.c **** #endif
 198:../Project_Settings/Startup_Code/__arm_start.c **** 
 199:../Project_Settings/Startup_Code/__arm_start.c **** #if defined(__APCS_RWPI)
 200:../Project_Settings/Startup_Code/__arm_start.c **** 
 201:../Project_Settings/Startup_Code/__arm_start.c **** 		//	-pid
 202:../Project_Settings/Startup_Code/__arm_start.c **** 
 203:../Project_Settings/Startup_Code/__arm_start.c **** 		//	setup static base for SB relative position independent data
 204:../Project_Settings/Startup_Code/__arm_start.c **** 
 205:../Project_Settings/Startup_Code/__arm_start.c **** 		//	perform runtime relocation
 206:../Project_Settings/Startup_Code/__arm_start.c **** 
 207:../Project_Settings/Startup_Code/__arm_start.c **** 		__init_pid();
 208:../Project_Settings/Startup_Code/__arm_start.c **** 
 209:../Project_Settings/Startup_Code/__arm_start.c **** #endif
 210:../Project_Settings/Startup_Code/__arm_start.c **** 
 211:../Project_Settings/Startup_Code/__arm_start.c **** #if defined(__APCS_ROPI)
 212:../Project_Settings/Startup_Code/__arm_start.c **** 
 213:../Project_Settings/Startup_Code/__arm_start.c **** 		//	-pic
 214:../Project_Settings/Startup_Code/__arm_start.c **** 
 215:../Project_Settings/Startup_Code/__arm_start.c **** 		//	perform runtime relocation for position independent code
 216:../Project_Settings/Startup_Code/__arm_start.c **** 
 217:../Project_Settings/Startup_Code/__arm_start.c **** 		__init_pic();
 218:../Project_Settings/Startup_Code/__arm_start.c **** 
 219:../Project_Settings/Startup_Code/__arm_start.c **** #endif
 220:../Project_Settings/Startup_Code/__arm_start.c **** 
 221:../Project_Settings/Startup_Code/__arm_start.c **** 		//	zero-fill the .bss section
 222:../Project_Settings/Startup_Code/__arm_start.c **** 
 223:../Project_Settings/Startup_Code/__arm_start.c **** 		zero_fill_bss();
 224:../Project_Settings/Startup_Code/__arm_start.c **** 
 225:../Project_Settings/Startup_Code/__arm_start.c **** 
 226:../Project_Settings/Startup_Code/__arm_start.c **** 
 227:../Project_Settings/Startup_Code/__arm_start.c **** #if SUPPORT_ROM_TO_RAM
 228:../Project_Settings/Startup_Code/__arm_start.c **** 
 229:../Project_Settings/Startup_Code/__arm_start.c **** 		if (__S_romp != 0L)
 230:../Project_Settings/Startup_Code/__arm_start.c **** 
 231:../Project_Settings/Startup_Code/__arm_start.c **** 			__copy_rom_sections_to_ram();
  51              		.loc 1 231 0
  52 0020 FFF7FEFF 		bl	__copy_rom_sections_to_ram
  53              	.LVL3:
 232:../Project_Settings/Startup_Code/__arm_start.c **** 
 233:../Project_Settings/Startup_Code/__arm_start.c **** #endif
 234:../Project_Settings/Startup_Code/__arm_start.c **** 
 235:../Project_Settings/Startup_Code/__arm_start.c **** 
 236:../Project_Settings/Startup_Code/__arm_start.c **** 
 237:../Project_Settings/Startup_Code/__arm_start.c **** 
 238:../Project_Settings/Startup_Code/__arm_start.c **** 
 239:../Project_Settings/Startup_Code/__arm_start.c **** 		//      initialize the floating-point library
 240:../Project_Settings/Startup_Code/__arm_start.c **** 
 241:../Project_Settings/Startup_Code/__arm_start.c **** #ifdef __VFPV4__
 242:../Project_Settings/Startup_Code/__arm_start.c **** 
 243:../Project_Settings/Startup_Code/__arm_start.c **** 		__fp_init();
 244:../Project_Settings/Startup_Code/__arm_start.c **** 
 245:../Project_Settings/Startup_Code/__arm_start.c **** #endif
 246:../Project_Settings/Startup_Code/__arm_start.c **** 
 247:../Project_Settings/Startup_Code/__arm_start.c **** 
 248:../Project_Settings/Startup_Code/__arm_start.c **** 
 249:../Project_Settings/Startup_Code/__arm_start.c **** 		//	call C++ static initializers
 250:../Project_Settings/Startup_Code/__arm_start.c **** 
 251:../Project_Settings/Startup_Code/__arm_start.c **** 		__call_static_initializers();
  54              		.loc 1 251 0
  55 0024 FFF7FEFF 		bl	__init_cpp
  56              	.LVL4:
 252:../Project_Settings/Startup_Code/__arm_start.c **** 
 253:../Project_Settings/Startup_Code/__arm_start.c **** 
 254:../Project_Settings/Startup_Code/__arm_start.c **** 
 255:../Project_Settings/Startup_Code/__arm_start.c **** 		// initializations before main, user specific
 256:../Project_Settings/Startup_Code/__arm_start.c **** 
 257:../Project_Settings/Startup_Code/__arm_start.c **** 		__init_user();
  57              		.loc 1 257 0
  58 0028 FFF7FEFF 		bl	__init_user
  59              	.LVL5:
 258:../Project_Settings/Startup_Code/__arm_start.c **** 
 259:../Project_Settings/Startup_Code/__arm_start.c **** 
 260:../Project_Settings/Startup_Code/__arm_start.c **** 
 261:../Project_Settings/Startup_Code/__arm_start.c **** #if defined(__SEMIHOSTING)
 262:../Project_Settings/Startup_Code/__arm_start.c **** 
 263:../Project_Settings/Startup_Code/__arm_start.c **** 		// semihost initializations
 264:../Project_Settings/Startup_Code/__arm_start.c **** 
 265:../Project_Settings/Startup_Code/__arm_start.c **** 		__init_semihost();
 266:../Project_Settings/Startup_Code/__arm_start.c **** 
 267:../Project_Settings/Startup_Code/__arm_start.c **** #endif
 268:../Project_Settings/Startup_Code/__arm_start.c **** 
 269:../Project_Settings/Startup_Code/__arm_start.c **** 
 270:../Project_Settings/Startup_Code/__arm_start.c **** 
 271:../Project_Settings/Startup_Code/__arm_start.c **** 		//	call main(argc, &argv)
 272:../Project_Settings/Startup_Code/__arm_start.c **** 
 273:../Project_Settings/Startup_Code/__arm_start.c **** #if SUPPORT_SEMIHOST_ARGC_ARGV
 274:../Project_Settings/Startup_Code/__arm_start.c **** 
 275:../Project_Settings/Startup_Code/__arm_start.c **** 		exit(main(__argc_argv(__MAX_CMDLINE_ARGS, argv), argv));
 276:../Project_Settings/Startup_Code/__arm_start.c **** 
 277:../Project_Settings/Startup_Code/__arm_start.c **** #else
 278:../Project_Settings/Startup_Code/__arm_start.c **** 
 279:../Project_Settings/Startup_Code/__arm_start.c **** 		exit(main(0, argv));
  60              		.loc 1 279 0
  61 002c 40F20001 		movw	r1, #:lower16:.LANCHOR0
  62 0030 C0F20001 		movt	r1, #:upper16:.LANCHOR0
  63 0034 0020     		movs	r0, #0
  64 0036 FFF7FEFF 		bl	main
  65              	.LVL6:
  66 003a FFF7FEFF 		bl	exit
  67              	.LVL7:
  68              		.cfi_endproc
  69              	.LFE2:
  71 003e 00BF     		.section	.text.__iar_program_start,"ax",%progbits
  72              		.align	2
  73              		.global	__iar_program_start
  74              		.thumb
  75              		.thumb_func
  77              	__iar_program_start:
  78              	.LFB1:
 161:../Project_Settings/Startup_Code/__arm_start.c **** {
  79              		.loc 1 161 0
  80              		.cfi_startproc
  81              		@ Naked Function: prologue and epilogue provided by programmer.
  82              		@ Volatile: function does not return.
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
 163:../Project_Settings/Startup_Code/__arm_start.c **** 	__thumb_startup();
  85              		.loc 1 163 0
  86 0000 FFF7FEFF 		bl	__thumb_startup
  87              	.LVL8:
  88              		.cfi_endproc
  89              	.LFE1:
  91              		.section	.bss.argv,"aw",%nobits
  92              		.align	2
  93              		.set	.LANCHOR0,. + 0
  96              	argv:
  97 0000 00000000 		.space	4
  98              		.text
  99              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 __arm_start.c
C:\Users\ehughes\AppData\Local\Temp\ccptAtnp.s:19     .text.__thumb_startup:00000000 $t
C:\Users\ehughes\AppData\Local\Temp\ccptAtnp.s:24     .text.__thumb_startup:00000000 __thumb_startup
C:\Users\ehughes\AppData\Local\Temp\ccptAtnp.s:93     .bss.argv:00000000 .LANCHOR0
C:\Users\ehughes\AppData\Local\Temp\ccptAtnp.s:72     .text.__iar_program_start:00000000 $t
C:\Users\ehughes\AppData\Local\Temp\ccptAtnp.s:77     .text.__iar_program_start:00000000 __iar_program_start
C:\Users\ehughes\AppData\Local\Temp\ccptAtnp.s:92     .bss.argv:00000000 $d
C:\Users\ehughes\AppData\Local\Temp\ccptAtnp.s:96     .bss.argv:00000000 argv
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__init_registers
__init_hardware
__START_BSS
__END_BSS
memset
__copy_rom_sections_to_ram
__init_cpp
__init_user
main
exit
