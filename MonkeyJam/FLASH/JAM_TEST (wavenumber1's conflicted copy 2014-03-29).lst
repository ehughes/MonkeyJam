
JAM_TEST.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .interrupts   000000f8  00000000  00000000  000000d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000be58  00000800  00000800  000001d0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .data         0000002c  1fffe000  0000c658  0000c028  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000a20  1fffe030  0000c688  0000c078  2**3
                  ALLOC
  4 ._user_heap_stack 00000800  1fffea50  0000d0a8  0000c078  2**0
                  ALLOC
  5 .romp         00000024  20000000  0000c684  0000c054  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .ARM.attributes 00000033  00000000  00000000  0000c078  2**0
                  CONTENTS, READONLY
  7 .debug_info   00009f37  00000000  00000000  0000c0ab  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00002f16  00000000  00000000  00015fe2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 000009c0  00000000  00000000  00018ef8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_macinfo 00250b66  00000000  00000000  000198b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   000060a5  00000000  00000000  0026a41e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    000023df  00000000  00000000  002704c3  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .comment      00000079  00000000  00000000  002728a2  2**0
                  CONTENTS, READONLY
 14 .debug_frame  00001250  00000000  00000000  0027291c  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    0000772d  00000000  00000000  00273b6c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000800 <__aeabi_drsub>:
     800:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
     804:	e002      	b.n	80c <__adddf3>
     806:	bf00      	nop

00000808 <__aeabi_dsub>:
     808:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0000080c <__adddf3>:
     80c:	b530      	push	{r4, r5, lr}
     80e:	ea4f 0441 	mov.w	r4, r1, lsl #1
     812:	ea4f 0543 	mov.w	r5, r3, lsl #1
     816:	ea94 0f05 	teq	r4, r5
     81a:	bf08      	it	eq
     81c:	ea90 0f02 	teqeq	r0, r2
     820:	bf1f      	itttt	ne
     822:	ea54 0c00 	orrsne.w	ip, r4, r0
     826:	ea55 0c02 	orrsne.w	ip, r5, r2
     82a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
     82e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
     832:	f000 80e2 	beq.w	9fa <__adddf3+0x1ee>
     836:	ea4f 5454 	mov.w	r4, r4, lsr #21
     83a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
     83e:	bfb8      	it	lt
     840:	426d      	neglt	r5, r5
     842:	dd0c      	ble.n	85e <__adddf3+0x52>
     844:	442c      	add	r4, r5
     846:	ea80 0202 	eor.w	r2, r0, r2
     84a:	ea81 0303 	eor.w	r3, r1, r3
     84e:	ea82 0000 	eor.w	r0, r2, r0
     852:	ea83 0101 	eor.w	r1, r3, r1
     856:	ea80 0202 	eor.w	r2, r0, r2
     85a:	ea81 0303 	eor.w	r3, r1, r3
     85e:	2d36      	cmp	r5, #54	; 0x36
     860:	bf88      	it	hi
     862:	bd30      	pophi	{r4, r5, pc}
     864:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
     868:	ea4f 3101 	mov.w	r1, r1, lsl #12
     86c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
     870:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
     874:	d002      	beq.n	87c <__adddf3+0x70>
     876:	4240      	negs	r0, r0
     878:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
     87c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
     880:	ea4f 3303 	mov.w	r3, r3, lsl #12
     884:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
     888:	d002      	beq.n	890 <__adddf3+0x84>
     88a:	4252      	negs	r2, r2
     88c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
     890:	ea94 0f05 	teq	r4, r5
     894:	f000 80a7 	beq.w	9e6 <__adddf3+0x1da>
     898:	f1a4 0401 	sub.w	r4, r4, #1
     89c:	f1d5 0e20 	rsbs	lr, r5, #32
     8a0:	db0d      	blt.n	8be <__adddf3+0xb2>
     8a2:	fa02 fc0e 	lsl.w	ip, r2, lr
     8a6:	fa22 f205 	lsr.w	r2, r2, r5
     8aa:	1880      	adds	r0, r0, r2
     8ac:	f141 0100 	adc.w	r1, r1, #0
     8b0:	fa03 f20e 	lsl.w	r2, r3, lr
     8b4:	1880      	adds	r0, r0, r2
     8b6:	fa43 f305 	asr.w	r3, r3, r5
     8ba:	4159      	adcs	r1, r3
     8bc:	e00e      	b.n	8dc <__adddf3+0xd0>
     8be:	f1a5 0520 	sub.w	r5, r5, #32
     8c2:	f10e 0e20 	add.w	lr, lr, #32
     8c6:	2a01      	cmp	r2, #1
     8c8:	fa03 fc0e 	lsl.w	ip, r3, lr
     8cc:	bf28      	it	cs
     8ce:	f04c 0c02 	orrcs.w	ip, ip, #2
     8d2:	fa43 f305 	asr.w	r3, r3, r5
     8d6:	18c0      	adds	r0, r0, r3
     8d8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
     8dc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
     8e0:	d507      	bpl.n	8f2 <__adddf3+0xe6>
     8e2:	f04f 0e00 	mov.w	lr, #0
     8e6:	f1dc 0c00 	rsbs	ip, ip, #0
     8ea:	eb7e 0000 	sbcs.w	r0, lr, r0
     8ee:	eb6e 0101 	sbc.w	r1, lr, r1
     8f2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
     8f6:	d31b      	bcc.n	930 <__adddf3+0x124>
     8f8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
     8fc:	d30c      	bcc.n	918 <__adddf3+0x10c>
     8fe:	0849      	lsrs	r1, r1, #1
     900:	ea5f 0030 	movs.w	r0, r0, rrx
     904:	ea4f 0c3c 	mov.w	ip, ip, rrx
     908:	f104 0401 	add.w	r4, r4, #1
     90c:	ea4f 5244 	mov.w	r2, r4, lsl #21
     910:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
     914:	f080 809a 	bcs.w	a4c <__adddf3+0x240>
     918:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
     91c:	bf08      	it	eq
     91e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
     922:	f150 0000 	adcs.w	r0, r0, #0
     926:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
     92a:	ea41 0105 	orr.w	r1, r1, r5
     92e:	bd30      	pop	{r4, r5, pc}
     930:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
     934:	4140      	adcs	r0, r0
     936:	eb41 0101 	adc.w	r1, r1, r1
     93a:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
     93e:	f1a4 0401 	sub.w	r4, r4, #1
     942:	d1e9      	bne.n	918 <__adddf3+0x10c>
     944:	f091 0f00 	teq	r1, #0
     948:	bf04      	itt	eq
     94a:	4601      	moveq	r1, r0
     94c:	2000      	moveq	r0, #0
     94e:	fab1 f381 	clz	r3, r1
     952:	bf08      	it	eq
     954:	3320      	addeq	r3, #32
     956:	f1a3 030b 	sub.w	r3, r3, #11
     95a:	f1b3 0220 	subs.w	r2, r3, #32
     95e:	da0c      	bge.n	97a <__adddf3+0x16e>
     960:	320c      	adds	r2, #12
     962:	dd08      	ble.n	976 <__adddf3+0x16a>
     964:	f102 0c14 	add.w	ip, r2, #20
     968:	f1c2 020c 	rsb	r2, r2, #12
     96c:	fa01 f00c 	lsl.w	r0, r1, ip
     970:	fa21 f102 	lsr.w	r1, r1, r2
     974:	e00c      	b.n	990 <__adddf3+0x184>
     976:	f102 0214 	add.w	r2, r2, #20
     97a:	bfd8      	it	le
     97c:	f1c2 0c20 	rsble	ip, r2, #32
     980:	fa01 f102 	lsl.w	r1, r1, r2
     984:	fa20 fc0c 	lsr.w	ip, r0, ip
     988:	bfdc      	itt	le
     98a:	ea41 010c 	orrle.w	r1, r1, ip
     98e:	4090      	lslle	r0, r2
     990:	1ae4      	subs	r4, r4, r3
     992:	bfa2      	ittt	ge
     994:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
     998:	4329      	orrge	r1, r5
     99a:	bd30      	popge	{r4, r5, pc}
     99c:	ea6f 0404 	mvn.w	r4, r4
     9a0:	3c1f      	subs	r4, #31
     9a2:	da1c      	bge.n	9de <__adddf3+0x1d2>
     9a4:	340c      	adds	r4, #12
     9a6:	dc0e      	bgt.n	9c6 <__adddf3+0x1ba>
     9a8:	f104 0414 	add.w	r4, r4, #20
     9ac:	f1c4 0220 	rsb	r2, r4, #32
     9b0:	fa20 f004 	lsr.w	r0, r0, r4
     9b4:	fa01 f302 	lsl.w	r3, r1, r2
     9b8:	ea40 0003 	orr.w	r0, r0, r3
     9bc:	fa21 f304 	lsr.w	r3, r1, r4
     9c0:	ea45 0103 	orr.w	r1, r5, r3
     9c4:	bd30      	pop	{r4, r5, pc}
     9c6:	f1c4 040c 	rsb	r4, r4, #12
     9ca:	f1c4 0220 	rsb	r2, r4, #32
     9ce:	fa20 f002 	lsr.w	r0, r0, r2
     9d2:	fa01 f304 	lsl.w	r3, r1, r4
     9d6:	ea40 0003 	orr.w	r0, r0, r3
     9da:	4629      	mov	r1, r5
     9dc:	bd30      	pop	{r4, r5, pc}
     9de:	fa21 f004 	lsr.w	r0, r1, r4
     9e2:	4629      	mov	r1, r5
     9e4:	bd30      	pop	{r4, r5, pc}
     9e6:	f094 0f00 	teq	r4, #0
     9ea:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
     9ee:	bf06      	itte	eq
     9f0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
     9f4:	3401      	addeq	r4, #1
     9f6:	3d01      	subne	r5, #1
     9f8:	e74e      	b.n	898 <__adddf3+0x8c>
     9fa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
     9fe:	bf18      	it	ne
     a00:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
     a04:	d029      	beq.n	a5a <__adddf3+0x24e>
     a06:	ea94 0f05 	teq	r4, r5
     a0a:	bf08      	it	eq
     a0c:	ea90 0f02 	teqeq	r0, r2
     a10:	d005      	beq.n	a1e <__adddf3+0x212>
     a12:	ea54 0c00 	orrs.w	ip, r4, r0
     a16:	bf04      	itt	eq
     a18:	4619      	moveq	r1, r3
     a1a:	4610      	moveq	r0, r2
     a1c:	bd30      	pop	{r4, r5, pc}
     a1e:	ea91 0f03 	teq	r1, r3
     a22:	bf1e      	ittt	ne
     a24:	2100      	movne	r1, #0
     a26:	2000      	movne	r0, #0
     a28:	bd30      	popne	{r4, r5, pc}
     a2a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
     a2e:	d105      	bne.n	a3c <__adddf3+0x230>
     a30:	0040      	lsls	r0, r0, #1
     a32:	4149      	adcs	r1, r1
     a34:	bf28      	it	cs
     a36:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
     a3a:	bd30      	pop	{r4, r5, pc}
     a3c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
     a40:	bf3c      	itt	cc
     a42:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
     a46:	bd30      	popcc	{r4, r5, pc}
     a48:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
     a4c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
     a50:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
     a54:	f04f 0000 	mov.w	r0, #0
     a58:	bd30      	pop	{r4, r5, pc}
     a5a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
     a5e:	bf1a      	itte	ne
     a60:	4619      	movne	r1, r3
     a62:	4610      	movne	r0, r2
     a64:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
     a68:	bf1c      	itt	ne
     a6a:	460b      	movne	r3, r1
     a6c:	4602      	movne	r2, r0
     a6e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
     a72:	bf06      	itte	eq
     a74:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
     a78:	ea91 0f03 	teqeq	r1, r3
     a7c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
     a80:	bd30      	pop	{r4, r5, pc}
     a82:	bf00      	nop

00000a84 <__aeabi_ui2d>:
     a84:	f090 0f00 	teq	r0, #0
     a88:	bf04      	itt	eq
     a8a:	2100      	moveq	r1, #0
     a8c:	4770      	bxeq	lr
     a8e:	b530      	push	{r4, r5, lr}
     a90:	f44f 6480 	mov.w	r4, #1024	; 0x400
     a94:	f104 0432 	add.w	r4, r4, #50	; 0x32
     a98:	f04f 0500 	mov.w	r5, #0
     a9c:	f04f 0100 	mov.w	r1, #0
     aa0:	e750      	b.n	944 <__adddf3+0x138>
     aa2:	bf00      	nop

00000aa4 <__aeabi_i2d>:
     aa4:	f090 0f00 	teq	r0, #0
     aa8:	bf04      	itt	eq
     aaa:	2100      	moveq	r1, #0
     aac:	4770      	bxeq	lr
     aae:	b530      	push	{r4, r5, lr}
     ab0:	f44f 6480 	mov.w	r4, #1024	; 0x400
     ab4:	f104 0432 	add.w	r4, r4, #50	; 0x32
     ab8:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
     abc:	bf48      	it	mi
     abe:	4240      	negmi	r0, r0
     ac0:	f04f 0100 	mov.w	r1, #0
     ac4:	e73e      	b.n	944 <__adddf3+0x138>
     ac6:	bf00      	nop

00000ac8 <__aeabi_f2d>:
     ac8:	0042      	lsls	r2, r0, #1
     aca:	ea4f 01e2 	mov.w	r1, r2, asr #3
     ace:	ea4f 0131 	mov.w	r1, r1, rrx
     ad2:	ea4f 7002 	mov.w	r0, r2, lsl #28
     ad6:	bf1f      	itttt	ne
     ad8:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
     adc:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
     ae0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
     ae4:	4770      	bxne	lr
     ae6:	f092 0f00 	teq	r2, #0
     aea:	bf14      	ite	ne
     aec:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
     af0:	4770      	bxeq	lr
     af2:	b530      	push	{r4, r5, lr}
     af4:	f44f 7460 	mov.w	r4, #896	; 0x380
     af8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
     afc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
     b00:	e720      	b.n	944 <__adddf3+0x138>
     b02:	bf00      	nop

00000b04 <__aeabi_ul2d>:
     b04:	ea50 0201 	orrs.w	r2, r0, r1
     b08:	bf08      	it	eq
     b0a:	4770      	bxeq	lr
     b0c:	b530      	push	{r4, r5, lr}
     b0e:	f04f 0500 	mov.w	r5, #0
     b12:	e00a      	b.n	b2a <__aeabi_l2d+0x16>

00000b14 <__aeabi_l2d>:
     b14:	ea50 0201 	orrs.w	r2, r0, r1
     b18:	bf08      	it	eq
     b1a:	4770      	bxeq	lr
     b1c:	b530      	push	{r4, r5, lr}
     b1e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
     b22:	d502      	bpl.n	b2a <__aeabi_l2d+0x16>
     b24:	4240      	negs	r0, r0
     b26:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
     b2a:	f44f 6480 	mov.w	r4, #1024	; 0x400
     b2e:	f104 0432 	add.w	r4, r4, #50	; 0x32
     b32:	ea5f 5c91 	movs.w	ip, r1, lsr #22
     b36:	f43f aedc 	beq.w	8f2 <__adddf3+0xe6>
     b3a:	f04f 0203 	mov.w	r2, #3
     b3e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
     b42:	bf18      	it	ne
     b44:	3203      	addne	r2, #3
     b46:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
     b4a:	bf18      	it	ne
     b4c:	3203      	addne	r2, #3
     b4e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
     b52:	f1c2 0320 	rsb	r3, r2, #32
     b56:	fa00 fc03 	lsl.w	ip, r0, r3
     b5a:	fa20 f002 	lsr.w	r0, r0, r2
     b5e:	fa01 fe03 	lsl.w	lr, r1, r3
     b62:	ea40 000e 	orr.w	r0, r0, lr
     b66:	fa21 f102 	lsr.w	r1, r1, r2
     b6a:	4414      	add	r4, r2
     b6c:	e6c1      	b.n	8f2 <__adddf3+0xe6>
     b6e:	bf00      	nop

00000b70 <__aeabi_dmul>:
     b70:	b570      	push	{r4, r5, r6, lr}
     b72:	f04f 0cff 	mov.w	ip, #255	; 0xff
     b76:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
     b7a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
     b7e:	bf1d      	ittte	ne
     b80:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
     b84:	ea94 0f0c 	teqne	r4, ip
     b88:	ea95 0f0c 	teqne	r5, ip
     b8c:	f000 f8de 	bleq	d4c <__aeabi_dmul+0x1dc>
     b90:	442c      	add	r4, r5
     b92:	ea81 0603 	eor.w	r6, r1, r3
     b96:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
     b9a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
     b9e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
     ba2:	bf18      	it	ne
     ba4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
     ba8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
     bac:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
     bb0:	d038      	beq.n	c24 <__aeabi_dmul+0xb4>
     bb2:	fba0 ce02 	umull	ip, lr, r0, r2
     bb6:	f04f 0500 	mov.w	r5, #0
     bba:	fbe1 e502 	umlal	lr, r5, r1, r2
     bbe:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
     bc2:	fbe0 e503 	umlal	lr, r5, r0, r3
     bc6:	f04f 0600 	mov.w	r6, #0
     bca:	fbe1 5603 	umlal	r5, r6, r1, r3
     bce:	f09c 0f00 	teq	ip, #0
     bd2:	bf18      	it	ne
     bd4:	f04e 0e01 	orrne.w	lr, lr, #1
     bd8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
     bdc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
     be0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
     be4:	d204      	bcs.n	bf0 <__aeabi_dmul+0x80>
     be6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
     bea:	416d      	adcs	r5, r5
     bec:	eb46 0606 	adc.w	r6, r6, r6
     bf0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
     bf4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
     bf8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
     bfc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
     c00:	ea4f 2ece 	mov.w	lr, lr, lsl #11
     c04:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
     c08:	bf88      	it	hi
     c0a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
     c0e:	d81e      	bhi.n	c4e <__aeabi_dmul+0xde>
     c10:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
     c14:	bf08      	it	eq
     c16:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
     c1a:	f150 0000 	adcs.w	r0, r0, #0
     c1e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
     c22:	bd70      	pop	{r4, r5, r6, pc}
     c24:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
     c28:	ea46 0101 	orr.w	r1, r6, r1
     c2c:	ea40 0002 	orr.w	r0, r0, r2
     c30:	ea81 0103 	eor.w	r1, r1, r3
     c34:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
     c38:	bfc2      	ittt	gt
     c3a:	ebd4 050c 	rsbsgt	r5, r4, ip
     c3e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
     c42:	bd70      	popgt	{r4, r5, r6, pc}
     c44:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
     c48:	f04f 0e00 	mov.w	lr, #0
     c4c:	3c01      	subs	r4, #1
     c4e:	f300 80ab 	bgt.w	da8 <__aeabi_dmul+0x238>
     c52:	f114 0f36 	cmn.w	r4, #54	; 0x36
     c56:	bfde      	ittt	le
     c58:	2000      	movle	r0, #0
     c5a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
     c5e:	bd70      	pople	{r4, r5, r6, pc}
     c60:	f1c4 0400 	rsb	r4, r4, #0
     c64:	3c20      	subs	r4, #32
     c66:	da35      	bge.n	cd4 <__aeabi_dmul+0x164>
     c68:	340c      	adds	r4, #12
     c6a:	dc1b      	bgt.n	ca4 <__aeabi_dmul+0x134>
     c6c:	f104 0414 	add.w	r4, r4, #20
     c70:	f1c4 0520 	rsb	r5, r4, #32
     c74:	fa00 f305 	lsl.w	r3, r0, r5
     c78:	fa20 f004 	lsr.w	r0, r0, r4
     c7c:	fa01 f205 	lsl.w	r2, r1, r5
     c80:	ea40 0002 	orr.w	r0, r0, r2
     c84:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
     c88:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
     c8c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
     c90:	fa21 f604 	lsr.w	r6, r1, r4
     c94:	eb42 0106 	adc.w	r1, r2, r6
     c98:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
     c9c:	bf08      	it	eq
     c9e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
     ca2:	bd70      	pop	{r4, r5, r6, pc}
     ca4:	f1c4 040c 	rsb	r4, r4, #12
     ca8:	f1c4 0520 	rsb	r5, r4, #32
     cac:	fa00 f304 	lsl.w	r3, r0, r4
     cb0:	fa20 f005 	lsr.w	r0, r0, r5
     cb4:	fa01 f204 	lsl.w	r2, r1, r4
     cb8:	ea40 0002 	orr.w	r0, r0, r2
     cbc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
     cc0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
     cc4:	f141 0100 	adc.w	r1, r1, #0
     cc8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
     ccc:	bf08      	it	eq
     cce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
     cd2:	bd70      	pop	{r4, r5, r6, pc}
     cd4:	f1c4 0520 	rsb	r5, r4, #32
     cd8:	fa00 f205 	lsl.w	r2, r0, r5
     cdc:	ea4e 0e02 	orr.w	lr, lr, r2
     ce0:	fa20 f304 	lsr.w	r3, r0, r4
     ce4:	fa01 f205 	lsl.w	r2, r1, r5
     ce8:	ea43 0302 	orr.w	r3, r3, r2
     cec:	fa21 f004 	lsr.w	r0, r1, r4
     cf0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
     cf4:	fa21 f204 	lsr.w	r2, r1, r4
     cf8:	ea20 0002 	bic.w	r0, r0, r2
     cfc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
     d00:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
     d04:	bf08      	it	eq
     d06:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
     d0a:	bd70      	pop	{r4, r5, r6, pc}
     d0c:	f094 0f00 	teq	r4, #0
     d10:	d10f      	bne.n	d32 <__aeabi_dmul+0x1c2>
     d12:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
     d16:	0040      	lsls	r0, r0, #1
     d18:	eb41 0101 	adc.w	r1, r1, r1
     d1c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
     d20:	bf08      	it	eq
     d22:	3c01      	subeq	r4, #1
     d24:	d0f7      	beq.n	d16 <__aeabi_dmul+0x1a6>
     d26:	ea41 0106 	orr.w	r1, r1, r6
     d2a:	f095 0f00 	teq	r5, #0
     d2e:	bf18      	it	ne
     d30:	4770      	bxne	lr
     d32:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
     d36:	0052      	lsls	r2, r2, #1
     d38:	eb43 0303 	adc.w	r3, r3, r3
     d3c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
     d40:	bf08      	it	eq
     d42:	3d01      	subeq	r5, #1
     d44:	d0f7      	beq.n	d36 <__aeabi_dmul+0x1c6>
     d46:	ea43 0306 	orr.w	r3, r3, r6
     d4a:	4770      	bx	lr
     d4c:	ea94 0f0c 	teq	r4, ip
     d50:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
     d54:	bf18      	it	ne
     d56:	ea95 0f0c 	teqne	r5, ip
     d5a:	d00c      	beq.n	d76 <__aeabi_dmul+0x206>
     d5c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
     d60:	bf18      	it	ne
     d62:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
     d66:	d1d1      	bne.n	d0c <__aeabi_dmul+0x19c>
     d68:	ea81 0103 	eor.w	r1, r1, r3
     d6c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
     d70:	f04f 0000 	mov.w	r0, #0
     d74:	bd70      	pop	{r4, r5, r6, pc}
     d76:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
     d7a:	bf06      	itte	eq
     d7c:	4610      	moveq	r0, r2
     d7e:	4619      	moveq	r1, r3
     d80:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
     d84:	d019      	beq.n	dba <__aeabi_dmul+0x24a>
     d86:	ea94 0f0c 	teq	r4, ip
     d8a:	d102      	bne.n	d92 <__aeabi_dmul+0x222>
     d8c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
     d90:	d113      	bne.n	dba <__aeabi_dmul+0x24a>
     d92:	ea95 0f0c 	teq	r5, ip
     d96:	d105      	bne.n	da4 <__aeabi_dmul+0x234>
     d98:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
     d9c:	bf1c      	itt	ne
     d9e:	4610      	movne	r0, r2
     da0:	4619      	movne	r1, r3
     da2:	d10a      	bne.n	dba <__aeabi_dmul+0x24a>
     da4:	ea81 0103 	eor.w	r1, r1, r3
     da8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
     dac:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
     db0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
     db4:	f04f 0000 	mov.w	r0, #0
     db8:	bd70      	pop	{r4, r5, r6, pc}
     dba:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
     dbe:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
     dc2:	bd70      	pop	{r4, r5, r6, pc}

00000dc4 <__aeabi_ddiv>:
     dc4:	b570      	push	{r4, r5, r6, lr}
     dc6:	f04f 0cff 	mov.w	ip, #255	; 0xff
     dca:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
     dce:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
     dd2:	bf1d      	ittte	ne
     dd4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
     dd8:	ea94 0f0c 	teqne	r4, ip
     ddc:	ea95 0f0c 	teqne	r5, ip
     de0:	f000 f8a7 	bleq	f32 <__aeabi_ddiv+0x16e>
     de4:	eba4 0405 	sub.w	r4, r4, r5
     de8:	ea81 0e03 	eor.w	lr, r1, r3
     dec:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
     df0:	ea4f 3101 	mov.w	r1, r1, lsl #12
     df4:	f000 8088 	beq.w	f08 <__aeabi_ddiv+0x144>
     df8:	ea4f 3303 	mov.w	r3, r3, lsl #12
     dfc:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
     e00:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
     e04:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
     e08:	ea4f 2202 	mov.w	r2, r2, lsl #8
     e0c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
     e10:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
     e14:	ea4f 2600 	mov.w	r6, r0, lsl #8
     e18:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
     e1c:	429d      	cmp	r5, r3
     e1e:	bf08      	it	eq
     e20:	4296      	cmpeq	r6, r2
     e22:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
     e26:	f504 7440 	add.w	r4, r4, #768	; 0x300
     e2a:	d202      	bcs.n	e32 <__aeabi_ddiv+0x6e>
     e2c:	085b      	lsrs	r3, r3, #1
     e2e:	ea4f 0232 	mov.w	r2, r2, rrx
     e32:	1ab6      	subs	r6, r6, r2
     e34:	eb65 0503 	sbc.w	r5, r5, r3
     e38:	085b      	lsrs	r3, r3, #1
     e3a:	ea4f 0232 	mov.w	r2, r2, rrx
     e3e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
     e42:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
     e46:	ebb6 0e02 	subs.w	lr, r6, r2
     e4a:	eb75 0e03 	sbcs.w	lr, r5, r3
     e4e:	bf22      	ittt	cs
     e50:	1ab6      	subcs	r6, r6, r2
     e52:	4675      	movcs	r5, lr
     e54:	ea40 000c 	orrcs.w	r0, r0, ip
     e58:	085b      	lsrs	r3, r3, #1
     e5a:	ea4f 0232 	mov.w	r2, r2, rrx
     e5e:	ebb6 0e02 	subs.w	lr, r6, r2
     e62:	eb75 0e03 	sbcs.w	lr, r5, r3
     e66:	bf22      	ittt	cs
     e68:	1ab6      	subcs	r6, r6, r2
     e6a:	4675      	movcs	r5, lr
     e6c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
     e70:	085b      	lsrs	r3, r3, #1
     e72:	ea4f 0232 	mov.w	r2, r2, rrx
     e76:	ebb6 0e02 	subs.w	lr, r6, r2
     e7a:	eb75 0e03 	sbcs.w	lr, r5, r3
     e7e:	bf22      	ittt	cs
     e80:	1ab6      	subcs	r6, r6, r2
     e82:	4675      	movcs	r5, lr
     e84:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
     e88:	085b      	lsrs	r3, r3, #1
     e8a:	ea4f 0232 	mov.w	r2, r2, rrx
     e8e:	ebb6 0e02 	subs.w	lr, r6, r2
     e92:	eb75 0e03 	sbcs.w	lr, r5, r3
     e96:	bf22      	ittt	cs
     e98:	1ab6      	subcs	r6, r6, r2
     e9a:	4675      	movcs	r5, lr
     e9c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
     ea0:	ea55 0e06 	orrs.w	lr, r5, r6
     ea4:	d018      	beq.n	ed8 <__aeabi_ddiv+0x114>
     ea6:	ea4f 1505 	mov.w	r5, r5, lsl #4
     eaa:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
     eae:	ea4f 1606 	mov.w	r6, r6, lsl #4
     eb2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
     eb6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
     eba:	ea4f 02c2 	mov.w	r2, r2, lsl #3
     ebe:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
     ec2:	d1c0      	bne.n	e46 <__aeabi_ddiv+0x82>
     ec4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
     ec8:	d10b      	bne.n	ee2 <__aeabi_ddiv+0x11e>
     eca:	ea41 0100 	orr.w	r1, r1, r0
     ece:	f04f 0000 	mov.w	r0, #0
     ed2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
     ed6:	e7b6      	b.n	e46 <__aeabi_ddiv+0x82>
     ed8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
     edc:	bf04      	itt	eq
     ede:	4301      	orreq	r1, r0
     ee0:	2000      	moveq	r0, #0
     ee2:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
     ee6:	bf88      	it	hi
     ee8:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
     eec:	f63f aeaf 	bhi.w	c4e <__aeabi_dmul+0xde>
     ef0:	ebb5 0c03 	subs.w	ip, r5, r3
     ef4:	bf04      	itt	eq
     ef6:	ebb6 0c02 	subseq.w	ip, r6, r2
     efa:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
     efe:	f150 0000 	adcs.w	r0, r0, #0
     f02:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
     f06:	bd70      	pop	{r4, r5, r6, pc}
     f08:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
     f0c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
     f10:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
     f14:	bfc2      	ittt	gt
     f16:	ebd4 050c 	rsbsgt	r5, r4, ip
     f1a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
     f1e:	bd70      	popgt	{r4, r5, r6, pc}
     f20:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
     f24:	f04f 0e00 	mov.w	lr, #0
     f28:	3c01      	subs	r4, #1
     f2a:	e690      	b.n	c4e <__aeabi_dmul+0xde>
     f2c:	ea45 0e06 	orr.w	lr, r5, r6
     f30:	e68d      	b.n	c4e <__aeabi_dmul+0xde>
     f32:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
     f36:	ea94 0f0c 	teq	r4, ip
     f3a:	bf08      	it	eq
     f3c:	ea95 0f0c 	teqeq	r5, ip
     f40:	f43f af3b 	beq.w	dba <__aeabi_dmul+0x24a>
     f44:	ea94 0f0c 	teq	r4, ip
     f48:	d10a      	bne.n	f60 <__aeabi_ddiv+0x19c>
     f4a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
     f4e:	f47f af34 	bne.w	dba <__aeabi_dmul+0x24a>
     f52:	ea95 0f0c 	teq	r5, ip
     f56:	f47f af25 	bne.w	da4 <__aeabi_dmul+0x234>
     f5a:	4610      	mov	r0, r2
     f5c:	4619      	mov	r1, r3
     f5e:	e72c      	b.n	dba <__aeabi_dmul+0x24a>
     f60:	ea95 0f0c 	teq	r5, ip
     f64:	d106      	bne.n	f74 <__aeabi_ddiv+0x1b0>
     f66:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
     f6a:	f43f aefd 	beq.w	d68 <__aeabi_dmul+0x1f8>
     f6e:	4610      	mov	r0, r2
     f70:	4619      	mov	r1, r3
     f72:	e722      	b.n	dba <__aeabi_dmul+0x24a>
     f74:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
     f78:	bf18      	it	ne
     f7a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
     f7e:	f47f aec5 	bne.w	d0c <__aeabi_dmul+0x19c>
     f82:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
     f86:	f47f af0d 	bne.w	da4 <__aeabi_dmul+0x234>
     f8a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
     f8e:	f47f aeeb 	bne.w	d68 <__aeabi_dmul+0x1f8>
     f92:	e712      	b.n	dba <__aeabi_dmul+0x24a>

00000f94 <__gedf2>:
     f94:	f04f 3cff 	mov.w	ip, #4294967295
     f98:	e006      	b.n	fa8 <__cmpdf2+0x4>
     f9a:	bf00      	nop

00000f9c <__ledf2>:
     f9c:	f04f 0c01 	mov.w	ip, #1
     fa0:	e002      	b.n	fa8 <__cmpdf2+0x4>
     fa2:	bf00      	nop

00000fa4 <__cmpdf2>:
     fa4:	f04f 0c01 	mov.w	ip, #1
     fa8:	f84d cd04 	str.w	ip, [sp, #-4]!
     fac:	ea4f 0c41 	mov.w	ip, r1, lsl #1
     fb0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
     fb4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
     fb8:	bf18      	it	ne
     fba:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
     fbe:	d01b      	beq.n	ff8 <__cmpdf2+0x54>
     fc0:	b001      	add	sp, #4
     fc2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
     fc6:	bf0c      	ite	eq
     fc8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
     fcc:	ea91 0f03 	teqne	r1, r3
     fd0:	bf02      	ittt	eq
     fd2:	ea90 0f02 	teqeq	r0, r2
     fd6:	2000      	moveq	r0, #0
     fd8:	4770      	bxeq	lr
     fda:	f110 0f00 	cmn.w	r0, #0
     fde:	ea91 0f03 	teq	r1, r3
     fe2:	bf58      	it	pl
     fe4:	4299      	cmppl	r1, r3
     fe6:	bf08      	it	eq
     fe8:	4290      	cmpeq	r0, r2
     fea:	bf2c      	ite	cs
     fec:	17d8      	asrcs	r0, r3, #31
     fee:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
     ff2:	f040 0001 	orr.w	r0, r0, #1
     ff6:	4770      	bx	lr
     ff8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
     ffc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    1000:	d102      	bne.n	1008 <__cmpdf2+0x64>
    1002:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
    1006:	d107      	bne.n	1018 <__cmpdf2+0x74>
    1008:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    100c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    1010:	d1d6      	bne.n	fc0 <__cmpdf2+0x1c>
    1012:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
    1016:	d0d3      	beq.n	fc0 <__cmpdf2+0x1c>
    1018:	f85d 0b04 	ldr.w	r0, [sp], #4
    101c:	4770      	bx	lr
    101e:	bf00      	nop

00001020 <__aeabi_cdrcmple>:
    1020:	4684      	mov	ip, r0
    1022:	4610      	mov	r0, r2
    1024:	4662      	mov	r2, ip
    1026:	468c      	mov	ip, r1
    1028:	4619      	mov	r1, r3
    102a:	4663      	mov	r3, ip
    102c:	e000      	b.n	1030 <__aeabi_cdcmpeq>
    102e:	bf00      	nop

00001030 <__aeabi_cdcmpeq>:
    1030:	b501      	push	{r0, lr}
    1032:	f7ff ffb7 	bl	fa4 <__cmpdf2>
    1036:	2800      	cmp	r0, #0
    1038:	bf48      	it	mi
    103a:	f110 0f00 	cmnmi.w	r0, #0
    103e:	bd01      	pop	{r0, pc}

00001040 <__aeabi_dcmpeq>:
    1040:	f84d ed08 	str.w	lr, [sp, #-8]!
    1044:	f7ff fff4 	bl	1030 <__aeabi_cdcmpeq>
    1048:	bf0c      	ite	eq
    104a:	2001      	moveq	r0, #1
    104c:	2000      	movne	r0, #0
    104e:	f85d fb08 	ldr.w	pc, [sp], #8
    1052:	bf00      	nop

00001054 <__aeabi_dcmplt>:
    1054:	f84d ed08 	str.w	lr, [sp, #-8]!
    1058:	f7ff ffea 	bl	1030 <__aeabi_cdcmpeq>
    105c:	bf34      	ite	cc
    105e:	2001      	movcc	r0, #1
    1060:	2000      	movcs	r0, #0
    1062:	f85d fb08 	ldr.w	pc, [sp], #8
    1066:	bf00      	nop

00001068 <__aeabi_dcmple>:
    1068:	f84d ed08 	str.w	lr, [sp, #-8]!
    106c:	f7ff ffe0 	bl	1030 <__aeabi_cdcmpeq>
    1070:	bf94      	ite	ls
    1072:	2001      	movls	r0, #1
    1074:	2000      	movhi	r0, #0
    1076:	f85d fb08 	ldr.w	pc, [sp], #8
    107a:	bf00      	nop

0000107c <__aeabi_dcmpge>:
    107c:	f84d ed08 	str.w	lr, [sp, #-8]!
    1080:	f7ff ffce 	bl	1020 <__aeabi_cdrcmple>
    1084:	bf94      	ite	ls
    1086:	2001      	movls	r0, #1
    1088:	2000      	movhi	r0, #0
    108a:	f85d fb08 	ldr.w	pc, [sp], #8
    108e:	bf00      	nop

00001090 <__aeabi_dcmpgt>:
    1090:	f84d ed08 	str.w	lr, [sp, #-8]!
    1094:	f7ff ffc4 	bl	1020 <__aeabi_cdrcmple>
    1098:	bf34      	ite	cc
    109a:	2001      	movcc	r0, #1
    109c:	2000      	movcs	r0, #0
    109e:	f85d fb08 	ldr.w	pc, [sp], #8
    10a2:	bf00      	nop

000010a4 <__aeabi_d2iz>:
    10a4:	ea4f 0241 	mov.w	r2, r1, lsl #1
    10a8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
    10ac:	d215      	bcs.n	10da <__aeabi_d2iz+0x36>
    10ae:	d511      	bpl.n	10d4 <__aeabi_d2iz+0x30>
    10b0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
    10b4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
    10b8:	d912      	bls.n	10e0 <__aeabi_d2iz+0x3c>
    10ba:	ea4f 23c1 	mov.w	r3, r1, lsl #11
    10be:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
    10c2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
    10c6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
    10ca:	fa23 f002 	lsr.w	r0, r3, r2
    10ce:	bf18      	it	ne
    10d0:	4240      	negne	r0, r0
    10d2:	4770      	bx	lr
    10d4:	f04f 0000 	mov.w	r0, #0
    10d8:	4770      	bx	lr
    10da:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
    10de:	d105      	bne.n	10ec <__aeabi_d2iz+0x48>
    10e0:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
    10e4:	bf08      	it	eq
    10e6:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
    10ea:	4770      	bx	lr
    10ec:	f04f 0000 	mov.w	r0, #0
    10f0:	4770      	bx	lr
    10f2:	bf00      	nop

000010f4 <__aeabi_d2f>:
    10f4:	ea4f 0241 	mov.w	r2, r1, lsl #1
    10f8:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
    10fc:	bf24      	itt	cs
    10fe:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
    1102:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
    1106:	d90d      	bls.n	1124 <__aeabi_d2f+0x30>
    1108:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
    110c:	ea4f 02c0 	mov.w	r2, r0, lsl #3
    1110:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
    1114:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
    1118:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
    111c:	bf08      	it	eq
    111e:	f020 0001 	biceq.w	r0, r0, #1
    1122:	4770      	bx	lr
    1124:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
    1128:	d121      	bne.n	116e <__aeabi_d2f+0x7a>
    112a:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
    112e:	bfbc      	itt	lt
    1130:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
    1134:	4770      	bxlt	lr
    1136:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    113a:	ea4f 5252 	mov.w	r2, r2, lsr #21
    113e:	f1c2 0218 	rsb	r2, r2, #24
    1142:	f1c2 0c20 	rsb	ip, r2, #32
    1146:	fa10 f30c 	lsls.w	r3, r0, ip
    114a:	fa20 f002 	lsr.w	r0, r0, r2
    114e:	bf18      	it	ne
    1150:	f040 0001 	orrne.w	r0, r0, #1
    1154:	ea4f 23c1 	mov.w	r3, r1, lsl #11
    1158:	ea4f 23d3 	mov.w	r3, r3, lsr #11
    115c:	fa03 fc0c 	lsl.w	ip, r3, ip
    1160:	ea40 000c 	orr.w	r0, r0, ip
    1164:	fa23 f302 	lsr.w	r3, r3, r2
    1168:	ea4f 0343 	mov.w	r3, r3, lsl #1
    116c:	e7cc      	b.n	1108 <__aeabi_d2f+0x14>
    116e:	ea7f 5362 	mvns.w	r3, r2, asr #21
    1172:	d107      	bne.n	1184 <__aeabi_d2f+0x90>
    1174:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
    1178:	bf1e      	ittt	ne
    117a:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
    117e:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
    1182:	4770      	bxne	lr
    1184:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
    1188:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
    118c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    1190:	4770      	bx	lr
    1192:	bf00      	nop

00001194 <__aeabi_frsub>:
    1194:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
    1198:	e002      	b.n	11a0 <__addsf3>
    119a:	bf00      	nop

0000119c <__aeabi_fsub>:
    119c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

000011a0 <__addsf3>:
    11a0:	0042      	lsls	r2, r0, #1
    11a2:	bf1f      	itttt	ne
    11a4:	ea5f 0341 	movsne.w	r3, r1, lsl #1
    11a8:	ea92 0f03 	teqne	r2, r3
    11ac:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
    11b0:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
    11b4:	d06a      	beq.n	128c <__addsf3+0xec>
    11b6:	ea4f 6212 	mov.w	r2, r2, lsr #24
    11ba:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
    11be:	bfc1      	itttt	gt
    11c0:	18d2      	addgt	r2, r2, r3
    11c2:	4041      	eorgt	r1, r0
    11c4:	4048      	eorgt	r0, r1
    11c6:	4041      	eorgt	r1, r0
    11c8:	bfb8      	it	lt
    11ca:	425b      	neglt	r3, r3
    11cc:	2b19      	cmp	r3, #25
    11ce:	bf88      	it	hi
    11d0:	4770      	bxhi	lr
    11d2:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
    11d6:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    11da:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
    11de:	bf18      	it	ne
    11e0:	4240      	negne	r0, r0
    11e2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
    11e6:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
    11ea:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
    11ee:	bf18      	it	ne
    11f0:	4249      	negne	r1, r1
    11f2:	ea92 0f03 	teq	r2, r3
    11f6:	d03f      	beq.n	1278 <__addsf3+0xd8>
    11f8:	f1a2 0201 	sub.w	r2, r2, #1
    11fc:	fa41 fc03 	asr.w	ip, r1, r3
    1200:	eb10 000c 	adds.w	r0, r0, ip
    1204:	f1c3 0320 	rsb	r3, r3, #32
    1208:	fa01 f103 	lsl.w	r1, r1, r3
    120c:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
    1210:	d502      	bpl.n	1218 <__addsf3+0x78>
    1212:	4249      	negs	r1, r1
    1214:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
    1218:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
    121c:	d313      	bcc.n	1246 <__addsf3+0xa6>
    121e:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
    1222:	d306      	bcc.n	1232 <__addsf3+0x92>
    1224:	0840      	lsrs	r0, r0, #1
    1226:	ea4f 0131 	mov.w	r1, r1, rrx
    122a:	f102 0201 	add.w	r2, r2, #1
    122e:	2afe      	cmp	r2, #254	; 0xfe
    1230:	d251      	bcs.n	12d6 <__addsf3+0x136>
    1232:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
    1236:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
    123a:	bf08      	it	eq
    123c:	f020 0001 	biceq.w	r0, r0, #1
    1240:	ea40 0003 	orr.w	r0, r0, r3
    1244:	4770      	bx	lr
    1246:	0049      	lsls	r1, r1, #1
    1248:	eb40 0000 	adc.w	r0, r0, r0
    124c:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
    1250:	f1a2 0201 	sub.w	r2, r2, #1
    1254:	d1ed      	bne.n	1232 <__addsf3+0x92>
    1256:	fab0 fc80 	clz	ip, r0
    125a:	f1ac 0c08 	sub.w	ip, ip, #8
    125e:	ebb2 020c 	subs.w	r2, r2, ip
    1262:	fa00 f00c 	lsl.w	r0, r0, ip
    1266:	bfaa      	itet	ge
    1268:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
    126c:	4252      	neglt	r2, r2
    126e:	4318      	orrge	r0, r3
    1270:	bfbc      	itt	lt
    1272:	40d0      	lsrlt	r0, r2
    1274:	4318      	orrlt	r0, r3
    1276:	4770      	bx	lr
    1278:	f092 0f00 	teq	r2, #0
    127c:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
    1280:	bf06      	itte	eq
    1282:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
    1286:	3201      	addeq	r2, #1
    1288:	3b01      	subne	r3, #1
    128a:	e7b5      	b.n	11f8 <__addsf3+0x58>
    128c:	ea4f 0341 	mov.w	r3, r1, lsl #1
    1290:	ea7f 6c22 	mvns.w	ip, r2, asr #24
    1294:	bf18      	it	ne
    1296:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
    129a:	d021      	beq.n	12e0 <__addsf3+0x140>
    129c:	ea92 0f03 	teq	r2, r3
    12a0:	d004      	beq.n	12ac <__addsf3+0x10c>
    12a2:	f092 0f00 	teq	r2, #0
    12a6:	bf08      	it	eq
    12a8:	4608      	moveq	r0, r1
    12aa:	4770      	bx	lr
    12ac:	ea90 0f01 	teq	r0, r1
    12b0:	bf1c      	itt	ne
    12b2:	2000      	movne	r0, #0
    12b4:	4770      	bxne	lr
    12b6:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
    12ba:	d104      	bne.n	12c6 <__addsf3+0x126>
    12bc:	0040      	lsls	r0, r0, #1
    12be:	bf28      	it	cs
    12c0:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
    12c4:	4770      	bx	lr
    12c6:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
    12ca:	bf3c      	itt	cc
    12cc:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
    12d0:	4770      	bxcc	lr
    12d2:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
    12d6:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
    12da:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    12de:	4770      	bx	lr
    12e0:	ea7f 6222 	mvns.w	r2, r2, asr #24
    12e4:	bf16      	itet	ne
    12e6:	4608      	movne	r0, r1
    12e8:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
    12ec:	4601      	movne	r1, r0
    12ee:	0242      	lsls	r2, r0, #9
    12f0:	bf06      	itte	eq
    12f2:	ea5f 2341 	movseq.w	r3, r1, lsl #9
    12f6:	ea90 0f01 	teqeq	r0, r1
    12fa:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
    12fe:	4770      	bx	lr

00001300 <__aeabi_ui2f>:
    1300:	f04f 0300 	mov.w	r3, #0
    1304:	e004      	b.n	1310 <__aeabi_i2f+0x8>
    1306:	bf00      	nop

00001308 <__aeabi_i2f>:
    1308:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
    130c:	bf48      	it	mi
    130e:	4240      	negmi	r0, r0
    1310:	ea5f 0c00 	movs.w	ip, r0
    1314:	bf08      	it	eq
    1316:	4770      	bxeq	lr
    1318:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
    131c:	4601      	mov	r1, r0
    131e:	f04f 0000 	mov.w	r0, #0
    1322:	e01c      	b.n	135e <__aeabi_l2f+0x2a>

00001324 <__aeabi_ul2f>:
    1324:	ea50 0201 	orrs.w	r2, r0, r1
    1328:	bf08      	it	eq
    132a:	4770      	bxeq	lr
    132c:	f04f 0300 	mov.w	r3, #0
    1330:	e00a      	b.n	1348 <__aeabi_l2f+0x14>
    1332:	bf00      	nop

00001334 <__aeabi_l2f>:
    1334:	ea50 0201 	orrs.w	r2, r0, r1
    1338:	bf08      	it	eq
    133a:	4770      	bxeq	lr
    133c:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
    1340:	d502      	bpl.n	1348 <__aeabi_l2f+0x14>
    1342:	4240      	negs	r0, r0
    1344:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    1348:	ea5f 0c01 	movs.w	ip, r1
    134c:	bf02      	ittt	eq
    134e:	4684      	moveq	ip, r0
    1350:	4601      	moveq	r1, r0
    1352:	2000      	moveq	r0, #0
    1354:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
    1358:	bf08      	it	eq
    135a:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
    135e:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
    1362:	fabc f28c 	clz	r2, ip
    1366:	3a08      	subs	r2, #8
    1368:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
    136c:	db10      	blt.n	1390 <__aeabi_l2f+0x5c>
    136e:	fa01 fc02 	lsl.w	ip, r1, r2
    1372:	4463      	add	r3, ip
    1374:	fa00 fc02 	lsl.w	ip, r0, r2
    1378:	f1c2 0220 	rsb	r2, r2, #32
    137c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
    1380:	fa20 f202 	lsr.w	r2, r0, r2
    1384:	eb43 0002 	adc.w	r0, r3, r2
    1388:	bf08      	it	eq
    138a:	f020 0001 	biceq.w	r0, r0, #1
    138e:	4770      	bx	lr
    1390:	f102 0220 	add.w	r2, r2, #32
    1394:	fa01 fc02 	lsl.w	ip, r1, r2
    1398:	f1c2 0220 	rsb	r2, r2, #32
    139c:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
    13a0:	fa21 f202 	lsr.w	r2, r1, r2
    13a4:	eb43 0002 	adc.w	r0, r3, r2
    13a8:	bf08      	it	eq
    13aa:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
    13ae:	4770      	bx	lr

000013b0 <__aeabi_fmul>:
    13b0:	f04f 0cff 	mov.w	ip, #255	; 0xff
    13b4:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
    13b8:	bf1e      	ittt	ne
    13ba:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
    13be:	ea92 0f0c 	teqne	r2, ip
    13c2:	ea93 0f0c 	teqne	r3, ip
    13c6:	d06f      	beq.n	14a8 <__aeabi_fmul+0xf8>
    13c8:	441a      	add	r2, r3
    13ca:	ea80 0c01 	eor.w	ip, r0, r1
    13ce:	0240      	lsls	r0, r0, #9
    13d0:	bf18      	it	ne
    13d2:	ea5f 2141 	movsne.w	r1, r1, lsl #9
    13d6:	d01e      	beq.n	1416 <__aeabi_fmul+0x66>
    13d8:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
    13dc:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
    13e0:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
    13e4:	fba0 3101 	umull	r3, r1, r0, r1
    13e8:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
    13ec:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
    13f0:	bf3e      	ittt	cc
    13f2:	0049      	lslcc	r1, r1, #1
    13f4:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
    13f8:	005b      	lslcc	r3, r3, #1
    13fa:	ea40 0001 	orr.w	r0, r0, r1
    13fe:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
    1402:	2afd      	cmp	r2, #253	; 0xfd
    1404:	d81d      	bhi.n	1442 <__aeabi_fmul+0x92>
    1406:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
    140a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
    140e:	bf08      	it	eq
    1410:	f020 0001 	biceq.w	r0, r0, #1
    1414:	4770      	bx	lr
    1416:	f090 0f00 	teq	r0, #0
    141a:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
    141e:	bf08      	it	eq
    1420:	0249      	lsleq	r1, r1, #9
    1422:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
    1426:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
    142a:	3a7f      	subs	r2, #127	; 0x7f
    142c:	bfc2      	ittt	gt
    142e:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
    1432:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
    1436:	4770      	bxgt	lr
    1438:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    143c:	f04f 0300 	mov.w	r3, #0
    1440:	3a01      	subs	r2, #1
    1442:	dc5d      	bgt.n	1500 <__aeabi_fmul+0x150>
    1444:	f112 0f19 	cmn.w	r2, #25
    1448:	bfdc      	itt	le
    144a:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
    144e:	4770      	bxle	lr
    1450:	f1c2 0200 	rsb	r2, r2, #0
    1454:	0041      	lsls	r1, r0, #1
    1456:	fa21 f102 	lsr.w	r1, r1, r2
    145a:	f1c2 0220 	rsb	r2, r2, #32
    145e:	fa00 fc02 	lsl.w	ip, r0, r2
    1462:	ea5f 0031 	movs.w	r0, r1, rrx
    1466:	f140 0000 	adc.w	r0, r0, #0
    146a:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
    146e:	bf08      	it	eq
    1470:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
    1474:	4770      	bx	lr
    1476:	f092 0f00 	teq	r2, #0
    147a:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
    147e:	bf02      	ittt	eq
    1480:	0040      	lsleq	r0, r0, #1
    1482:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
    1486:	3a01      	subeq	r2, #1
    1488:	d0f9      	beq.n	147e <__aeabi_fmul+0xce>
    148a:	ea40 000c 	orr.w	r0, r0, ip
    148e:	f093 0f00 	teq	r3, #0
    1492:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
    1496:	bf02      	ittt	eq
    1498:	0049      	lsleq	r1, r1, #1
    149a:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
    149e:	3b01      	subeq	r3, #1
    14a0:	d0f9      	beq.n	1496 <__aeabi_fmul+0xe6>
    14a2:	ea41 010c 	orr.w	r1, r1, ip
    14a6:	e78f      	b.n	13c8 <__aeabi_fmul+0x18>
    14a8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
    14ac:	ea92 0f0c 	teq	r2, ip
    14b0:	bf18      	it	ne
    14b2:	ea93 0f0c 	teqne	r3, ip
    14b6:	d00a      	beq.n	14ce <__aeabi_fmul+0x11e>
    14b8:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
    14bc:	bf18      	it	ne
    14be:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
    14c2:	d1d8      	bne.n	1476 <__aeabi_fmul+0xc6>
    14c4:	ea80 0001 	eor.w	r0, r0, r1
    14c8:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
    14cc:	4770      	bx	lr
    14ce:	f090 0f00 	teq	r0, #0
    14d2:	bf17      	itett	ne
    14d4:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
    14d8:	4608      	moveq	r0, r1
    14da:	f091 0f00 	teqne	r1, #0
    14de:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
    14e2:	d014      	beq.n	150e <__aeabi_fmul+0x15e>
    14e4:	ea92 0f0c 	teq	r2, ip
    14e8:	d101      	bne.n	14ee <__aeabi_fmul+0x13e>
    14ea:	0242      	lsls	r2, r0, #9
    14ec:	d10f      	bne.n	150e <__aeabi_fmul+0x15e>
    14ee:	ea93 0f0c 	teq	r3, ip
    14f2:	d103      	bne.n	14fc <__aeabi_fmul+0x14c>
    14f4:	024b      	lsls	r3, r1, #9
    14f6:	bf18      	it	ne
    14f8:	4608      	movne	r0, r1
    14fa:	d108      	bne.n	150e <__aeabi_fmul+0x15e>
    14fc:	ea80 0001 	eor.w	r0, r0, r1
    1500:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
    1504:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
    1508:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    150c:	4770      	bx	lr
    150e:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
    1512:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
    1516:	4770      	bx	lr

00001518 <__aeabi_fdiv>:
    1518:	f04f 0cff 	mov.w	ip, #255	; 0xff
    151c:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
    1520:	bf1e      	ittt	ne
    1522:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
    1526:	ea92 0f0c 	teqne	r2, ip
    152a:	ea93 0f0c 	teqne	r3, ip
    152e:	d069      	beq.n	1604 <__aeabi_fdiv+0xec>
    1530:	eba2 0203 	sub.w	r2, r2, r3
    1534:	ea80 0c01 	eor.w	ip, r0, r1
    1538:	0249      	lsls	r1, r1, #9
    153a:	ea4f 2040 	mov.w	r0, r0, lsl #9
    153e:	d037      	beq.n	15b0 <__aeabi_fdiv+0x98>
    1540:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
    1544:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
    1548:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
    154c:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
    1550:	428b      	cmp	r3, r1
    1552:	bf38      	it	cc
    1554:	005b      	lslcc	r3, r3, #1
    1556:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
    155a:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
    155e:	428b      	cmp	r3, r1
    1560:	bf24      	itt	cs
    1562:	1a5b      	subcs	r3, r3, r1
    1564:	ea40 000c 	orrcs.w	r0, r0, ip
    1568:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
    156c:	bf24      	itt	cs
    156e:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
    1572:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
    1576:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
    157a:	bf24      	itt	cs
    157c:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
    1580:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
    1584:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
    1588:	bf24      	itt	cs
    158a:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
    158e:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
    1592:	011b      	lsls	r3, r3, #4
    1594:	bf18      	it	ne
    1596:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
    159a:	d1e0      	bne.n	155e <__aeabi_fdiv+0x46>
    159c:	2afd      	cmp	r2, #253	; 0xfd
    159e:	f63f af50 	bhi.w	1442 <__aeabi_fmul+0x92>
    15a2:	428b      	cmp	r3, r1
    15a4:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
    15a8:	bf08      	it	eq
    15aa:	f020 0001 	biceq.w	r0, r0, #1
    15ae:	4770      	bx	lr
    15b0:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
    15b4:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
    15b8:	327f      	adds	r2, #127	; 0x7f
    15ba:	bfc2      	ittt	gt
    15bc:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
    15c0:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
    15c4:	4770      	bxgt	lr
    15c6:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    15ca:	f04f 0300 	mov.w	r3, #0
    15ce:	3a01      	subs	r2, #1
    15d0:	e737      	b.n	1442 <__aeabi_fmul+0x92>
    15d2:	f092 0f00 	teq	r2, #0
    15d6:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
    15da:	bf02      	ittt	eq
    15dc:	0040      	lsleq	r0, r0, #1
    15de:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
    15e2:	3a01      	subeq	r2, #1
    15e4:	d0f9      	beq.n	15da <__aeabi_fdiv+0xc2>
    15e6:	ea40 000c 	orr.w	r0, r0, ip
    15ea:	f093 0f00 	teq	r3, #0
    15ee:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
    15f2:	bf02      	ittt	eq
    15f4:	0049      	lsleq	r1, r1, #1
    15f6:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
    15fa:	3b01      	subeq	r3, #1
    15fc:	d0f9      	beq.n	15f2 <__aeabi_fdiv+0xda>
    15fe:	ea41 010c 	orr.w	r1, r1, ip
    1602:	e795      	b.n	1530 <__aeabi_fdiv+0x18>
    1604:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
    1608:	ea92 0f0c 	teq	r2, ip
    160c:	d108      	bne.n	1620 <__aeabi_fdiv+0x108>
    160e:	0242      	lsls	r2, r0, #9
    1610:	f47f af7d 	bne.w	150e <__aeabi_fmul+0x15e>
    1614:	ea93 0f0c 	teq	r3, ip
    1618:	f47f af70 	bne.w	14fc <__aeabi_fmul+0x14c>
    161c:	4608      	mov	r0, r1
    161e:	e776      	b.n	150e <__aeabi_fmul+0x15e>
    1620:	ea93 0f0c 	teq	r3, ip
    1624:	d104      	bne.n	1630 <__aeabi_fdiv+0x118>
    1626:	024b      	lsls	r3, r1, #9
    1628:	f43f af4c 	beq.w	14c4 <__aeabi_fmul+0x114>
    162c:	4608      	mov	r0, r1
    162e:	e76e      	b.n	150e <__aeabi_fmul+0x15e>
    1630:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
    1634:	bf18      	it	ne
    1636:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
    163a:	d1ca      	bne.n	15d2 <__aeabi_fdiv+0xba>
    163c:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
    1640:	f47f af5c 	bne.w	14fc <__aeabi_fmul+0x14c>
    1644:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
    1648:	f47f af3c 	bne.w	14c4 <__aeabi_fmul+0x114>
    164c:	e75f      	b.n	150e <__aeabi_fmul+0x15e>
    164e:	bf00      	nop

00001650 <__gesf2>:
    1650:	f04f 3cff 	mov.w	ip, #4294967295
    1654:	e006      	b.n	1664 <__cmpsf2+0x4>
    1656:	bf00      	nop

00001658 <__lesf2>:
    1658:	f04f 0c01 	mov.w	ip, #1
    165c:	e002      	b.n	1664 <__cmpsf2+0x4>
    165e:	bf00      	nop

00001660 <__cmpsf2>:
    1660:	f04f 0c01 	mov.w	ip, #1
    1664:	f84d cd04 	str.w	ip, [sp, #-4]!
    1668:	ea4f 0240 	mov.w	r2, r0, lsl #1
    166c:	ea4f 0341 	mov.w	r3, r1, lsl #1
    1670:	ea7f 6c22 	mvns.w	ip, r2, asr #24
    1674:	bf18      	it	ne
    1676:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
    167a:	d011      	beq.n	16a0 <__cmpsf2+0x40>
    167c:	b001      	add	sp, #4
    167e:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
    1682:	bf18      	it	ne
    1684:	ea90 0f01 	teqne	r0, r1
    1688:	bf58      	it	pl
    168a:	ebb2 0003 	subspl.w	r0, r2, r3
    168e:	bf88      	it	hi
    1690:	17c8      	asrhi	r0, r1, #31
    1692:	bf38      	it	cc
    1694:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
    1698:	bf18      	it	ne
    169a:	f040 0001 	orrne.w	r0, r0, #1
    169e:	4770      	bx	lr
    16a0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
    16a4:	d102      	bne.n	16ac <__cmpsf2+0x4c>
    16a6:	ea5f 2c40 	movs.w	ip, r0, lsl #9
    16aa:	d105      	bne.n	16b8 <__cmpsf2+0x58>
    16ac:	ea7f 6c23 	mvns.w	ip, r3, asr #24
    16b0:	d1e4      	bne.n	167c <__cmpsf2+0x1c>
    16b2:	ea5f 2c41 	movs.w	ip, r1, lsl #9
    16b6:	d0e1      	beq.n	167c <__cmpsf2+0x1c>
    16b8:	f85d 0b04 	ldr.w	r0, [sp], #4
    16bc:	4770      	bx	lr
    16be:	bf00      	nop

000016c0 <__aeabi_cfrcmple>:
    16c0:	4684      	mov	ip, r0
    16c2:	4608      	mov	r0, r1
    16c4:	4661      	mov	r1, ip
    16c6:	e7ff      	b.n	16c8 <__aeabi_cfcmpeq>

000016c8 <__aeabi_cfcmpeq>:
    16c8:	b50f      	push	{r0, r1, r2, r3, lr}
    16ca:	f7ff ffc9 	bl	1660 <__cmpsf2>
    16ce:	2800      	cmp	r0, #0
    16d0:	bf48      	it	mi
    16d2:	f110 0f00 	cmnmi.w	r0, #0
    16d6:	bd0f      	pop	{r0, r1, r2, r3, pc}

000016d8 <__aeabi_fcmpeq>:
    16d8:	f84d ed08 	str.w	lr, [sp, #-8]!
    16dc:	f7ff fff4 	bl	16c8 <__aeabi_cfcmpeq>
    16e0:	bf0c      	ite	eq
    16e2:	2001      	moveq	r0, #1
    16e4:	2000      	movne	r0, #0
    16e6:	f85d fb08 	ldr.w	pc, [sp], #8
    16ea:	bf00      	nop

000016ec <__aeabi_fcmplt>:
    16ec:	f84d ed08 	str.w	lr, [sp, #-8]!
    16f0:	f7ff ffea 	bl	16c8 <__aeabi_cfcmpeq>
    16f4:	bf34      	ite	cc
    16f6:	2001      	movcc	r0, #1
    16f8:	2000      	movcs	r0, #0
    16fa:	f85d fb08 	ldr.w	pc, [sp], #8
    16fe:	bf00      	nop

00001700 <__aeabi_fcmple>:
    1700:	f84d ed08 	str.w	lr, [sp, #-8]!
    1704:	f7ff ffe0 	bl	16c8 <__aeabi_cfcmpeq>
    1708:	bf94      	ite	ls
    170a:	2001      	movls	r0, #1
    170c:	2000      	movhi	r0, #0
    170e:	f85d fb08 	ldr.w	pc, [sp], #8
    1712:	bf00      	nop

00001714 <__aeabi_fcmpge>:
    1714:	f84d ed08 	str.w	lr, [sp, #-8]!
    1718:	f7ff ffd2 	bl	16c0 <__aeabi_cfrcmple>
    171c:	bf94      	ite	ls
    171e:	2001      	movls	r0, #1
    1720:	2000      	movhi	r0, #0
    1722:	f85d fb08 	ldr.w	pc, [sp], #8
    1726:	bf00      	nop

00001728 <__aeabi_fcmpgt>:
    1728:	f84d ed08 	str.w	lr, [sp, #-8]!
    172c:	f7ff ffc8 	bl	16c0 <__aeabi_cfrcmple>
    1730:	bf34      	ite	cc
    1732:	2001      	movcc	r0, #1
    1734:	2000      	movcs	r0, #0
    1736:	f85d fb08 	ldr.w	pc, [sp], #8
    173a:	bf00      	nop

0000173c <__aeabi_f2iz>:
    173c:	ea4f 0240 	mov.w	r2, r0, lsl #1
    1740:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
    1744:	d30f      	bcc.n	1766 <__aeabi_f2iz+0x2a>
    1746:	f04f 039e 	mov.w	r3, #158	; 0x9e
    174a:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
    174e:	d90d      	bls.n	176c <__aeabi_f2iz+0x30>
    1750:	ea4f 2300 	mov.w	r3, r0, lsl #8
    1754:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
    1758:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
    175c:	fa23 f002 	lsr.w	r0, r3, r2
    1760:	bf18      	it	ne
    1762:	4240      	negne	r0, r0
    1764:	4770      	bx	lr
    1766:	f04f 0000 	mov.w	r0, #0
    176a:	4770      	bx	lr
    176c:	f112 0f61 	cmn.w	r2, #97	; 0x61
    1770:	d101      	bne.n	1776 <__aeabi_f2iz+0x3a>
    1772:	0242      	lsls	r2, r0, #9
    1774:	d105      	bne.n	1782 <__aeabi_f2iz+0x46>
    1776:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
    177a:	bf08      	it	eq
    177c:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
    1780:	4770      	bx	lr
    1782:	f04f 0000 	mov.w	r0, #0
    1786:	4770      	bx	lr

00001788 <__aeabi_f2uiz>:
    1788:	0042      	lsls	r2, r0, #1
    178a:	d20e      	bcs.n	17aa <__aeabi_f2uiz+0x22>
    178c:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
    1790:	d30b      	bcc.n	17aa <__aeabi_f2uiz+0x22>
    1792:	f04f 039e 	mov.w	r3, #158	; 0x9e
    1796:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
    179a:	d409      	bmi.n	17b0 <__aeabi_f2uiz+0x28>
    179c:	ea4f 2300 	mov.w	r3, r0, lsl #8
    17a0:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
    17a4:	fa23 f002 	lsr.w	r0, r3, r2
    17a8:	4770      	bx	lr
    17aa:	f04f 0000 	mov.w	r0, #0
    17ae:	4770      	bx	lr
    17b0:	f112 0f61 	cmn.w	r2, #97	; 0x61
    17b4:	d101      	bne.n	17ba <__aeabi_f2uiz+0x32>
    17b6:	0242      	lsls	r2, r0, #9
    17b8:	d102      	bne.n	17c0 <__aeabi_f2uiz+0x38>
    17ba:	f04f 30ff 	mov.w	r0, #4294967295
    17be:	4770      	bx	lr
    17c0:	f04f 0000 	mov.w	r0, #0
    17c4:	4770      	bx	lr
    17c6:	bf00      	nop

000017c8 <Default_Handler>:
 **===========================================================================
 */
void Default_Handler()

{
	__asm("bkpt");
    17c8:	be00      	bkpt	0x0000
    17ca:	4770      	bx	lr

000017cc <__init_hardware>:
 **  Reset handler
 **===========================================================================
 */
void __init_hardware()
{
	SCB_VTOR = (uint32_t)__vector_table; /* Set the interrupt vector table position */
    17cc:	f04f 21e0 	mov.w	r1, #3758153728	; 0xe000e000
	/*
		Disable the Watchdog because it may reset the core before entering main().
		There are 2 unlock words which shall be provided in sequence before
		accessing the control register.
	*/
	WDOG_UNLOCK = KINETIS_WDOG_UNLOCK_SEQ_1;
    17d0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 **  Reset handler
 **===========================================================================
 */
void __init_hardware()
{
	SCB_VTOR = (uint32_t)__vector_table; /* Set the interrupt vector table position */
    17d4:	f240 0200 	movw	r2, #0
	/*
		Disable the Watchdog because it may reset the core before entering main().
		There are 2 unlock words which shall be provided in sequence before
		accessing the control register.
	*/
	WDOG_UNLOCK = KINETIS_WDOG_UNLOCK_SEQ_1;
    17d8:	f2c4 0305 	movt	r3, #16389	; 0x4005
 **  Reset handler
 **===========================================================================
 */
void __init_hardware()
{
	SCB_VTOR = (uint32_t)__vector_table; /* Set the interrupt vector table position */
    17dc:	f2c0 0200 	movt	r2, #0
    17e0:	f8c1 2d08 	str.w	r2, [r1, #3336]	; 0xd08
	/*
		Disable the Watchdog because it may reset the core before entering main().
		There are 2 unlock words which shall be provided in sequence before
		accessing the control register.
	*/
	WDOG_UNLOCK = KINETIS_WDOG_UNLOCK_SEQ_1;
    17e4:	f24c 5020 	movw	r0, #50464	; 0xc520
	WDOG_UNLOCK = KINETIS_WDOG_UNLOCK_SEQ_2;
    17e8:	f64d 1228 	movw	r2, #55592	; 0xd928
	WDOG_STCTRLH = KINETIS_WDOG_DISABLED_CTRL;
    17ec:	21d2      	movs	r1, #210	; 0xd2
	/*
		Disable the Watchdog because it may reset the core before entering main().
		There are 2 unlock words which shall be provided in sequence before
		accessing the control register.
	*/
	WDOG_UNLOCK = KINETIS_WDOG_UNLOCK_SEQ_1;
    17ee:	81d8      	strh	r0, [r3, #14]
	WDOG_UNLOCK = KINETIS_WDOG_UNLOCK_SEQ_2;
    17f0:	81da      	strh	r2, [r3, #14]
	WDOG_STCTRLH = KINETIS_WDOG_DISABLED_CTRL;
    17f2:	8019      	strh	r1, [r3, #0]
    17f4:	4770      	bx	lr
    17f6:	bf00      	nop

000017f8 <__thumb_startup>:

{

		// Setup registers

		__init_registers();
    17f8:	f006 fb14 	bl	7e24 <__init_registers>



		// setup hardware

		__init_hardware();
    17fc:	f7ff ffe6 	bl	17cc <__init_hardware>

	extern char __END_BSS[];



	memset(__START_BSS, 0, (__END_BSS - __START_BSS));
    1800:	f24e 0030 	movw	r0, #57392	; 0xe030
    1804:	f64e 2250 	movw	r2, #59984	; 0xea50
    1808:	f6c1 70ff 	movt	r0, #8191	; 0x1fff
    180c:	f6c1 72ff 	movt	r2, #8191	; 0x1fff
    1810:	2100      	movs	r1, #0
    1812:	1a12      	subs	r2, r2, r0
    1814:	f002 fb06 	bl	3e24 <memset>

#if SUPPORT_ROM_TO_RAM

		if (__S_romp != 0L)

			__copy_rom_sections_to_ram();
    1818:	f006 fae0 	bl	7ddc <__copy_rom_sections_to_ram>



		//	call C++ static initializers

		__call_static_initializers();
    181c:	f006 fa7c 	bl	7d18 <__init_cpp>



		// initializations before main, user specific

		__init_user();
    1820:	f006 fb12 	bl	7e48 <__init_user>

		exit(main(__argc_argv(__MAX_CMDLINE_ARGS, argv), argv));

#else

		exit(main(0, argv));
    1824:	f24e 0130 	movw	r1, #57392	; 0xe030
    1828:	f6c1 71ff 	movt	r1, #8191	; 0x1fff
    182c:	2000      	movs	r0, #0
    182e:	f002 f9f5 	bl	3c1c <main>
    1832:	f002 fadb 	bl	3dec <exit>
    1836:	bf00      	nop

00001838 <_ExitProcess>:

extern void _ExitProcess(int status) _EWL_WEAK;

extern void _ExitProcess(int status)

{
    1838:	e7fe      	b.n	1838 <_ExitProcess>
    183a:	bf00      	nop

0000183c <InitPeakingComb>:
#include "derivative.h" /* include peripheral declarations */
#include "arm_math.h"
#include "PeakingComb.h"

void InitPeakingComb(PeakingComb * PC,q31_t * History,int16_t HistoryLength)
{
    183c:	b430      	push	{r4, r5}
	
	
	PC->OutputHistory = History;
	PC->HistoryLength = HistoryLength;
	
	PC->PreviousInput = 0;
    183e:	2500      	movs	r5, #0
void InitPeakingComb(PeakingComb * PC,q31_t * History,int16_t HistoryLength)
{
	uint32_t i;
	
	
	PC->OutputHistory = History;
    1840:	6001      	str	r1, [r0, #0]
	PC->HistoryLength = HistoryLength;
    1842:	8182      	strh	r2, [r0, #12]
	
	PC->PreviousInput = 0;
    1844:	6085      	str	r5, [r0, #8]
	PC->CurrentIndex = 0;
    1846:	81c5      	strh	r5, [r0, #14]
	
	for(i=0;i<HistoryLength;i++)
    1848:	b192      	cbz	r2, 1870 <InitPeakingComb+0x34>

#include "derivative.h" /* include peripheral declarations */
#include "arm_math.h"
#include "PeakingComb.h"

void InitPeakingComb(PeakingComb * PC,q31_t * History,int16_t HistoryLength)
    184a:	0092      	lsls	r2, r2, #2
    184c:	2304      	movs	r3, #4
    184e:	1f14      	subs	r4, r2, #4
	PC->HistoryLength = HistoryLength;
	
	PC->PreviousInput = 0;
	PC->CurrentIndex = 0;
	
	for(i=0;i<HistoryLength;i++)
    1850:	4293      	cmp	r3, r2
	{
		PC->OutputHistory[i] = 0;
    1852:	600d      	str	r5, [r1, #0]
    1854:	f3c4 0480 	ubfx	r4, r4, #2, #1
	PC->HistoryLength = HistoryLength;
	
	PC->PreviousInput = 0;
	PC->CurrentIndex = 0;
	
	for(i=0;i<HistoryLength;i++)
    1858:	d00a      	beq.n	1870 <InitPeakingComb+0x34>
    185a:	b11c      	cbz	r4, 1864 <InitPeakingComb+0x28>
    185c:	2308      	movs	r3, #8
    185e:	4293      	cmp	r3, r2
	{
		PC->OutputHistory[i] = 0;
    1860:	604d      	str	r5, [r1, #4]
	PC->HistoryLength = HistoryLength;
	
	PC->PreviousInput = 0;
	PC->CurrentIndex = 0;
	
	for(i=0;i<HistoryLength;i++)
    1862:	d005      	beq.n	1870 <InitPeakingComb+0x34>
    1864:	1d1c      	adds	r4, r3, #4
	{
		PC->OutputHistory[i] = 0;
    1866:	50cd      	str	r5, [r1, r3]
    1868:	3308      	adds	r3, #8
	PC->HistoryLength = HistoryLength;
	
	PC->PreviousInput = 0;
	PC->CurrentIndex = 0;
	
	for(i=0;i<HistoryLength;i++)
    186a:	4293      	cmp	r3, r2
	{
		PC->OutputHistory[i] = 0;
    186c:	510d      	str	r5, [r1, r4]
	PC->HistoryLength = HistoryLength;
	
	PC->PreviousInput = 0;
	PC->CurrentIndex = 0;
	
	for(i=0;i<HistoryLength;i++)
    186e:	d1f9      	bne.n	1864 <InitPeakingComb+0x28>
	{
		PC->OutputHistory[i] = 0;
	}
	
	PC->FeedbackTap = -1;
    1870:	f64f 71ff 	movw	r1, #65535	; 0xffff
	
	PC->FeedbackAmplitude = 0;
    1874:	2200      	movs	r2, #0
	for(i=0;i<HistoryLength;i++)
	{
		PC->OutputHistory[i] = 0;
	}
	
	PC->FeedbackTap = -1;
    1876:	8201      	strh	r1, [r0, #16]
	
	PC->FeedbackAmplitude = 0;
    1878:	6042      	str	r2, [r0, #4]
}
    187a:	bc30      	pop	{r4, r5}
    187c:	4770      	bx	lr
    187e:	bf00      	nop

00001880 <CombTheDesert>:

void CombTheDesert(q31_t In, q31_t *Out,PeakingComb * PC)
{
    1880:	e92d 01f0 	stmdb	sp!, {r4, r5, r6, r7, r8}
	q63_t Acc = 0;
	
	//get the feedback Value;
	
	
	Idx = PC->CurrentIndex + PC->FeedbackTap;
    1884:	89d3      	ldrh	r3, [r2, #14]
    1886:	8a15      	ldrh	r5, [r2, #16]
	
	if(Idx<0)
	{
		Idx += PC->HistoryLength;
    1888:	f8b2 800c 	ldrh.w	r8, [r2, #12]
	Acc += In;// + PC->PreviousInput; 
//	Acc >>= 1; 
	
	//Compute the Feedback  part
	
	Acc += ((q63_t)PC->OutputHistory[Idx]  * PC->FeedbackAmplitude)>>31;
    188c:	f8d2 c000 	ldr.w	ip, [r2]
	q63_t Acc = 0;
	
	//get the feedback Value;
	
	
	Idx = PC->CurrentIndex + PC->FeedbackTap;
    1890:	18ec      	adds	r4, r5, r3
    1892:	b2a6      	uxth	r6, r4
	
	if(Idx<0)
    1894:	b237      	sxth	r7, r6
    1896:	2f00      	cmp	r7, #0
	{
		Idx += PC->HistoryLength;
    1898:	bfbc      	itt	lt
    189a:	eb06 0708 	addlt.w	r7, r6, r8
    189e:	b23f      	sxthlt	r7, r7
	Acc += In;// + PC->PreviousInput; 
//	Acc >>= 1; 
	
	//Compute the Feedback  part
	
	Acc += ((q63_t)PC->OutputHistory[Idx]  * PC->FeedbackAmplitude)>>31;
    18a0:	6855      	ldr	r5, [r2, #4]
    18a2:	f85c 4027 	ldr.w	r4, [ip, r7, lsl #2]
    18a6:	fb84 6705 	smull	r6, r7, r4, r5
    18aa:	0ff6      	lsrs	r6, r6, #31
    18ac:	ea46 0447 	orr.w	r4, r6, r7, lsl #1

	PC->OutputHistory[PC->CurrentIndex] = (q31_t)Acc;
    18b0:	b21e      	sxth	r6, r3
	
	*Out = (q31_t)Acc;
	
		
	PC->CurrentIndex++;
    18b2:	3301      	adds	r3, #1
    18b4:	b29b      	uxth	r3, r3
	Acc += In;// + PC->PreviousInput; 
//	Acc >>= 1; 
	
	//Compute the Feedback  part
	
	Acc += ((q63_t)PC->OutputHistory[Idx]  * PC->FeedbackAmplitude)>>31;
    18b6:	17fd      	asrs	r5, r7, #31
    18b8:	1824      	adds	r4, r4, r0
    18ba:	eb45 75e0 	adc.w	r5, r5, r0, asr #31
	
	*Out = (q31_t)Acc;
	
		
	PC->CurrentIndex++;
	if(PC->CurrentIndex == PC->HistoryLength)
    18be:	4598      	cmp	r8, r3
				PC->CurrentIndex = 0;
    18c0:	bf08      	it	eq
    18c2:	2300      	moveq	r3, #0
	
	//Compute the Feedback  part
	
	Acc += ((q63_t)PC->OutputHistory[Idx]  * PC->FeedbackAmplitude)>>31;

	PC->OutputHistory[PC->CurrentIndex] = (q31_t)Acc;
    18c4:	f84c 4026 	str.w	r4, [ip, r6, lsl #2]
	
	*Out = (q31_t)Acc;
    18c8:	600c      	str	r4, [r1, #0]
	
		
	PC->CurrentIndex++;
	if(PC->CurrentIndex == PC->HistoryLength)
				PC->CurrentIndex = 0;
    18ca:	81d3      	strh	r3, [r2, #14]

	PC->PreviousInput = In;
    18cc:	6090      	str	r0, [r2, #8]
	
}
    18ce:	e8bd 01f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8}
    18d2:	4770      	bx	lr

000018d4 <InitOctave>:


void InitOctave(OctaveControl *OC,q31_t HighThreshold, q31_t LowThreshold)
{
	
	OC->SquareTracker[0] = 0x80000000; //Start at -1
    18d4:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
    18d8:	6003      	str	r3, [r0, #0]
	OC->SquareTracker[1] = 0x80000000; //Start at -1
    18da:	6043      	str	r3, [r0, #4]
	OC->Modulation[0] = 0x80000000; //Start at -1
	OC->Modulation[1] = 0x80000000; //Start at -1
    18dc:	6083      	str	r3, [r0, #8]
	OC->HighThresh = HighThreshold;
    18de:	60c1      	str	r1, [r0, #12]
	OC->LowThresh = LowThreshold;
    18e0:	6102      	str	r2, [r0, #16]
    18e2:	4770      	bx	lr

000018e4 <Octave>:
}

void Octave(q31_t In, q31_t *Out,OctaveControl * OC)
{
    18e4:	b410      	push	{r4}
	
	OC->SquareTracker[1] =  OC->SquareTracker[0];
    18e6:	6814      	ldr	r4, [r2, #0]
	
	if(OC->SquareTracker[0] < 0)
    18e8:	2c00      	cmp	r4, #0
}

void Octave(q31_t In, q31_t *Out,OctaveControl * OC)
{
	
	OC->SquareTracker[1] =  OC->SquareTracker[0];
    18ea:	6054      	str	r4, [r2, #4]
	
	if(OC->SquareTracker[0] < 0)
    18ec:	db16      	blt.n	191c <Octave+0x38>
			OC->SquareTracker[0] = 0x7FFFFFFF;
		}
	}
	else
	{
		if(In < OC->LowThresh)
    18ee:	6913      	ldr	r3, [r2, #16]
    18f0:	4298      	cmp	r0, r3
    18f2:	da02      	bge.n	18fa <Octave+0x16>
		{
			OC->SquareTracker[0] =  0x80000000;
    18f4:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
    18f8:	6013      	str	r3, [r2, #0]
		}
	}
	
	
	OC->Modulation[1] = OC->Modulation[0];
    18fa:	6094      	str	r4, [r2, #8]
    18fc:	17e3      	asrs	r3, r4, #31
    18fe:	4622      	mov	r2, r4
				OC->Out = 0x7FFFFFFF; //make +1
			}
		}
	
	//Apply our 1/2 frequency modulation to the input waveform.
	*Out =  ((q63_t)OC->Modulation[0] * In)>>31;
    1900:	fb00 f303 	mul.w	r3, r0, r3
    1904:	17c4      	asrs	r4, r0, #31
    1906:	fb02 3404 	mla	r4, r2, r4, r3
    190a:	fba0 2302 	umull	r2, r3, r0, r2
    190e:	18e0      	adds	r0, r4, r3
    1910:	0fd2      	lsrs	r2, r2, #31
    1912:	ea42 0340 	orr.w	r3, r2, r0, lsl #1
    1916:	600b      	str	r3, [r1, #0]
}
    1918:	bc10      	pop	{r4}
    191a:	4770      	bx	lr
	
	OC->SquareTracker[1] =  OC->SquareTracker[0];
	
	if(OC->SquareTracker[0] < 0)
	{
		if(In > OC->HighThresh)
    191c:	68d3      	ldr	r3, [r2, #12]
    191e:	4283      	cmp	r3, r0
    1920:	daeb      	bge.n	18fa <Octave+0x16>
		{
			OC->SquareTracker[0] = 0x7FFFFFFF;
    1922:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
    1926:	6014      	str	r4, [r2, #0]
		{
			OC->Modulation[0] =  0x80000000; //make it -1
		}
		else
		{
			OC->Modulation[0] = 0x7FFFFFFF; //make +1
    1928:	6054      	str	r4, [r2, #4]
			{
				OC->Out =  0x80000000; //make it -1
			}
			else
			{
				OC->Out = 0x7FFFFFFF; //make +1
    192a:	6094      	str	r4, [r2, #8]
    192c:	2300      	movs	r3, #0
    192e:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
    1932:	e7e5      	b.n	1900 <Octave+0x1c>

00001934 <Init_q31_t_IIR>:


void Init_q31_t_IIR(q31_t_IIR *MyIIR)
{
	MyIIR->Update = 0;
	MyIIR->State.Yn1 = 0;
    1934:	2300      	movs	r3, #0
    1936:	2200      	movs	r2, #0
    1938:	e9c0 2308 	strd	r2, r3, [r0, #32]
	MyIIR->State.Yn2 = 0;
    193c:	e9c0 230a 	strd	r2, r3, [r0, #40]	; 0x28



void Init_q31_t_IIR(q31_t_IIR *MyIIR)
{
	MyIIR->Update = 0;
    1940:	2300      	movs	r3, #0
    1942:	f880 3048 	strb.w	r3, [r0, #72]	; 0x48
    1946:	4770      	bx	lr

00001948 <Compute_q31_t_IIR>:
	MyIIR->State.Yn1 = 0;
	MyIIR->State.Yn2 = 0;
}

void Compute_q31_t_IIR(q31_t_IIR *MyIIR,q31_t Input,q31_t *Output)
{
    1948:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}

      //Store the previous outputs in High precision form
      MyIIR->State.Yn2 =  MyIIR->State.Yn1;
      MyIIR->State.Yn1 =  acc;
      
      MyIIR->State.Xn2 =  MyIIR->State.Xn1;
    194c:	6984      	ldr	r4, [r0, #24]

      /* acc +=  b1 * x[n-1] */
      acc += (q63_t) MyIIR->State.Xn1 * MyIIR->Coef.b[1];

      /* Arc +=  b[2] * x[n-2] */
      acc += (q63_t) MyIIR->State.Xn2 * MyIIR->Coef.b[2];
    194e:	69c3      	ldr	r3, [r0, #28]

      //Store the previous outputs in High precision form
      MyIIR->State.Yn2 =  MyIIR->State.Yn1;
      MyIIR->State.Yn1 =  acc;
      
      MyIIR->State.Xn2 =  MyIIR->State.Xn1;
    1950:	61c4      	str	r4, [r0, #28]

  static __INLINE q63_t mult32x64(
  q63_t x,
  q31_t y)
  {
    return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
    1952:	e9d0 ab0a 	ldrd	sl, fp, [r0, #40]	; 0x28
    1956:	e9d0 4508 	ldrd	r4, r5, [r0, #32]
    195a:	f8d0 9010 	ldr.w	r9, [r0, #16]
    195e:	f8d0 c00c 	ldr.w	ip, [r0, #12]
	MyIIR->State.Yn1 = 0;
	MyIIR->State.Yn2 = 0;
}

void Compute_q31_t_IIR(q31_t_IIR *MyIIR,q31_t Input,q31_t *Output)
{
    1962:	b08e      	sub	sp, #56	; 0x38
    1964:	f04f 36ff 	mov.w	r6, #4294967295
    1968:	4034      	ands	r4, r6
    196a:	2700      	movs	r7, #0
    196c:	ea06 060a 	and.w	r6, r6, sl
    1970:	ea4f 7ae9 	mov.w	sl, r9, asr #31
    1974:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
    1978:	403d      	ands	r5, r7
    197a:	ea07 070b 	and.w	r7, r7, fp
    197e:	fba4 ab0c 	umull	sl, fp, r4, ip
    1982:	ea4f 78ec 	mov.w	r8, ip, asr #31
    1986:	e9cd ab06 	strd	sl, fp, [sp, #24]
            (((q63_t) (x >> 32) * y)));
    198a:	f8d0 b024 	ldr.w	fp, [r0, #36]	; 0x24
    198e:	910b      	str	r1, [sp, #44]	; 0x2c

  static __INLINE q63_t mult32x64(
  q63_t x,
  q31_t y)
  {
    return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
    1990:	fb04 f908 	mul.w	r9, r4, r8
    1994:	9907      	ldr	r1, [sp, #28]
    1996:	9c0c      	ldr	r4, [sp, #48]	; 0x30

      /* acc +=  b1 * x[n-1] */
      acc += (q63_t) MyIIR->State.Xn1 * MyIIR->Coef.b[1];

      /* Arc +=  b[2] * x[n-2] */
      acc += (q63_t) MyIIR->State.Xn2 * MyIIR->Coef.b[2];
    1998:	930d      	str	r3, [sp, #52]	; 0x34
    199a:	fb0c 9505 	mla	r5, ip, r5, r9
            (((q63_t) (x >> 32) * y)));
    199e:	ea4f 79eb 	mov.w	r9, fp, asr #31
    19a2:	f8cd 9008 	str.w	r9, [sp, #8]

  static __INLINE q63_t mult32x64(
  q63_t x,
  q31_t y)
  {
    return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
    19a6:	eb05 0901 	add.w	r9, r5, r1
    19aa:	6901      	ldr	r1, [r0, #16]
            (((q63_t) (x >> 32) * y)));
    19ac:	6a45      	ldr	r5, [r0, #36]	; 0x24

  static __INLINE q63_t mult32x64(
  q63_t x,
  q31_t y)
  {
    return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
    19ae:	f8cd 9010 	str.w	r9, [sp, #16]
    19b2:	fba6 ab01 	umull	sl, fp, r6, r1
    19b6:	e9cd ab08 	strd	sl, fp, [sp, #32]
    19ba:	fb06 f404 	mul.w	r4, r6, r4
    19be:	fb01 4607 	mla	r6, r1, r7, r4
            (((q63_t) (x >> 32) * y)));
    19c2:	f8dd b008 	ldr.w	fp, [sp, #8]

  static __INLINE q63_t mult32x64(
  q63_t x,
  q31_t y)
  {
    return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
    19c6:	9c09      	ldr	r4, [sp, #36]	; 0x24
            (((q63_t) (x >> 32) * y)));
    19c8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c

      /* acc +=  a2 * y[n-2] */
      acc += mult32x64(MyIIR->State.Yn2 , MyIIR->Coef.a[1]);

      
    acc = acc << MyIIR->Coef.PostShift; //DO the post multiply!
    19ca:	f990 3014 	ldrsb.w	r3, [r0, #20]

  static __INLINE q63_t mult32x64(
  q63_t x,
  q31_t y)
  {
    return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
    19ce:	1931      	adds	r1, r6, r4
            (((q63_t) (x >> 32) * y)));
    19d0:	fb0c fb0b 	mul.w	fp, ip, fp
    19d4:	fb05 bb08 	mla	fp, r5, r8, fp
    19d8:	ea4f 7ae7 	mov.w	sl, r7, asr #31
    19dc:	6ac6      	ldr	r6, [r0, #44]	; 0x2c

	  /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */

	  
      /* acc =  b0 * x[n] */
      acc = (q63_t) Input * MyIIR->Coef.b[0];
    19de:	6804      	ldr	r4, [r0, #0]

  static __INLINE q63_t mult32x64(
  q63_t x,
  q31_t y)
  {
    return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
    19e0:	910a      	str	r1, [sp, #40]	; 0x28
    19e2:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
            (((q63_t) (x >> 32) * y)));
    19e4:	9601      	str	r6, [sp, #4]

  static __INLINE q63_t mult32x64(
  q63_t x,
  q31_t y)
  {
    return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
    19e6:	4649      	mov	r1, r9
            (((q63_t) (x >> 32) * y)));
    19e8:	fbac 8905 	umull	r8, r9, ip, r5
    19ec:	6905      	ldr	r5, [r0, #16]
    19ee:	fb87 6704 	smull	r6, r7, r7, r4
    19f2:	fb05 fc0a 	mul.w	ip, r5, sl

      /* acc +=  b1 * x[n-1] */
      acc += (q63_t) MyIIR->State.Xn1 * MyIIR->Coef.b[1];
    19f6:	6844      	ldr	r4, [r0, #4]
    19f8:	6985      	ldr	r5, [r0, #24]
    19fa:	fbc4 6705 	smlal	r6, r7, r4, r5

  static __INLINE q63_t mult32x64(
  q63_t x,
  q31_t y)
  {
    return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
    19fe:	17cd      	asrs	r5, r1, #31
            (((q63_t) (x >> 32) * y)));
    1a00:	e9cd 8902 	strd	r8, r9, [sp, #8]

  static __INLINE q63_t mult32x64(
  q63_t x,
  q31_t y)
  {
    return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
    1a04:	9505      	str	r5, [sp, #20]
    1a06:	9c0a      	ldr	r4, [sp, #40]	; 0x28
            (((q63_t) (x >> 32) * y)));
    1a08:	f8dd 900c 	ldr.w	r9, [sp, #12]
    1a0c:	9d01      	ldr	r5, [sp, #4]
    1a0e:	990c      	ldr	r1, [sp, #48]	; 0x30

  static __INLINE q63_t mult32x64(
  q63_t x,
  q31_t y)
  {
    return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
    1a10:	9409      	str	r4, [sp, #36]	; 0x24
    1a12:	46a0      	mov	r8, r4
            (((q63_t) (x >> 32) * y)));
    1a14:	6904      	ldr	r4, [r0, #16]
    1a16:	eb0b 0a09 	add.w	sl, fp, r9
    1a1a:	fb05 cc01 	mla	ip, r5, r1, ip
    1a1e:	f8cd a00c 	str.w	sl, [sp, #12]

      /* Arc +=  b[2] * x[n-2] */
      acc += (q63_t) MyIIR->State.Xn2 * MyIIR->Coef.b[2];
    1a22:	990d      	ldr	r1, [sp, #52]	; 0x34
    1a24:	fba4 ab05 	umull	sl, fp, r4, r5
    1a28:	6885      	ldr	r5, [r0, #8]
    1a2a:	e9cd ab06 	strd	sl, fp, [sp, #24]
    1a2e:	fbc5 6701 	smlal	r6, r7, r5, r1

  static __INLINE q63_t mult32x64(
  q63_t x,
  q31_t y)
  {
    return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
    1a32:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
    1a36:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
    1a3a:	eb1a 0a04 	adds.w	sl, sl, r4
    1a3e:	eb4b 0b05 	adc.w	fp, fp, r5
    1a42:	e9cd ab04 	strd	sl, fp, [sp, #16]

      /* acc +=  a1 * y[n-1] */
      acc += mult32x64(MyIIR->State.Yn1 , MyIIR->Coef.a[0]);
    1a46:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
            (((q63_t) (x >> 32) * y)));
    1a4a:	f8dd a01c 	ldr.w	sl, [sp, #28]
    1a4e:	44e2      	add	sl, ip
    1a50:	1936      	adds	r6, r6, r4
    1a52:	f8cd a01c 	str.w	sl, [sp, #28]
    1a56:	eb47 0705 	adc.w	r7, r7, r5

  static __INLINE q63_t mult32x64(
  q63_t x,
  q31_t y)
  {
    return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
    1a5a:	e9dd 4506 	ldrd	r4, r5, [sp, #24]
    1a5e:	ea4f 79e8 	mov.w	r9, r8, asr #31
    1a62:	eb14 0108 	adds.w	r1, r4, r8
    1a66:	eb45 0509 	adc.w	r5, r5, r9

      /* acc +=  a2 * y[n-2] */
      acc += mult32x64(MyIIR->State.Yn2 , MyIIR->Coef.a[1]);
    1a6a:	1876      	adds	r6, r6, r1
    1a6c:	eb47 0705 	adc.w	r7, r7, r5

      
    acc = acc << MyIIR->Coef.PostShift; //DO the post multiply!
    1a70:	f1c3 0420 	rsb	r4, r3, #32
    1a74:	f1a3 0120 	sub.w	r1, r3, #32
    1a78:	fa07 f503 	lsl.w	r5, r7, r3
    1a7c:	fa26 f404 	lsr.w	r4, r6, r4

      //Store the previous outputs in High precision form
      MyIIR->State.Yn2 =  MyIIR->State.Yn1;
    1a80:	e9d0 8908 	ldrd	r8, r9, [r0, #32]

      /* acc +=  a2 * y[n-2] */
      acc += mult32x64(MyIIR->State.Yn2 , MyIIR->Coef.a[1]);

      
    acc = acc << MyIIR->Coef.PostShift; //DO the post multiply!
    1a84:	fa06 f303 	lsl.w	r3, r6, r3
    1a88:	fa06 f701 	lsl.w	r7, r6, r1
    1a8c:	432c      	orrs	r4, r5
    1a8e:	ea37 0721 	bics.w	r7, r7, r1, asr #32
    1a92:	bf28      	it	cs
    1a94:	4627      	movcs	r7, r4

      //Store the previous outputs in High precision form
      MyIIR->State.Yn2 =  MyIIR->State.Yn1;
      MyIIR->State.Yn1 =  acc;
    1a96:	6203      	str	r3, [r0, #32]
      
      MyIIR->State.Xn2 =  MyIIR->State.Xn1;
      MyIIR->State.Xn1 =  Input;
      
      *Output = acc>>31;
    1a98:	0fd9      	lsrs	r1, r3, #31
      //Store the previous outputs in High precision form
      MyIIR->State.Yn2 =  MyIIR->State.Yn1;
      MyIIR->State.Yn1 =  acc;
      
      MyIIR->State.Xn2 =  MyIIR->State.Xn1;
      MyIIR->State.Xn1 =  Input;
    1a9a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
      
    acc = acc << MyIIR->Coef.PostShift; //DO the post multiply!

      //Store the previous outputs in High precision form
      MyIIR->State.Yn2 =  MyIIR->State.Yn1;
      MyIIR->State.Yn1 =  acc;
    1a9c:	6247      	str	r7, [r0, #36]	; 0x24
      
      MyIIR->State.Xn2 =  MyIIR->State.Xn1;
      MyIIR->State.Xn1 =  Input;
      
      *Output = acc>>31;
    1a9e:	ea41 0147 	orr.w	r1, r1, r7, lsl #1

      
    acc = acc << MyIIR->Coef.PostShift; //DO the post multiply!

      //Store the previous outputs in High precision form
      MyIIR->State.Yn2 =  MyIIR->State.Yn1;
    1aa2:	e9c0 890a 	strd	r8, r9, [r0, #40]	; 0x28
      MyIIR->State.Yn1 =  acc;
      
      MyIIR->State.Xn2 =  MyIIR->State.Xn1;
      MyIIR->State.Xn1 =  Input;
    1aa6:	6183      	str	r3, [r0, #24]
      
      *Output = acc>>31;
    1aa8:	6011      	str	r1, [r2, #0]
}
    1aaa:	b00e      	add	sp, #56	; 0x38
    1aac:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
    1ab0:	4770      	bx	lr
    1ab2:	bf00      	nop
    1ab4:	0000      	movs	r0, r0
	...

00001ab8 <DesignAudioBiquadIIR_q31_t>:
									   // the classic EE Q.  That adjustment in definition was made so that
									   // a boost of N dB followed by a cut of N dB for identical Q and
									   // f0/Fs results in a precisely flat unity gain filter or "wire".)*/
							float dBgain// (used only for peaking and shelving filters)
							)
{
    1ab8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1abc:	b0ab      	sub	sp, #172	; 0xac
    1abe:	4688      	mov	r8, r1
	
	
	if(FilterType == LOW_SHELF || FilterType == HIGH_SHELF)
	{
		A = sqrt(pow(10,(dBgain/40)));
    1ac0:	4d47      	ldr	r5, [pc, #284]	; (1be0 <DesignAudioBiquadIIR_q31_t+0x128>)
									   // the classic EE Q.  That adjustment in definition was made so that
									   // a boost of N dB followed by a cut of N dB for identical Q and
									   // f0/Fs results in a precisely flat unity gain filter or "wire".)*/
							float dBgain// (used only for peaking and shelving filters)
							)
{
    1ac2:	901e      	str	r0, [sp, #120]	; 0x78
	
	
	if(FilterType == LOW_SHELF || FilterType == HIGH_SHELF)
	{
		A = sqrt(pow(10,(dBgain/40)));
    1ac4:	2100      	movs	r1, #0
									   // the classic EE Q.  That adjustment in definition was made so that
									   // a boost of N dB followed by a cut of N dB for identical Q and
									   // f0/Fs results in a precisely flat unity gain filter or "wire".)*/
							float dBgain// (used only for peaking and shelving filters)
							)
{
    1ac6:	9835      	ldr	r0, [sp, #212]	; 0xd4
	
	
	if(FilterType == LOW_SHELF || FilterType == HIGH_SHELF)
	{
		A = sqrt(pow(10,(dBgain/40)));
    1ac8:	950c      	str	r5, [sp, #48]	; 0x30
    1aca:	f2c4 2120 	movt	r1, #16928	; 0x4220
									   // the classic EE Q.  That adjustment in definition was made so that
									   // a boost of N dB followed by a cut of N dB for identical Q and
									   // f0/Fs results in a precisely flat unity gain filter or "wire".)*/
							float dBgain// (used only for peaking and shelving filters)
							)
{
    1ace:	4614      	mov	r4, r2
    1ad0:	4699      	mov	r9, r3
	{
		A = sqrt(pow(10,(dBgain/40)));
	}
	else
	{
		A = sqrt(pow(10,(dBgain/40)));
    1ad2:	f7ff fd21 	bl	1518 <__aeabi_fdiv>
    1ad6:	f7fe fff7 	bl	ac8 <__aeabi_f2d>
    1ada:	460b      	mov	r3, r1
    1adc:	2100      	movs	r1, #0
    1ade:	4602      	mov	r2, r0
    1ae0:	f2c4 0124 	movt	r1, #16420	; 0x4024
    1ae4:	2000      	movs	r0, #0
    1ae6:	f004 fa69 	bl	5fbc <pow>
    1aea:	f004 fa69 	bl	5fc0 <sqrt>
    1aee:	9e0c      	ldr	r6, [sp, #48]	; 0x30
    1af0:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
    1af4:	e9c6 0100 	strd	r0, r1, [r6]
	}

	
	if(Fs == 0) Fs = 32000;
    1af8:	4620      	mov	r0, r4
    1afa:	2100      	movs	r1, #0
    1afc:	f7ff fdec 	bl	16d8 <__aeabi_fcmpeq>
    1b00:	2800      	cmp	r0, #0
    1b02:	d146      	bne.n	1b92 <DesignAudioBiquadIIR_q31_t+0xda>
    1b04:	4620      	mov	r0, r4
    1b06:	f7fe ffdf 	bl	ac8 <__aeabi_f2d>
    1b0a:	4606      	mov	r6, r0
    1b0c:	460f      	mov	r7, r1
	if(Q == 0) Q = 0.1;
    1b0e:	9834      	ldr	r0, [sp, #208]	; 0xd0
    1b10:	2100      	movs	r1, #0
    1b12:	f7ff fde1 	bl	16d8 <__aeabi_fcmpeq>
    1b16:	2800      	cmp	r0, #0
    1b18:	d146      	bne.n	1ba8 <DesignAudioBiquadIIR_q31_t+0xf0>
    1b1a:	9834      	ldr	r0, [sp, #208]	; 0xd0
    1b1c:	f7fe ffd4 	bl	ac8 <__aeabi_f2d>
    1b20:	4602      	mov	r2, r0
    1b22:	460b      	mov	r3, r1
    1b24:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
    1b28:	f7fe fe70 	bl	80c <__adddf3>
    1b2c:	4604      	mov	r4, r0
    1b2e:	460d      	mov	r5, r1
	
	w0 = 2*3.141592654*f0/Fs;
    1b30:	4648      	mov	r0, r9
    1b32:	f7fe ffc9 	bl	ac8 <__aeabi_f2d>
    1b36:	a324      	add	r3, pc, #144	; (adr r3, 1bc8 <DesignAudioBiquadIIR_q31_t+0x110>)
    1b38:	e9d3 2300 	ldrd	r2, r3, [r3]
    1b3c:	f7ff f818 	bl	b70 <__aeabi_dmul>
    1b40:	4632      	mov	r2, r6
    1b42:	463b      	mov	r3, r7
    1b44:	f7ff f93e 	bl	dc4 <__aeabi_ddiv>
    1b48:	f24e 0668 	movw	r6, #57448	; 0xe068
    1b4c:	4682      	mov	sl, r0
    1b4e:	468b      	mov	fp, r1
    1b50:	f6c1 76ff 	movt	r6, #8191	; 0x1fff
    1b54:	e9c6 ab00 	strd	sl, fp, [r6]
	alpha = sin(w0)/(2.0 * Q);
    1b58:	f004 f9e8 	bl	5f2c <sin>
    1b5c:	4622      	mov	r2, r4
    1b5e:	462b      	mov	r3, r5
    1b60:	f7ff f930 	bl	dc4 <__aeabi_ddiv>
    1b64:	f8df 907c 	ldr.w	r9, [pc, #124]	; 1be4 <DesignAudioBiquadIIR_q31_t+0x12c>
    1b68:	4602      	mov	r2, r0
    1b6a:	4607      	mov	r7, r0
    1b6c:	460b      	mov	r3, r1
	
	
	switch(FilterType)
    1b6e:	f108 30ff 	add.w	r0, r8, #4294967295
	
	if(Fs == 0) Fs = 32000;
	if(Q == 0) Q = 0.1;
	
	w0 = 2*3.141592654*f0/Fs;
	alpha = sin(w0)/(2.0 * Q);
    1b72:	460e      	mov	r6, r1
    1b74:	e9c9 2300 	strd	r2, r3, [r9]
	
	
	switch(FilterType)
    1b78:	2807      	cmp	r0, #7
    1b7a:	f200 8331 	bhi.w	21e0 <DesignAudioBiquadIIR_q31_t+0x728>
    1b7e:	e8df f010 	tbh	[pc, r0, lsl #1]
    1b82:	036e      	.short	0x036e
    1b84:	03f003af 	.word	0x03f003af
    1b88:	0448041b 	.word	0x0448041b
    1b8c:	04bf0474 	.word	0x04bf0474
    1b90:	0033      	.short	0x0033
	{
		A = sqrt(pow(10,(dBgain/40)));
	}

	
	if(Fs == 0) Fs = 32000;
    1b92:	f44f 4780 	mov.w	r7, #16384	; 0x4000
	if(Q == 0) Q = 0.1;
    1b96:	9834      	ldr	r0, [sp, #208]	; 0xd0
    1b98:	2100      	movs	r1, #0
	{
		A = sqrt(pow(10,(dBgain/40)));
	}

	
	if(Fs == 0) Fs = 32000;
    1b9a:	2600      	movs	r6, #0
    1b9c:	f2c4 07df 	movt	r7, #16607	; 0x40df
	if(Q == 0) Q = 0.1;
    1ba0:	f7ff fd9a 	bl	16d8 <__aeabi_fcmpeq>
    1ba4:	2800      	cmp	r0, #0
    1ba6:	d0b8      	beq.n	1b1a <DesignAudioBiquadIIR_q31_t+0x62>
    1ba8:	a309      	add	r3, pc, #36	; (adr r3, 1bd0 <DesignAudioBiquadIIR_q31_t+0x118>)
    1baa:	e9d3 2300 	ldrd	r2, r3, [r3]
    1bae:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
    1bb2:	f64c 43cd 	movw	r3, #52429	; 0xcccd
    1bb6:	f6c3 53cc 	movt	r3, #15820	; 0x3dcc
    1bba:	a507      	add	r5, pc, #28	; (adr r5, 1bd8 <DesignAudioBiquadIIR_q31_t+0x120>)
    1bbc:	e9d5 4500 	ldrd	r4, r5, [r5]
    1bc0:	9334      	str	r3, [sp, #208]	; 0xd0
    1bc2:	e7b5      	b.n	1b30 <DesignAudioBiquadIIR_q31_t+0x78>
    1bc4:	f3af 8000 	nop.w
    1bc8:	54524550 	.word	0x54524550
    1bcc:	401921fb 	.word	0x401921fb
    1bd0:	a0000000 	.word	0xa0000000
    1bd4:	3fb99999 	.word	0x3fb99999
    1bd8:	a0000000 	.word	0xa0000000
    1bdc:	3fc99999 	.word	0x3fc99999
    1be0:	1fffe060 	.word	0x1fffe060
    1be4:	1fffe0a0 	.word	0x1fffe0a0

	            break;
	            

				case           HIGH_SHELF:
	            b0 =    A*( (A+1) + (A-1)*cos(w0) + 2*sqrt(A)*alpha );
    1be8:	4650      	mov	r0, sl
    1bea:	4659      	mov	r1, fp
    1bec:	f004 f91e 	bl	5e2c <cos>
    1bf0:	4682      	mov	sl, r0
    1bf2:	468b      	mov	fp, r1
    1bf4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
    1bf8:	f004 f9e2 	bl	5fc0 <sqrt>
    1bfc:	2300      	movs	r3, #0
    1bfe:	4604      	mov	r4, r0
    1c00:	460d      	mov	r5, r1
    1c02:	2200      	movs	r2, #0
    1c04:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
    1c08:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
    1c0c:	f7fe fdfe 	bl	80c <__adddf3>
    1c10:	2300      	movs	r3, #0
    1c12:	4606      	mov	r6, r0
    1c14:	460f      	mov	r7, r1
    1c16:	2200      	movs	r2, #0
    1c18:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
    1c1c:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
    1c20:	f7fe fdf2 	bl	808 <__aeabi_dsub>
    1c24:	4652      	mov	r2, sl
    1c26:	465b      	mov	r3, fp
    1c28:	f7fe ffa2 	bl	b70 <__aeabi_dmul>
    1c2c:	4602      	mov	r2, r0
    1c2e:	460b      	mov	r3, r1
    1c30:	4630      	mov	r0, r6
    1c32:	4639      	mov	r1, r7
    1c34:	f7fe fdea 	bl	80c <__adddf3>
    1c38:	4622      	mov	r2, r4
    1c3a:	4606      	mov	r6, r0
    1c3c:	460f      	mov	r7, r1
    1c3e:	462b      	mov	r3, r5
    1c40:	4620      	mov	r0, r4
    1c42:	4629      	mov	r1, r5
    1c44:	f7fe fde2 	bl	80c <__adddf3>
    1c48:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
    1c4c:	e9d9 2300 	ldrd	r2, r3, [r9]
    1c50:	e9de 4500 	ldrd	r4, r5, [lr]
    1c54:	f7fe ff8c 	bl	b70 <__aeabi_dmul>
    1c58:	4602      	mov	r2, r0
    1c5a:	460b      	mov	r3, r1
    1c5c:	4630      	mov	r0, r6
    1c5e:	4639      	mov	r1, r7
    1c60:	f7fe fdd4 	bl	80c <__adddf3>
    1c64:	4622      	mov	r2, r4
    1c66:	462b      	mov	r3, r5
    1c68:	f7fe ff82 	bl	b70 <__aeabi_dmul>
    1c6c:	4e90      	ldr	r6, [pc, #576]	; (1eb0 <DesignAudioBiquadIIR_q31_t+0x3f8>)
	            b1 = -2*A*( (A-1) + (A+1)*cos(w0)                   );
    1c6e:	2300      	movs	r3, #0

	            break;
	            

				case           HIGH_SHELF:
	            b0 =    A*( (A+1) + (A-1)*cos(w0) + 2*sqrt(A)*alpha );
    1c70:	e9c6 0106 	strd	r0, r1, [r6, #24]
	            b1 = -2*A*( (A-1) + (A+1)*cos(w0)                   );
    1c74:	2200      	movs	r2, #0
    1c76:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
    1c7a:	4620      	mov	r0, r4
    1c7c:	4629      	mov	r1, r5

	            break;
	            

				case           HIGH_SHELF:
	            b0 =    A*( (A+1) + (A-1)*cos(w0) + 2*sqrt(A)*alpha );
    1c7e:	9617      	str	r6, [sp, #92]	; 0x5c
	            b1 = -2*A*( (A-1) + (A+1)*cos(w0)                   );
    1c80:	f7fe fdc2 	bl	808 <__aeabi_dsub>
    1c84:	2300      	movs	r3, #0
    1c86:	4606      	mov	r6, r0
    1c88:	460f      	mov	r7, r1
    1c8a:	2200      	movs	r2, #0
    1c8c:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
    1c90:	4620      	mov	r0, r4
    1c92:	4629      	mov	r1, r5
    1c94:	f7fe fdba 	bl	80c <__adddf3>
    1c98:	468a      	mov	sl, r1
    1c9a:	f24e 0168 	movw	r1, #57448	; 0xe068
    1c9e:	f6c1 71ff 	movt	r1, #8191	; 0x1fff
    1ca2:	4680      	mov	r8, r0
    1ca4:	e9d1 0100 	ldrd	r0, r1, [r1]
    1ca8:	f004 f8c0 	bl	5e2c <cos>
    1cac:	2200      	movs	r2, #0
    1cae:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
    1cb2:	f04f 4340 	mov.w	r3, #3221225472	; 0xc0000000
    1cb6:	4620      	mov	r0, r4
    1cb8:	4629      	mov	r1, r5
    1cba:	f7fe ff59 	bl	b70 <__aeabi_dmul>
    1cbe:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
    1cc2:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
    1cc6:	4640      	mov	r0, r8
    1cc8:	4651      	mov	r1, sl
    1cca:	f7fe ff51 	bl	b70 <__aeabi_dmul>
    1cce:	4602      	mov	r2, r0
    1cd0:	460b      	mov	r3, r1
    1cd2:	4630      	mov	r0, r6
    1cd4:	4639      	mov	r1, r7
    1cd6:	f7fe fd99 	bl	80c <__adddf3>
    1cda:	460b      	mov	r3, r1
    1cdc:	4602      	mov	r2, r0
    1cde:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
    1ce2:	f7fe ff45 	bl	b70 <__aeabi_dmul>
    1ce6:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    1ce8:	e9c2 0108 	strd	r0, r1, [r2, #32]
	            b2 =    A*( (A+1) + (A-1)*cos(w0) - 2*sqrt(A)*alpha );
    1cec:	4620      	mov	r0, r4
    1cee:	4629      	mov	r1, r5
    1cf0:	f004 f966 	bl	5fc0 <sqrt>
    1cf4:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
    1cf8:	4604      	mov	r4, r0
    1cfa:	460d      	mov	r5, r1
    1cfc:	4630      	mov	r0, r6
    1cfe:	4639      	mov	r1, r7
    1d00:	f7fe ff36 	bl	b70 <__aeabi_dmul>
    1d04:	4602      	mov	r2, r0
    1d06:	460b      	mov	r3, r1
    1d08:	4640      	mov	r0, r8
    1d0a:	4651      	mov	r1, sl
    1d0c:	f7fe fd7e 	bl	80c <__adddf3>
    1d10:	4622      	mov	r2, r4
    1d12:	4606      	mov	r6, r0
    1d14:	460f      	mov	r7, r1
    1d16:	462b      	mov	r3, r5
    1d18:	4620      	mov	r0, r4
    1d1a:	4629      	mov	r1, r5
    1d1c:	f7fe fd76 	bl	80c <__adddf3>
    1d20:	f8dd c030 	ldr.w	ip, [sp, #48]	; 0x30
    1d24:	e9d9 2300 	ldrd	r2, r3, [r9]
    1d28:	e9dc 4500 	ldrd	r4, r5, [ip]
    1d2c:	f7fe ff20 	bl	b70 <__aeabi_dmul>
    1d30:	4602      	mov	r2, r0
    1d32:	460b      	mov	r3, r1
    1d34:	4630      	mov	r0, r6
    1d36:	4639      	mov	r1, r7
    1d38:	f7fe fd66 	bl	808 <__aeabi_dsub>
    1d3c:	4622      	mov	r2, r4
    1d3e:	462b      	mov	r3, r5
    1d40:	f7fe ff16 	bl	b70 <__aeabi_dmul>
    1d44:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    1d46:	e9c3 010a 	strd	r0, r1, [r3, #40]	; 0x28
	            a0 =        (A+1) - (A-1)*cos(w0) + 2*sqrt(A)*alpha;
    1d4a:	f24e 0068 	movw	r0, #57448	; 0xe068
    1d4e:	f6c1 70ff 	movt	r0, #8191	; 0x1fff
    1d52:	e9d0 0100 	ldrd	r0, r1, [r0]
    1d56:	f004 f869 	bl	5e2c <cos>
    1d5a:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
    1d5e:	4620      	mov	r0, r4
    1d60:	4629      	mov	r1, r5
    1d62:	f004 f92d 	bl	5fc0 <sqrt>
    1d66:	2300      	movs	r3, #0
    1d68:	4680      	mov	r8, r0
    1d6a:	468b      	mov	fp, r1
    1d6c:	4620      	mov	r0, r4
    1d6e:	4629      	mov	r1, r5
    1d70:	2200      	movs	r2, #0
    1d72:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
    1d76:	f7fe fd49 	bl	80c <__adddf3>
    1d7a:	2300      	movs	r3, #0
    1d7c:	4606      	mov	r6, r0
    1d7e:	460f      	mov	r7, r1
    1d80:	4620      	mov	r0, r4
    1d82:	4629      	mov	r1, r5
    1d84:	2200      	movs	r2, #0
    1d86:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
    1d8a:	f7fe fd3d 	bl	808 <__aeabi_dsub>
    1d8e:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
    1d92:	f7fe feed 	bl	b70 <__aeabi_dmul>
    1d96:	4602      	mov	r2, r0
    1d98:	460b      	mov	r3, r1
    1d9a:	4630      	mov	r0, r6
    1d9c:	4639      	mov	r1, r7
    1d9e:	f7fe fd33 	bl	808 <__aeabi_dsub>
    1da2:	4642      	mov	r2, r8
    1da4:	4604      	mov	r4, r0
    1da6:	460d      	mov	r5, r1
    1da8:	465b      	mov	r3, fp
    1daa:	4640      	mov	r0, r8
    1dac:	4659      	mov	r1, fp
    1dae:	f7fe fd2d 	bl	80c <__adddf3>
    1db2:	e9d9 2300 	ldrd	r2, r3, [r9]
    1db6:	f7fe fedb 	bl	b70 <__aeabi_dmul>
    1dba:	4602      	mov	r2, r0
    1dbc:	460b      	mov	r3, r1
    1dbe:	4620      	mov	r0, r4
    1dc0:	4629      	mov	r1, r5
    1dc2:	f7fe fd23 	bl	80c <__adddf3>
	            a1 =    2*( (A-1) - (A+1)*cos(w0)                   );
    1dc6:	9a0c      	ldr	r2, [sp, #48]	; 0x30

				case           HIGH_SHELF:
	            b0 =    A*( (A+1) + (A-1)*cos(w0) + 2*sqrt(A)*alpha );
	            b1 = -2*A*( (A-1) + (A+1)*cos(w0)                   );
	            b2 =    A*( (A+1) + (A-1)*cos(w0) - 2*sqrt(A)*alpha );
	            a0 =        (A+1) - (A-1)*cos(w0) + 2*sqrt(A)*alpha;
    1dc8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
	            a1 =    2*( (A-1) - (A+1)*cos(w0)                   );
    1dca:	e9d2 4500 	ldrd	r4, r5, [r2]

				case           HIGH_SHELF:
	            b0 =    A*( (A+1) + (A-1)*cos(w0) + 2*sqrt(A)*alpha );
	            b1 = -2*A*( (A-1) + (A+1)*cos(w0)                   );
	            b2 =    A*( (A+1) + (A-1)*cos(w0) - 2*sqrt(A)*alpha );
	            a0 =        (A+1) - (A-1)*cos(w0) + 2*sqrt(A)*alpha;
    1dce:	e9c3 0100 	strd	r0, r1, [r3]
	            a1 =    2*( (A-1) - (A+1)*cos(w0)                   );
    1dd2:	2300      	movs	r3, #0
    1dd4:	2200      	movs	r2, #0
    1dd6:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
    1dda:	4620      	mov	r0, r4
    1ddc:	4629      	mov	r1, r5
    1dde:	f7fe fd13 	bl	808 <__aeabi_dsub>
    1de2:	2300      	movs	r3, #0
    1de4:	4682      	mov	sl, r0
    1de6:	4688      	mov	r8, r1
    1de8:	2200      	movs	r2, #0
    1dea:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
    1dee:	4620      	mov	r0, r4
    1df0:	4629      	mov	r1, r5
    1df2:	f7fe fd0b 	bl	80c <__adddf3>
    1df6:	f24e 0e68 	movw	lr, #57448	; 0xe068
    1dfa:	f6c1 7eff 	movt	lr, #8191	; 0x1fff
    1dfe:	4606      	mov	r6, r0
    1e00:	460f      	mov	r7, r1
    1e02:	e9de 0100 	ldrd	r0, r1, [lr]
    1e06:	f004 f811 	bl	5e2c <cos>
    1e0a:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
    1e0e:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
    1e12:	4630      	mov	r0, r6
    1e14:	4639      	mov	r1, r7
    1e16:	f7fe feab 	bl	b70 <__aeabi_dmul>
    1e1a:	4602      	mov	r2, r0
    1e1c:	460b      	mov	r3, r1
    1e1e:	4650      	mov	r0, sl
    1e20:	4641      	mov	r1, r8
    1e22:	f7fe fcf1 	bl	808 <__aeabi_dsub>
    1e26:	460b      	mov	r3, r1
    1e28:	4602      	mov	r2, r0
    1e2a:	f7fe fcef 	bl	80c <__adddf3>
    1e2e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    1e30:	e9c2 0102 	strd	r0, r1, [r2, #8]
	            a2 =        (A+1) - (A-1)*cos(w0) - 2*sqrt(A)*alpha;
    1e34:	4620      	mov	r0, r4
    1e36:	4629      	mov	r1, r5
    1e38:	f004 f8c2 	bl	5fc0 <sqrt>
    1e3c:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
    1e40:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
    1e44:	4650      	mov	r0, sl
    1e46:	4641      	mov	r1, r8
    1e48:	f7fe fe92 	bl	b70 <__aeabi_dmul>
    1e4c:	4602      	mov	r2, r0
    1e4e:	460b      	mov	r3, r1
    1e50:	4630      	mov	r0, r6
    1e52:	4639      	mov	r1, r7
    1e54:	f7fe fcd8 	bl	808 <__aeabi_dsub>
    1e58:	4604      	mov	r4, r0
    1e5a:	460d      	mov	r5, r1
    1e5c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
    1e60:	4602      	mov	r2, r0
    1e62:	460b      	mov	r3, r1
    1e64:	f7fe fcd2 	bl	80c <__adddf3>
    1e68:	e9d9 2300 	ldrd	r2, r3, [r9]
    1e6c:	f7fe fe80 	bl	b70 <__aeabi_dmul>
    1e70:	4602      	mov	r2, r0
    1e72:	460b      	mov	r3, r1
    1e74:	4620      	mov	r0, r4
    1e76:	4629      	mov	r1, r5
    1e78:	f7fe fcc6 	bl	808 <__aeabi_dsub>
    1e7c:	f8dd c05c 	ldr.w	ip, [sp, #92]	; 0x5c
    1e80:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    1e82:	f8dc 2008 	ldr.w	r2, [ip, #8]
    1e86:	699f      	ldr	r7, [r3, #24]
    1e88:	69de      	ldr	r6, [r3, #28]
    1e8a:	681c      	ldr	r4, [r3, #0]
    1e8c:	f8dc 300c 	ldr.w	r3, [ip, #12]
    1e90:	f8dc 5004 	ldr.w	r5, [ip, #4]
    1e94:	f8dc a020 	ldr.w	sl, [ip, #32]
    1e98:	f8dc b024 	ldr.w	fp, [ip, #36]	; 0x24
    1e9c:	f8dc 9028 	ldr.w	r9, [ip, #40]	; 0x28
    1ea0:	f8dc 802c 	ldr.w	r8, [ip, #44]	; 0x2c
    1ea4:	9210      	str	r2, [sp, #64]	; 0x40
    1ea6:	9312      	str	r3, [sp, #72]	; 0x48
    1ea8:	900e      	str	r0, [sp, #56]	; 0x38
    1eaa:	910c      	str	r1, [sp, #48]	; 0x30
    1eac:	e002      	b.n	1eb4 <DesignAudioBiquadIIR_q31_t+0x3fc>
    1eae:	bf00      	nop
    1eb0:	1fffe070 	.word	0x1fffe070
	                        
	                        THis means that 2 feedback coef. have to be inverted
	
	  */
	
	b0 = b0/a0;
    1eb4:	4622      	mov	r2, r4
    1eb6:	462b      	mov	r3, r5
    1eb8:	4638      	mov	r0, r7
    1eba:	4631      	mov	r1, r6
    1ebc:	f7fe ff82 	bl	dc4 <__aeabi_ddiv>
	b1 = b1/a0;
    1ec0:	4656      	mov	r6, sl
	                        
	                        THis means that 2 feedback coef. have to be inverted
	
	  */
	
	b0 = b0/a0;
    1ec2:	f8dd a05c 	ldr.w	sl, [sp, #92]	; 0x5c
	b1 = b1/a0;
    1ec6:	4622      	mov	r2, r4
	                        
	                        THis means that 2 feedback coef. have to be inverted
	
	  */
	
	b0 = b0/a0;
    1ec8:	e9ca 0106 	strd	r0, r1, [sl, #24]
	b1 = b1/a0;
    1ecc:	462b      	mov	r3, r5
    1ece:	4630      	mov	r0, r6
    1ed0:	4659      	mov	r1, fp
    1ed2:	f7fe ff77 	bl	dc4 <__aeabi_ddiv>
    1ed6:	f8dd b05c 	ldr.w	fp, [sp, #92]	; 0x5c
	b2 = b2/a0;
    1eda:	4622      	mov	r2, r4
	                        THis means that 2 feedback coef. have to be inverted
	
	  */
	
	b0 = b0/a0;
	b1 = b1/a0;
    1edc:	e9cb 0108 	strd	r0, r1, [fp, #32]
	b2 = b2/a0;
    1ee0:	462b      	mov	r3, r5
    1ee2:	4648      	mov	r0, r9
    1ee4:	4641      	mov	r1, r8
    1ee6:	f7fe ff6d 	bl	dc4 <__aeabi_ddiv>
	a1 = -1* a1/a0;
    1eea:	9a12      	ldr	r2, [sp, #72]	; 0x48
    1eec:	9e10      	ldr	r6, [sp, #64]	; 0x40
	
	  */
	
	b0 = b0/a0;
	b1 = b1/a0;
	b2 = b2/a0;
    1eee:	9b17      	ldr	r3, [sp, #92]	; 0x5c
	a1 = -1* a1/a0;
    1ef0:	f102 4700 	add.w	r7, r2, #2147483648	; 0x80000000
	
	  */
	
	b0 = b0/a0;
	b1 = b1/a0;
	b2 = b2/a0;
    1ef4:	e9c3 010a 	strd	r0, r1, [r3, #40]	; 0x28
	a1 = -1* a1/a0;
    1ef8:	4622      	mov	r2, r4
    1efa:	462b      	mov	r3, r5
    1efc:	4630      	mov	r0, r6
    1efe:	4639      	mov	r1, r7
    1f00:	f7fe ff60 	bl	dc4 <__aeabi_ddiv>
    1f04:	4689      	mov	r9, r1
    1f06:	9110      	str	r1, [sp, #64]	; 0x40
	a2 = -1 *a2/a0;
    1f08:	990c      	ldr	r1, [sp, #48]	; 0x30
    1f0a:	462b      	mov	r3, r5
	  */
	
	b0 = b0/a0;
	b1 = b1/a0;
	b2 = b2/a0;
	a1 = -1* a1/a0;
    1f0c:	9d17      	ldr	r5, [sp, #92]	; 0x5c
    1f0e:	4680      	mov	r8, r0
	a2 = -1 *a2/a0;
    1f10:	4622      	mov	r2, r4
    1f12:	f101 4400 	add.w	r4, r1, #2147483648	; 0x80000000
	  */
	
	b0 = b0/a0;
	b1 = b1/a0;
	b2 = b2/a0;
	a1 = -1* a1/a0;
    1f16:	e9c5 8902 	strd	r8, r9, [r5, #8]
	a2 = -1 *a2/a0;
    1f1a:	4621      	mov	r1, r4
	  */
	
	b0 = b0/a0;
	b1 = b1/a0;
	b2 = b2/a0;
	a1 = -1* a1/a0;
    1f1c:	4682      	mov	sl, r0
	a2 = -1 *a2/a0;
    1f1e:	980e      	ldr	r0, [sp, #56]	; 0x38
    1f20:	f7fe ff50 	bl	dc4 <__aeabi_ddiv>
	a0 = 1.0;
    1f24:	2300      	movs	r3, #0
		
	C->PostShift = -1;
    1f26:	9f1e      	ldr	r7, [sp, #120]	; 0x78
	b0 = b0/a0;
	b1 = b1/a0;
	b2 = b2/a0;
	a1 = -1* a1/a0;
	a2 = -1 *a2/a0;
	a0 = 1.0;
    1f28:	2200      	movs	r2, #0
    1f2a:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
		
	C->PostShift = -1;
    1f2e:	2600      	movs	r6, #0
	
	b0 = b0/a0;
	b1 = b1/a0;
	b2 = b2/a0;
	a1 = -1* a1/a0;
	a2 = -1 *a2/a0;
    1f30:	e9c5 0104 	strd	r0, r1, [r5, #16]
	a0 = 1.0;
    1f34:	e9c5 2300 	strd	r2, r3, [r5]
		
	C->PostShift = -1;
    1f38:	961a      	str	r6, [sp, #104]	; 0x68
    1f3a:	22ff      	movs	r2, #255	; 0xff
    1f3c:	f6c3 76f0 	movt	r6, #16368	; 0x3ff0
    1f40:	753a      	strb	r2, [r7, #20]
    1f42:	9817      	ldr	r0, [sp, #92]	; 0x5c
    1f44:	9f17      	ldr	r7, [sp, #92]	; 0x5c
    1f46:	9618      	str	r6, [sp, #96]	; 0x60
    1f48:	9e17      	ldr	r6, [sp, #92]	; 0x5c
    1f4a:	6941      	ldr	r1, [r0, #20]
    1f4c:	69c4      	ldr	r4, [r0, #28]
    1f4e:	6a45      	ldr	r5, [r0, #36]	; 0x24
    1f50:	6ab2      	ldr	r2, [r6, #40]	; 0x28
    1f52:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    1f54:	f8d0 9010 	ldr.w	r9, [r0, #16]
    1f58:	f8d0 b018 	ldr.w	fp, [r0, #24]
    1f5c:	f8d0 8020 	ldr.w	r8, [r0, #32]
    1f60:	9112      	str	r1, [sp, #72]	; 0x48
    1f62:	9414      	str	r4, [sp, #80]	; 0x50
    1f64:	9515      	str	r5, [sp, #84]	; 0x54
    1f66:	920e      	str	r2, [sp, #56]	; 0x38
    1f68:	9316      	str	r3, [sp, #88]	; 0x58
    1f6a:	9917      	ldr	r1, [sp, #92]	; 0x5c
    1f6c:	9f17      	ldr	r7, [sp, #92]	; 0x5c
    1f6e:	69cc      	ldr	r4, [r1, #28]
    1f70:	6abb      	ldr	r3, [r7, #40]	; 0x28
    1f72:	9e17      	ldr	r6, [sp, #92]	; 0x5c
    1f74:	9817      	ldr	r0, [sp, #92]	; 0x5c
    1f76:	6a72      	ldr	r2, [r6, #36]	; 0x24
    1f78:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
    1f7a:	9e17      	ldr	r6, [sp, #92]	; 0x5c
    1f7c:	941f      	str	r4, [sp, #124]	; 0x7c
    1f7e:	9322      	str	r3, [sp, #136]	; 0x88
    1f80:	9c17      	ldr	r4, [sp, #92]	; 0x5c
    1f82:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    1f84:	68a5      	ldr	r5, [r4, #8]
    1f86:	9221      	str	r2, [sp, #132]	; 0x84
    1f88:	9123      	str	r1, [sp, #140]	; 0x8c
    1f8a:	68f2      	ldr	r2, [r6, #12]
    1f8c:	6958      	ldr	r0, [r3, #20]
    1f8e:	9917      	ldr	r1, [sp, #92]	; 0x5c
    1f90:	9524      	str	r5, [sp, #144]	; 0x90
    1f92:	f8cd b070 	str.w	fp, [sp, #112]	; 0x70
    1f96:	f8cd 8080 	str.w	r8, [sp, #128]	; 0x80
    1f9a:	9225      	str	r2, [sp, #148]	; 0x94
    1f9c:	f8cd 9098 	str.w	r9, [sp, #152]	; 0x98
    1fa0:	9027      	str	r0, [sp, #156]	; 0x9c
    1fa2:	e891 00c0 	ldmia.w	r1, {r6, r7}
    1fa6:	2400      	movs	r4, #0
    1fa8:	9d18      	ldr	r5, [sp, #96]	; 0x60
    1faa:	e102      	b.n	21b2 <DesignAudioBiquadIIR_q31_t+0x6fa>
	double Temp = 0;
	uint8_t i;
	
	for(i=0;i<Size;i++)
	{
		if(Values[i]<0)
    1fac:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
			Temp= Values[i]*-1;
		else
			Temp = Values[i];
		
		if(Temp>Peak)
    1fb0:	4629      	mov	r1, r5
    1fb2:	4663      	mov	r3, ip
    1fb4:	4620      	mov	r0, r4
    1fb6:	4652      	mov	r2, sl
    1fb8:	f8cd c00c 	str.w	ip, [sp, #12]
    1fbc:	f7ff f84a 	bl	1054 <__aeabi_dcmplt>
	double Temp = 0;
	uint8_t i;
	
	for(i=0;i<Size;i++)
	{
		if(Values[i]<0)
    1fc0:	9b12      	ldr	r3, [sp, #72]	; 0x48
    1fc2:	f8cd 9030 	str.w	r9, [sp, #48]	; 0x30
    1fc6:	930d      	str	r3, [sp, #52]	; 0x34
			Temp= Values[i]*-1;
		else
			Temp = Values[i];
		
		if(Temp>Peak)
    1fc8:	f8dd c00c 	ldr.w	ip, [sp, #12]
    1fcc:	2800      	cmp	r0, #0
	double Temp = 0;
	uint8_t i;
	
	for(i=0;i<Size;i++)
	{
		if(Values[i]<0)
    1fce:	f04f 0200 	mov.w	r2, #0
    1fd2:	f04f 0300 	mov.w	r3, #0
    1fd6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
			Temp= Values[i]*-1;
		else
			Temp = Values[i];
		
		if(Temp>Peak)
    1fda:	bf18      	it	ne
    1fdc:	4654      	movne	r4, sl
    1fde:	bf18      	it	ne
    1fe0:	4665      	movne	r5, ip
	double Temp = 0;
	uint8_t i;
	
	for(i=0;i<Size;i++)
	{
		if(Values[i]<0)
    1fe2:	f7ff f837 	bl	1054 <__aeabi_dcmplt>
    1fe6:	2800      	cmp	r0, #0
    1fe8:	f040 83fd 	bne.w	27e6 <DesignAudioBiquadIIR_q31_t+0xd2e>
    1fec:	f8dd e048 	ldr.w	lr, [sp, #72]	; 0x48
			Temp= Values[i]*-1;
		else
			Temp = Values[i];
		
		if(Temp>Peak)
    1ff0:	4629      	mov	r1, r5
    1ff2:	4673      	mov	r3, lr
    1ff4:	4620      	mov	r0, r4
    1ff6:	464a      	mov	r2, r9
    1ff8:	f8cd e00c 	str.w	lr, [sp, #12]
    1ffc:	f7ff f82a 	bl	1054 <__aeabi_dcmplt>
	double Temp = 0;
	uint8_t i;
	
	for(i=0;i<Size;i++)
	{
		if(Values[i]<0)
    2000:	9914      	ldr	r1, [sp, #80]	; 0x50
    2002:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
    2006:	910d      	str	r1, [sp, #52]	; 0x34
			Temp= Values[i]*-1;
		else
			Temp = Values[i];
		
		if(Temp>Peak)
    2008:	f8dd e00c 	ldr.w	lr, [sp, #12]
    200c:	2800      	cmp	r0, #0
	double Temp = 0;
	uint8_t i;
	
	for(i=0;i<Size;i++)
	{
		if(Values[i]<0)
    200e:	f04f 0200 	mov.w	r2, #0
    2012:	f04f 0300 	mov.w	r3, #0
    2016:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
			Temp= Values[i]*-1;
		else
			Temp = Values[i];
		
		if(Temp>Peak)
    201a:	bf18      	it	ne
    201c:	464c      	movne	r4, r9
    201e:	bf18      	it	ne
    2020:	4675      	movne	r5, lr
	double Temp = 0;
	uint8_t i;
	
	for(i=0;i<Size;i++)
	{
		if(Values[i]<0)
    2022:	f7ff f817 	bl	1054 <__aeabi_dcmplt>
    2026:	2800      	cmp	r0, #0
    2028:	f040 83d9 	bne.w	27de <DesignAudioBiquadIIR_q31_t+0xd26>
    202c:	f8dd c050 	ldr.w	ip, [sp, #80]	; 0x50
			Temp= Values[i]*-1;
		else
			Temp = Values[i];
		
		if(Temp>Peak)
    2030:	4629      	mov	r1, r5
    2032:	4663      	mov	r3, ip
    2034:	4620      	mov	r0, r4
    2036:	465a      	mov	r2, fp
    2038:	f8cd c00c 	str.w	ip, [sp, #12]
    203c:	f7ff f80a 	bl	1054 <__aeabi_dcmplt>
	double Temp = 0;
	uint8_t i;
	
	for(i=0;i<Size;i++)
	{
		if(Values[i]<0)
    2040:	9915      	ldr	r1, [sp, #84]	; 0x54
    2042:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    2046:	910d      	str	r1, [sp, #52]	; 0x34
			Temp= Values[i]*-1;
		else
			Temp = Values[i];
		
		if(Temp>Peak)
    2048:	f8dd c00c 	ldr.w	ip, [sp, #12]
    204c:	2800      	cmp	r0, #0
	double Temp = 0;
	uint8_t i;
	
	for(i=0;i<Size;i++)
	{
		if(Values[i]<0)
    204e:	f04f 0200 	mov.w	r2, #0
    2052:	f04f 0300 	mov.w	r3, #0
    2056:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
			Temp= Values[i]*-1;
		else
			Temp = Values[i];
		
		if(Temp>Peak)
    205a:	bf18      	it	ne
    205c:	465c      	movne	r4, fp
    205e:	bf18      	it	ne
    2060:	4665      	movne	r5, ip
	double Temp = 0;
	uint8_t i;
	
	for(i=0;i<Size;i++)
	{
		if(Values[i]<0)
    2062:	f7fe fff7 	bl	1054 <__aeabi_dcmplt>
    2066:	2800      	cmp	r0, #0
    2068:	f040 83b5 	bne.w	27d6 <DesignAudioBiquadIIR_q31_t+0xd1e>
    206c:	f8dd e054 	ldr.w	lr, [sp, #84]	; 0x54
			Temp= Values[i]*-1;
		else
			Temp = Values[i];
		
		if(Temp>Peak)
    2070:	4629      	mov	r1, r5
    2072:	4620      	mov	r0, r4
    2074:	4642      	mov	r2, r8
    2076:	4673      	mov	r3, lr
    2078:	f8cd e00c 	str.w	lr, [sp, #12]
    207c:	f7fe ffea 	bl	1054 <__aeabi_dcmplt>
	double Temp = 0;
	uint8_t i;
	
	for(i=0;i<Size;i++)
	{
		if(Values[i]<0)
    2080:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    2082:	9b16      	ldr	r3, [sp, #88]	; 0x58
    2084:	920c      	str	r2, [sp, #48]	; 0x30
    2086:	930d      	str	r3, [sp, #52]	; 0x34
			Temp= Values[i]*-1;
		else
			Temp = Values[i];
		
		if(Temp>Peak)
    2088:	f8dd c00c 	ldr.w	ip, [sp, #12]
    208c:	2800      	cmp	r0, #0
	double Temp = 0;
	uint8_t i;
	
	for(i=0;i<Size;i++)
	{
		if(Values[i]<0)
    208e:	f04f 0200 	mov.w	r2, #0
    2092:	f04f 0300 	mov.w	r3, #0
    2096:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
			Temp= Values[i]*-1;
		else
			Temp = Values[i];
		
		if(Temp>Peak)
    209a:	bf18      	it	ne
    209c:	4644      	movne	r4, r8
    209e:	bf18      	it	ne
    20a0:	4665      	movne	r5, ip
	double Temp = 0;
	uint8_t i;
	
	for(i=0;i<Size;i++)
	{
		if(Values[i]<0)
    20a2:	f7fe ffd7 	bl	1054 <__aeabi_dcmplt>
    20a6:	2800      	cmp	r0, #0
    20a8:	f040 8391 	bne.w	27ce <DesignAudioBiquadIIR_q31_t+0xd16>
    20ac:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
			Temp= Values[i]*-1;
		else
			Temp = Values[i];
		
		if(Temp>Peak)
    20b0:	4620      	mov	r0, r4
    20b2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    20b4:	f8cd e00c 	str.w	lr, [sp, #12]
    20b8:	4629      	mov	r1, r5
    20ba:	4673      	mov	r3, lr
    20bc:	f7fe ffca 	bl	1054 <__aeabi_dcmplt>
	a2 = -1 *a2/a0;
	a0 = 1.0;
		
	C->PostShift = -1;
	
	while(GetPeak(&coef[0],6) > 1.0)
    20c0:	f8dd c00c 	ldr.w	ip, [sp, #12]
		if(Values[i]<0)
			Temp= Values[i]*-1;
		else
			Temp = Values[i];
		
		if(Temp>Peak)
    20c4:	2800      	cmp	r0, #0
	a2 = -1 *a2/a0;
	a0 = 1.0;
		
	C->PostShift = -1;
	
	while(GetPeak(&coef[0],6) > 1.0)
    20c6:	980e      	ldr	r0, [sp, #56]	; 0x38
    20c8:	bf08      	it	eq
    20ca:	4620      	moveq	r0, r4
    20cc:	bf14      	ite	ne
    20ce:	4664      	movne	r4, ip
    20d0:	462c      	moveq	r4, r5
    20d2:	2300      	movs	r3, #0
    20d4:	4621      	mov	r1, r4
    20d6:	2200      	movs	r2, #0
    20d8:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
    20dc:	f7fe ffd8 	bl	1090 <__aeabi_dcmpgt>
    20e0:	2800      	cmp	r0, #0
    20e2:	f000 8387 	beq.w	27f4 <DesignAudioBiquadIIR_q31_t+0xd3c>
	{
		C->PostShift++;
    20e6:	9d1e      	ldr	r5, [sp, #120]	; 0x78
    20e8:	7d2b      	ldrb	r3, [r5, #20]
    20ea:	3301      	adds	r3, #1
    20ec:	b2db      	uxtb	r3, r3
		b0 = b0/(float)(1<<C->PostShift);
    20ee:	b258      	sxtb	r0, r3
    20f0:	2601      	movs	r6, #1
		
	C->PostShift = -1;
	
	while(GetPeak(&coef[0],6) > 1.0)
	{
		C->PostShift++;
    20f2:	752b      	strb	r3, [r5, #20]
		b0 = b0/(float)(1<<C->PostShift);
    20f4:	fa06 f000 	lsl.w	r0, r6, r0
    20f8:	f7ff f906 	bl	1308 <__aeabi_i2f>
    20fc:	f7fe fce4 	bl	ac8 <__aeabi_f2d>
    2100:	9f14      	ldr	r7, [sp, #80]	; 0x50
    2102:	4604      	mov	r4, r0
    2104:	460d      	mov	r5, r1
    2106:	4602      	mov	r2, r0
    2108:	460b      	mov	r3, r1
    210a:	4658      	mov	r0, fp
    210c:	4639      	mov	r1, r7
    210e:	f7fe fe59 	bl	dc4 <__aeabi_ddiv>
		b1 = b1/(float)(1<<C->PostShift);
    2112:	9f15      	ldr	r7, [sp, #84]	; 0x54
	C->PostShift = -1;
	
	while(GetPeak(&coef[0],6) > 1.0)
	{
		C->PostShift++;
		b0 = b0/(float)(1<<C->PostShift);
    2114:	901c      	str	r0, [sp, #112]	; 0x70
		b1 = b1/(float)(1<<C->PostShift);
    2116:	4622      	mov	r2, r4
	C->PostShift = -1;
	
	while(GetPeak(&coef[0],6) > 1.0)
	{
		C->PostShift++;
		b0 = b0/(float)(1<<C->PostShift);
    2118:	911f      	str	r1, [sp, #124]	; 0x7c
		b1 = b1/(float)(1<<C->PostShift);
    211a:	462b      	mov	r3, r5
    211c:	4639      	mov	r1, r7
    211e:	4640      	mov	r0, r8
    2120:	f7fe fe50 	bl	dc4 <__aeabi_ddiv>
		b2 = b2/(float)(1<<C->PostShift);
    2124:	9e0e      	ldr	r6, [sp, #56]	; 0x38
    2126:	9f16      	ldr	r7, [sp, #88]	; 0x58
	
	while(GetPeak(&coef[0],6) > 1.0)
	{
		C->PostShift++;
		b0 = b0/(float)(1<<C->PostShift);
		b1 = b1/(float)(1<<C->PostShift);
    2128:	9020      	str	r0, [sp, #128]	; 0x80
		b2 = b2/(float)(1<<C->PostShift);
    212a:	4622      	mov	r2, r4
	
	while(GetPeak(&coef[0],6) > 1.0)
	{
		C->PostShift++;
		b0 = b0/(float)(1<<C->PostShift);
		b1 = b1/(float)(1<<C->PostShift);
    212c:	9121      	str	r1, [sp, #132]	; 0x84
		b2 = b2/(float)(1<<C->PostShift);
    212e:	462b      	mov	r3, r5
    2130:	4630      	mov	r0, r6
    2132:	4639      	mov	r1, r7
    2134:	f7fe fe46 	bl	dc4 <__aeabi_ddiv>
		a1 = a1/(float)(1<<C->PostShift);
    2138:	9f10      	ldr	r7, [sp, #64]	; 0x40
	while(GetPeak(&coef[0],6) > 1.0)
	{
		C->PostShift++;
		b0 = b0/(float)(1<<C->PostShift);
		b1 = b1/(float)(1<<C->PostShift);
		b2 = b2/(float)(1<<C->PostShift);
    213a:	9022      	str	r0, [sp, #136]	; 0x88
		a1 = a1/(float)(1<<C->PostShift);
    213c:	4622      	mov	r2, r4
	while(GetPeak(&coef[0],6) > 1.0)
	{
		C->PostShift++;
		b0 = b0/(float)(1<<C->PostShift);
		b1 = b1/(float)(1<<C->PostShift);
		b2 = b2/(float)(1<<C->PostShift);
    213e:	9123      	str	r1, [sp, #140]	; 0x8c
		a1 = a1/(float)(1<<C->PostShift);
    2140:	462b      	mov	r3, r5
    2142:	4639      	mov	r1, r7
    2144:	4650      	mov	r0, sl
    2146:	f7fe fe3d 	bl	dc4 <__aeabi_ddiv>
		a2 = a2/(float)(1<<C->PostShift);
    214a:	9f12      	ldr	r7, [sp, #72]	; 0x48
	{
		C->PostShift++;
		b0 = b0/(float)(1<<C->PostShift);
		b1 = b1/(float)(1<<C->PostShift);
		b2 = b2/(float)(1<<C->PostShift);
		a1 = a1/(float)(1<<C->PostShift);
    214c:	9024      	str	r0, [sp, #144]	; 0x90
		a2 = a2/(float)(1<<C->PostShift);
    214e:	4622      	mov	r2, r4
	{
		C->PostShift++;
		b0 = b0/(float)(1<<C->PostShift);
		b1 = b1/(float)(1<<C->PostShift);
		b2 = b2/(float)(1<<C->PostShift);
		a1 = a1/(float)(1<<C->PostShift);
    2150:	9125      	str	r1, [sp, #148]	; 0x94
		a2 = a2/(float)(1<<C->PostShift);
    2152:	462b      	mov	r3, r5
    2154:	4639      	mov	r1, r7
    2156:	4648      	mov	r0, r9
    2158:	f7fe fe34 	bl	dc4 <__aeabi_ddiv>
		a0 = a0/(float)(1<<C->PostShift);
    215c:	9e1a      	ldr	r6, [sp, #104]	; 0x68
    215e:	9f18      	ldr	r7, [sp, #96]	; 0x60
		C->PostShift++;
		b0 = b0/(float)(1<<C->PostShift);
		b1 = b1/(float)(1<<C->PostShift);
		b2 = b2/(float)(1<<C->PostShift);
		a1 = a1/(float)(1<<C->PostShift);
		a2 = a2/(float)(1<<C->PostShift);
    2160:	9026      	str	r0, [sp, #152]	; 0x98
		a0 = a0/(float)(1<<C->PostShift);
    2162:	4622      	mov	r2, r4
		C->PostShift++;
		b0 = b0/(float)(1<<C->PostShift);
		b1 = b1/(float)(1<<C->PostShift);
		b2 = b2/(float)(1<<C->PostShift);
		a1 = a1/(float)(1<<C->PostShift);
		a2 = a2/(float)(1<<C->PostShift);
    2164:	9127      	str	r1, [sp, #156]	; 0x9c
		a0 = a0/(float)(1<<C->PostShift);
    2166:	462b      	mov	r3, r5
    2168:	4630      	mov	r0, r6
    216a:	4639      	mov	r1, r7
    216c:	f7fe fe2a 	bl	dc4 <__aeabi_ddiv>
	double Temp = 0;
	uint8_t i;
	
	for(i=0;i<Size;i++)
	{
		if(Values[i]<0)
    2170:	2200      	movs	r2, #0
    2172:	2300      	movs	r3, #0
		b0 = b0/(float)(1<<C->PostShift);
		b1 = b1/(float)(1<<C->PostShift);
		b2 = b2/(float)(1<<C->PostShift);
		a1 = a1/(float)(1<<C->PostShift);
		a2 = a2/(float)(1<<C->PostShift);
		a0 = a0/(float)(1<<C->PostShift);
    2174:	4606      	mov	r6, r0
    2176:	460f      	mov	r7, r1
	double Temp = 0;
	uint8_t i;
	
	for(i=0;i<Size;i++)
	{
		if(Values[i]<0)
    2178:	f7fe ff6c 	bl	1054 <__aeabi_dcmplt>
			Temp= Values[i]*-1;
    217c:	4634      	mov	r4, r6
	double Temp = 0;
	uint8_t i;
	
	for(i=0;i<Size;i++)
	{
		if(Values[i]<0)
    217e:	2800      	cmp	r0, #0
    2180:	f040 8322 	bne.w	27c8 <DesignAudioBiquadIIR_q31_t+0xd10>
    2184:	463d      	mov	r5, r7
    2186:	9822      	ldr	r0, [sp, #136]	; 0x88
    2188:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    218a:	900e      	str	r0, [sp, #56]	; 0x38
    218c:	9216      	str	r2, [sp, #88]	; 0x58
    218e:	9b21      	ldr	r3, [sp, #132]	; 0x84
    2190:	991f      	ldr	r1, [sp, #124]	; 0x7c
    2192:	9827      	ldr	r0, [sp, #156]	; 0x9c
    2194:	9a25      	ldr	r2, [sp, #148]	; 0x94
    2196:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
    219a:	f8dd b070 	ldr.w	fp, [sp, #112]	; 0x70
    219e:	f8dd 9098 	ldr.w	r9, [sp, #152]	; 0x98
    21a2:	f8dd a090 	ldr.w	sl, [sp, #144]	; 0x90
    21a6:	9315      	str	r3, [sp, #84]	; 0x54
    21a8:	9114      	str	r1, [sp, #80]	; 0x50
    21aa:	9012      	str	r0, [sp, #72]	; 0x48
    21ac:	9210      	str	r2, [sp, #64]	; 0x40
    21ae:	961a      	str	r6, [sp, #104]	; 0x68
    21b0:	9718      	str	r7, [sp, #96]	; 0x60
			Temp= Values[i]*-1;
		else
			Temp = Values[i];
		
		if(Temp>Peak)
    21b2:	4620      	mov	r0, r4
    21b4:	4629      	mov	r1, r5
    21b6:	2200      	movs	r2, #0
    21b8:	2300      	movs	r3, #0
    21ba:	f7fe ff69 	bl	1090 <__aeabi_dcmpgt>
    21be:	b908      	cbnz	r0, 21c4 <DesignAudioBiquadIIR_q31_t+0x70c>



double GetPeak(double *Values,uint8_t Size)
{
	double Peak = 0;
    21c0:	4604      	mov	r4, r0
    21c2:	4605      	mov	r5, r0
	double Temp = 0;
	uint8_t i;
	
	for(i=0;i<Size;i++)
	{
		if(Values[i]<0)
    21c4:	4650      	mov	r0, sl
    21c6:	9910      	ldr	r1, [sp, #64]	; 0x40
    21c8:	2200      	movs	r2, #0
    21ca:	2300      	movs	r3, #0
    21cc:	f7fe ff42 	bl	1054 <__aeabi_dcmplt>
    21d0:	2800      	cmp	r0, #0
    21d2:	f43f aeeb 	beq.w	1fac <DesignAudioBiquadIIR_q31_t+0x4f4>
			Temp= Values[i]*-1;
    21d6:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
    21da:	f10e 4c00 	add.w	ip, lr, #2147483648	; 0x80000000
    21de:	e6e7      	b.n	1fb0 <DesignAudioBiquadIIR_q31_t+0x4f8>
	switch(FilterType)
	{
	default:	
			case LOW_PASS_FILTER	:       

	            b0 =  (1 - cos(w0))/2;
    21e0:	4650      	mov	r0, sl
    21e2:	4659      	mov	r1, fp
    21e4:	f003 fe22 	bl	5e2c <cos>
    21e8:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
    21ec:	460b      	mov	r3, r1
    21ee:	2100      	movs	r1, #0
    21f0:	4602      	mov	r2, r0
    21f2:	f6c3 71f0 	movt	r1, #16368	; 0x3ff0
    21f6:	2000      	movs	r0, #0
    21f8:	f7fe fb06 	bl	808 <__aeabi_dsub>
    21fc:	2300      	movs	r3, #0
    21fe:	468b      	mov	fp, r1
    2200:	2200      	movs	r2, #0
    2202:	f6c3 73e0 	movt	r3, #16352	; 0x3fe0
    2206:	4659      	mov	r1, fp
    2208:	4682      	mov	sl, r0
    220a:	f7fe fcb1 	bl	b70 <__aeabi_dmul>
	            b1 =   1 - cos(w0);
	            b2 =  (1 - cos(w0))/2;
	            a0 =   1 + alpha;
    220e:	2300      	movs	r3, #0
	switch(FilterType)
	{
	default:	
			case LOW_PASS_FILTER	:       

	            b0 =  (1 - cos(w0))/2;
    2210:	4681      	mov	r9, r0
    2212:	4688      	mov	r8, r1
	            b1 =   1 - cos(w0);
	            b2 =  (1 - cos(w0))/2;
	            a0 =   1 + alpha;
    2214:	2200      	movs	r2, #0
    2216:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
    221a:	4638      	mov	r0, r7
    221c:	4631      	mov	r1, r6
    221e:	f7fe faf5 	bl	80c <__adddf3>
	            a1 =  -2*cos(w0);
    2222:	2200      	movs	r2, #0
    2224:	f04f 4340 	mov.w	r3, #3221225472	; 0xc0000000
			case LOW_PASS_FILTER	:       

	            b0 =  (1 - cos(w0))/2;
	            b1 =   1 - cos(w0);
	            b2 =  (1 - cos(w0))/2;
	            a0 =   1 + alpha;
    2228:	4604      	mov	r4, r0
    222a:	460d      	mov	r5, r1
	            a1 =  -2*cos(w0);
    222c:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
    2230:	f7fe fc9e 	bl	b70 <__aeabi_dmul>
    2234:	468e      	mov	lr, r1
	            a2 =   1 - alpha;
    2236:	2100      	movs	r1, #0

	            b0 =  (1 - cos(w0))/2;
	            b1 =   1 - cos(w0);
	            b2 =  (1 - cos(w0))/2;
	            a0 =   1 + alpha;
	            a1 =  -2*cos(w0);
    2238:	4684      	mov	ip, r0
	            a2 =   1 - alpha;
    223a:	4633      	mov	r3, r6
    223c:	463a      	mov	r2, r7
    223e:	2000      	movs	r0, #0
    2240:	f6c3 71f0 	movt	r1, #16368	; 0x3ff0

	            b0 =  (1 - cos(w0))/2;
	            b1 =   1 - cos(w0);
	            b2 =  (1 - cos(w0))/2;
	            a0 =   1 + alpha;
	            a1 =  -2*cos(w0);
    2244:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
    2248:	f8cd e048 	str.w	lr, [sp, #72]	; 0x48
	            a2 =   1 - alpha;
    224c:	f7fe fadc 	bl	808 <__aeabi_dsub>
    2250:	4baa      	ldr	r3, [pc, #680]	; (24fc <DesignAudioBiquadIIR_q31_t+0xa44>)
    2252:	900e      	str	r0, [sp, #56]	; 0x38
    2254:	910c      	str	r1, [sp, #48]	; 0x30

	            break;
    2256:	464f      	mov	r7, r9
    2258:	4646      	mov	r6, r8
    225a:	9317      	str	r3, [sp, #92]	; 0x5c
    225c:	e62a      	b.n	1eb4 <DesignAudioBiquadIIR_q31_t+0x3fc>
	            	    

				case   HIGH_PASS_FILTER 	:    

	            b0 =  (1 + cos(w0))/2;
    225e:	4650      	mov	r0, sl
    2260:	4659      	mov	r1, fp
    2262:	f003 fde3 	bl	5e2c <cos>
    2266:	2300      	movs	r3, #0
    2268:	2200      	movs	r2, #0
    226a:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
    226e:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
    2272:	f7fe facb 	bl	80c <__adddf3>
    2276:	2300      	movs	r3, #0
    2278:	468b      	mov	fp, r1
    227a:	2200      	movs	r2, #0
    227c:	f6c3 73e0 	movt	r3, #16352	; 0x3fe0
    2280:	4659      	mov	r1, fp
    2282:	4682      	mov	sl, r0
    2284:	f7fe fc74 	bl	b70 <__aeabi_dmul>
	            b1 = -(1 + cos(w0));
	            b2 =  (1 + cos(w0))/2;
	            a0 =   1 + alpha;
    2288:	2300      	movs	r3, #0
	            break;
	            	    

				case   HIGH_PASS_FILTER 	:    

	            b0 =  (1 + cos(w0))/2;
    228a:	4684      	mov	ip, r0
    228c:	468e      	mov	lr, r1
	            b1 = -(1 + cos(w0));
	            b2 =  (1 + cos(w0))/2;
	            a0 =   1 + alpha;
    228e:	2200      	movs	r2, #0
    2290:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
    2294:	4638      	mov	r0, r7
    2296:	4631      	mov	r1, r6
	            break;
	            	    

				case   HIGH_PASS_FILTER 	:    

	            b0 =  (1 + cos(w0))/2;
    2298:	46e1      	mov	r9, ip
    229a:	46f0      	mov	r8, lr
	            b1 = -(1 + cos(w0));
	            b2 =  (1 + cos(w0))/2;
	            a0 =   1 + alpha;
    229c:	f7fe fab6 	bl	80c <__adddf3>
	            a1 =  -2*cos(w0);
    22a0:	2200      	movs	r2, #0
    22a2:	f04f 4340 	mov.w	r3, #3221225472	; 0xc0000000
				case   HIGH_PASS_FILTER 	:    

	            b0 =  (1 + cos(w0))/2;
	            b1 = -(1 + cos(w0));
	            b2 =  (1 + cos(w0))/2;
	            a0 =   1 + alpha;
    22a6:	4604      	mov	r4, r0
    22a8:	460d      	mov	r5, r1
	            a1 =  -2*cos(w0);
    22aa:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
    22ae:	f7fe fc5f 	bl	b70 <__aeabi_dmul>
    22b2:	468e      	mov	lr, r1
	            a2 =   1 - alpha;
    22b4:	2100      	movs	r1, #0

	            b0 =  (1 + cos(w0))/2;
	            b1 = -(1 + cos(w0));
	            b2 =  (1 + cos(w0))/2;
	            a0 =   1 + alpha;
	            a1 =  -2*cos(w0);
    22b6:	4684      	mov	ip, r0
	            a2 =   1 - alpha;
    22b8:	463a      	mov	r2, r7
    22ba:	4633      	mov	r3, r6
    22bc:	2000      	movs	r0, #0
    22be:	f6c3 71f0 	movt	r1, #16368	; 0x3ff0

	            b0 =  (1 + cos(w0))/2;
	            b1 = -(1 + cos(w0));
	            b2 =  (1 + cos(w0))/2;
	            a0 =   1 + alpha;
	            a1 =  -2*cos(w0);
    22c2:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
    22c6:	f8cd e048 	str.w	lr, [sp, #72]	; 0x48
	            a2 =   1 - alpha;
    22ca:	f7fe fa9d 	bl	808 <__aeabi_dsub>
    22ce:	4a8b      	ldr	r2, [pc, #556]	; (24fc <DesignAudioBiquadIIR_q31_t+0xa44>)
    22d0:	900e      	str	r0, [sp, #56]	; 0x38
	            	    

				case   HIGH_PASS_FILTER 	:    

	            b0 =  (1 + cos(w0))/2;
	            b1 = -(1 + cos(w0));
    22d2:	f10b 4b00 	add.w	fp, fp, #2147483648	; 0x80000000
	            b2 =  (1 + cos(w0))/2;
	            a0 =   1 + alpha;
	            a1 =  -2*cos(w0);
	            a2 =   1 - alpha;
    22d6:	910c      	str	r1, [sp, #48]	; 0x30

	            break;
    22d8:	464f      	mov	r7, r9
    22da:	4646      	mov	r6, r8
    22dc:	9217      	str	r2, [sp, #92]	; 0x5c
    22de:	e5e9      	b.n	1eb4 <DesignAudioBiquadIIR_q31_t+0x3fc>
	            	    

				case         BAND_PASS_FILTER_CONSTANT_SKIRT_GAIN_PEAKGAIN_Q	:    

	            b0 =   Q*alpha;
    22e0:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
    22e4:	4638      	mov	r0, r7
    22e6:	f7fe fc43 	bl	b70 <__aeabi_dmul>
	            b1 =   0;
	            b2 =  -Q*alpha;
    22ea:	9b34      	ldr	r3, [sp, #208]	; 0xd0
	            break;
	            	    

				case         BAND_PASS_FILTER_CONSTANT_SKIRT_GAIN_PEAKGAIN_Q	:    

	            b0 =   Q*alpha;
    22ec:	9014      	str	r0, [sp, #80]	; 0x50
	            b1 =   0;
	            b2 =  -Q*alpha;
    22ee:	f103 4000 	add.w	r0, r3, #2147483648	; 0x80000000
	            break;
	            	    

				case         BAND_PASS_FILTER_CONSTANT_SKIRT_GAIN_PEAKGAIN_Q	:    

	            b0 =   Q*alpha;
    22f2:	9115      	str	r1, [sp, #84]	; 0x54
	            b1 =   0;
	            b2 =  -Q*alpha;
    22f4:	f7fe fbe8 	bl	ac8 <__aeabi_f2d>
    22f8:	4602      	mov	r2, r0
    22fa:	460b      	mov	r3, r1
    22fc:	4638      	mov	r0, r7
    22fe:	4631      	mov	r1, r6
    2300:	f7fe fc36 	bl	b70 <__aeabi_dmul>
	            a0 =   1 + alpha;
    2304:	2300      	movs	r3, #0

				case         BAND_PASS_FILTER_CONSTANT_SKIRT_GAIN_PEAKGAIN_Q	:    

	            b0 =   Q*alpha;
	            b1 =   0;
	            b2 =  -Q*alpha;
    2306:	4684      	mov	ip, r0
    2308:	468e      	mov	lr, r1
	            a0 =   1 + alpha;
    230a:	2200      	movs	r2, #0
    230c:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
    2310:	4638      	mov	r0, r7
    2312:	4631      	mov	r1, r6

				case         BAND_PASS_FILTER_CONSTANT_SKIRT_GAIN_PEAKGAIN_Q	:    

	            b0 =   Q*alpha;
	            b1 =   0;
	            b2 =  -Q*alpha;
    2314:	46e1      	mov	r9, ip
    2316:	46f0      	mov	r8, lr
	            a0 =   1 + alpha;
    2318:	f7fe fa78 	bl	80c <__adddf3>
    231c:	4604      	mov	r4, r0
    231e:	460d      	mov	r5, r1
	            a1 =  -2*cos(w0);
    2320:	4650      	mov	r0, sl
    2322:	4659      	mov	r1, fp
    2324:	f003 fd82 	bl	5e2c <cos>
    2328:	2200      	movs	r2, #0
    232a:	f04f 4340 	mov.w	r3, #3221225472	; 0xc0000000
    232e:	f7fe fc1f 	bl	b70 <__aeabi_dmul>
    2332:	468e      	mov	lr, r1
	            a2 =   1 - alpha;
    2334:	2100      	movs	r1, #0

	            b0 =   Q*alpha;
	            b1 =   0;
	            b2 =  -Q*alpha;
	            a0 =   1 + alpha;
	            a1 =  -2*cos(w0);
    2336:	4684      	mov	ip, r0
	            a2 =   1 - alpha;
    2338:	463a      	mov	r2, r7
    233a:	4633      	mov	r3, r6
    233c:	2000      	movs	r0, #0
    233e:	f6c3 71f0 	movt	r1, #16368	; 0x3ff0

	            b0 =   Q*alpha;
	            b1 =   0;
	            b2 =  -Q*alpha;
	            a0 =   1 + alpha;
	            a1 =  -2*cos(w0);
    2342:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
    2346:	f8cd e048 	str.w	lr, [sp, #72]	; 0x48
	            a2 =   1 - alpha;
    234a:	f7fe fa5d 	bl	808 <__aeabi_dsub>
    234e:	910c      	str	r1, [sp, #48]	; 0x30
    2350:	496a      	ldr	r1, [pc, #424]	; (24fc <DesignAudioBiquadIIR_q31_t+0xa44>)
    2352:	900e      	str	r0, [sp, #56]	; 0x38

	            break;
    2354:	f04f 0a00 	mov.w	sl, #0
    2358:	9f14      	ldr	r7, [sp, #80]	; 0x50
    235a:	9e15      	ldr	r6, [sp, #84]	; 0x54
    235c:	9117      	str	r1, [sp, #92]	; 0x5c
    235e:	46d3      	mov	fp, sl
    2360:	e5a8      	b.n	1eb4 <DesignAudioBiquadIIR_q31_t+0x3fc>
				case            BAND_PASS_FILTER_CONSTANT_0_DB_PEAK_GAIN:    

	            b0 =   alpha;
	            b1 =   0;
	            b2 =  -alpha;
	            a0 =   1 + alpha;
    2362:	2300      	movs	r3, #0
    2364:	2200      	movs	r2, #0
    2366:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
    236a:	4638      	mov	r0, r7
    236c:	f7fe fa4e 	bl	80c <__adddf3>
    2370:	4604      	mov	r4, r0
    2372:	460d      	mov	r5, r1
	            a1 =  -2*cos(w0);
    2374:	4650      	mov	r0, sl
    2376:	4659      	mov	r1, fp
    2378:	f003 fd58 	bl	5e2c <cos>
    237c:	2200      	movs	r2, #0
    237e:	f04f 4340 	mov.w	r3, #3221225472	; 0xc0000000
    2382:	f7fe fbf5 	bl	b70 <__aeabi_dmul>
    2386:	4688      	mov	r8, r1
	            a2 =   1 - alpha;
    2388:	2100      	movs	r1, #0

	            b0 =   alpha;
	            b1 =   0;
	            b2 =  -alpha;
	            a0 =   1 + alpha;
	            a1 =  -2*cos(w0);
    238a:	4682      	mov	sl, r0
	            a2 =   1 - alpha;
    238c:	463a      	mov	r2, r7
    238e:	4633      	mov	r3, r6
    2390:	2000      	movs	r0, #0
    2392:	f6c3 71f0 	movt	r1, #16368	; 0x3ff0

	            b0 =   alpha;
	            b1 =   0;
	            b2 =  -alpha;
	            a0 =   1 + alpha;
	            a1 =  -2*cos(w0);
    2396:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
    239a:	f8cd 8048 	str.w	r8, [sp, #72]	; 0x48
	            a2 =   1 - alpha;
    239e:	f7fe fa33 	bl	808 <__aeabi_dsub>
    23a2:	900e      	str	r0, [sp, #56]	; 0x38
    23a4:	4855      	ldr	r0, [pc, #340]	; (24fc <DesignAudioBiquadIIR_q31_t+0xa44>)
    23a6:	910c      	str	r1, [sp, #48]	; 0x30

	            break;
    23a8:	f04f 0a00 	mov.w	sl, #0
	            	    
				case            BAND_PASS_FILTER_CONSTANT_0_DB_PEAK_GAIN:    

	            b0 =   alpha;
	            b1 =   0;
	            b2 =  -alpha;
    23ac:	46b9      	mov	r9, r7
    23ae:	f106 4800 	add.w	r8, r6, #2147483648	; 0x80000000
	            a0 =   1 + alpha;
	            a1 =  -2*cos(w0);
	            a2 =   1 - alpha;

	            break;
    23b2:	46d3      	mov	fp, sl
    23b4:	9017      	str	r0, [sp, #92]	; 0x5c
    23b6:	e57d      	b.n	1eb4 <DesignAudioBiquadIIR_q31_t+0x3fc>
	            	    

				case             NOTCH_FILTER:   

	            b0 =   1;
	            b1 =  -2*cos(w0);
    23b8:	4650      	mov	r0, sl
    23ba:	4659      	mov	r1, fp
    23bc:	f003 fd36 	bl	5e2c <cos>
    23c0:	2200      	movs	r2, #0
    23c2:	f04f 4340 	mov.w	r3, #3221225472	; 0xc0000000
    23c6:	f7fe fbd3 	bl	b70 <__aeabi_dmul>
	            b2 =   1;
	            a0 =   1 + alpha;
    23ca:	2300      	movs	r3, #0
	            	    

				case             NOTCH_FILTER:   

	            b0 =   1;
	            b1 =  -2*cos(w0);
    23cc:	4682      	mov	sl, r0
    23ce:	468b      	mov	fp, r1
	            b2 =   1;
	            a0 =   1 + alpha;
    23d0:	2200      	movs	r2, #0
    23d2:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
    23d6:	4638      	mov	r0, r7
    23d8:	4631      	mov	r1, r6
    23da:	f7fe fa17 	bl	80c <__adddf3>
    23de:	460d      	mov	r5, r1
	            a1 =  -2*cos(w0);
	            a2 =   1 - alpha;
    23e0:	2100      	movs	r1, #0
    23e2:	4633      	mov	r3, r6
    23e4:	463a      	mov	r2, r7
				case             NOTCH_FILTER:   

	            b0 =   1;
	            b1 =  -2*cos(w0);
	            b2 =   1;
	            a0 =   1 + alpha;
    23e6:	4604      	mov	r4, r0
	            a1 =  -2*cos(w0);
	            a2 =   1 - alpha;
    23e8:	f6c3 71f0 	movt	r1, #16368	; 0x3ff0
    23ec:	2000      	movs	r0, #0
    23ee:	f7fe fa0b 	bl	808 <__aeabi_dsub>

	            break;
    23f2:	f04f 0800 	mov.w	r8, #0
    23f6:	4b41      	ldr	r3, [pc, #260]	; (24fc <DesignAudioBiquadIIR_q31_t+0xa44>)
	            b0 =   1;
	            b1 =  -2*cos(w0);
	            b2 =   1;
	            a0 =   1 + alpha;
	            a1 =  -2*cos(w0);
	            a2 =   1 - alpha;
    23f8:	900e      	str	r0, [sp, #56]	; 0x38

	            break;
    23fa:	46c1      	mov	r9, r8
    23fc:	f6c3 78f0 	movt	r8, #16368	; 0x3ff0
	            b0 =   1;
	            b1 =  -2*cos(w0);
	            b2 =   1;
	            a0 =   1 + alpha;
	            a1 =  -2*cos(w0);
	            a2 =   1 - alpha;
    2400:	910c      	str	r1, [sp, #48]	; 0x30

	            break;
    2402:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
    2406:	f8cd b048 	str.w	fp, [sp, #72]	; 0x48
    240a:	464f      	mov	r7, r9
    240c:	4646      	mov	r6, r8
    240e:	9317      	str	r3, [sp, #92]	; 0x5c
    2410:	e550      	b.n	1eb4 <DesignAudioBiquadIIR_q31_t+0x3fc>
	            	    

				case             ALL_PASS_FILTER:      

	            b0 =   1 - alpha;
    2412:	460b      	mov	r3, r1
    2414:	2100      	movs	r1, #0
    2416:	463a      	mov	r2, r7
    2418:	2000      	movs	r0, #0
    241a:	f6c3 71f0 	movt	r1, #16368	; 0x3ff0
    241e:	f7fe f9f3 	bl	808 <__aeabi_dsub>
    2422:	460b      	mov	r3, r1
    2424:	4604      	mov	r4, r0
	            b1 =  -2*cos(w0);
    2426:	4659      	mov	r1, fp
    2428:	4650      	mov	r0, sl
	            break;
	            	    

				case             ALL_PASS_FILTER:      

	            b0 =   1 - alpha;
    242a:	940e      	str	r4, [sp, #56]	; 0x38
    242c:	930c      	str	r3, [sp, #48]	; 0x30
	            b1 =  -2*cos(w0);
    242e:	f003 fcfd 	bl	5e2c <cos>
    2432:	2200      	movs	r2, #0
    2434:	f04f 4340 	mov.w	r3, #3221225472	; 0xc0000000
    2438:	f7fe fb9a 	bl	b70 <__aeabi_dmul>
	            b2 =   1 + alpha;
    243c:	2300      	movs	r3, #0
	            	    

				case             ALL_PASS_FILTER:      

	            b0 =   1 - alpha;
	            b1 =  -2*cos(w0);
    243e:	4682      	mov	sl, r0
    2440:	468b      	mov	fp, r1
	            b2 =   1 + alpha;
    2442:	4638      	mov	r0, r7
    2444:	4631      	mov	r1, r6
    2446:	2200      	movs	r2, #0
    2448:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
    244c:	f7fe f9de 	bl	80c <__adddf3>
    2450:	4a2a      	ldr	r2, [pc, #168]	; (24fc <DesignAudioBiquadIIR_q31_t+0xa44>)
	            a0 =   1 + alpha;
	            a1 =  -2*cos(w0);
	            a2 =   1 - alpha;

	            break;
    2452:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40

				case             ALL_PASS_FILTER:      

	            b0 =   1 - alpha;
	            b1 =  -2*cos(w0);
	            b2 =   1 + alpha;
    2456:	4604      	mov	r4, r0
    2458:	460d      	mov	r5, r1
	            a0 =   1 + alpha;
	            a1 =  -2*cos(w0);
	            a2 =   1 - alpha;

	            break;
    245a:	f8cd b048 	str.w	fp, [sp, #72]	; 0x48
    245e:	4681      	mov	r9, r0
    2460:	4688      	mov	r8, r1
    2462:	9f0e      	ldr	r7, [sp, #56]	; 0x38
    2464:	9e0c      	ldr	r6, [sp, #48]	; 0x30
    2466:	9217      	str	r2, [sp, #92]	; 0x5c
    2468:	e524      	b.n	1eb4 <DesignAudioBiquadIIR_q31_t+0x3fc>
	            	    

				case             PEAKING_EQ: 

	            b0 =   1 + alpha*A;
    246a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
    246e:	4638      	mov	r0, r7
    2470:	f7fe fb7e 	bl	b70 <__aeabi_dmul>
    2474:	2300      	movs	r3, #0
    2476:	2200      	movs	r2, #0
    2478:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
    247c:	4604      	mov	r4, r0
    247e:	460d      	mov	r5, r1
    2480:	f7fe f9c4 	bl	80c <__adddf3>
    2484:	9014      	str	r0, [sp, #80]	; 0x50
    2486:	9115      	str	r1, [sp, #84]	; 0x54
	            b1 =  -2*cos(w0);
    2488:	4650      	mov	r0, sl
    248a:	4659      	mov	r1, fp
    248c:	f003 fcce 	bl	5e2c <cos>
    2490:	2200      	movs	r2, #0
    2492:	f04f 4340 	mov.w	r3, #3221225472	; 0xc0000000
    2496:	f7fe fb6b 	bl	b70 <__aeabi_dmul>
    249a:	468b      	mov	fp, r1
	            b2 =   1 - alpha*A;
    249c:	2100      	movs	r1, #0
    249e:	4622      	mov	r2, r4
    24a0:	462b      	mov	r3, r5
	            	    

				case             PEAKING_EQ: 

	            b0 =   1 + alpha*A;
	            b1 =  -2*cos(w0);
    24a2:	4682      	mov	sl, r0
	            b2 =   1 - alpha*A;
    24a4:	f6c3 71f0 	movt	r1, #16368	; 0x3ff0
    24a8:	2000      	movs	r0, #0
    24aa:	f7fe f9ad 	bl	808 <__aeabi_dsub>
	            a0 =   1 + alpha/A;
    24ae:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40

				case             PEAKING_EQ: 

	            b0 =   1 + alpha*A;
	            b1 =  -2*cos(w0);
	            b2 =   1 - alpha*A;
    24b2:	468e      	mov	lr, r1
    24b4:	4681      	mov	r9, r0
	            a0 =   1 + alpha/A;
    24b6:	4631      	mov	r1, r6
    24b8:	4638      	mov	r0, r7

				case             PEAKING_EQ: 

	            b0 =   1 + alpha*A;
	            b1 =  -2*cos(w0);
	            b2 =   1 - alpha*A;
    24ba:	46f0      	mov	r8, lr
	            a0 =   1 + alpha/A;
    24bc:	f7fe fc82 	bl	dc4 <__aeabi_ddiv>
    24c0:	2300      	movs	r3, #0
    24c2:	2200      	movs	r2, #0
    24c4:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
    24c8:	4606      	mov	r6, r0
    24ca:	460f      	mov	r7, r1
    24cc:	f7fe f99e 	bl	80c <__adddf3>
    24d0:	460d      	mov	r5, r1
	            a1 =  -2*cos(w0);
	            a2 =   1 - alpha/A;
    24d2:	2100      	movs	r1, #0
    24d4:	4632      	mov	r2, r6
    24d6:	463b      	mov	r3, r7
				case             PEAKING_EQ: 

	            b0 =   1 + alpha*A;
	            b1 =  -2*cos(w0);
	            b2 =   1 - alpha*A;
	            a0 =   1 + alpha/A;
    24d8:	4604      	mov	r4, r0
	            a1 =  -2*cos(w0);
	            a2 =   1 - alpha/A;
    24da:	f6c3 71f0 	movt	r1, #16368	; 0x3ff0
    24de:	2000      	movs	r0, #0
    24e0:	f7fe f992 	bl	808 <__aeabi_dsub>
    24e4:	4a05      	ldr	r2, [pc, #20]	; (24fc <DesignAudioBiquadIIR_q31_t+0xa44>)
    24e6:	900e      	str	r0, [sp, #56]	; 0x38
    24e8:	910c      	str	r1, [sp, #48]	; 0x30
	           
	            break;
    24ea:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
    24ee:	f8cd b048 	str.w	fp, [sp, #72]	; 0x48
    24f2:	9f14      	ldr	r7, [sp, #80]	; 0x50
    24f4:	9e15      	ldr	r6, [sp, #84]	; 0x54
    24f6:	9217      	str	r2, [sp, #92]	; 0x5c
    24f8:	e4dc      	b.n	1eb4 <DesignAudioBiquadIIR_q31_t+0x3fc>
    24fa:	bf00      	nop
    24fc:	1fffe070 	.word	0x1fffe070
	            	    


				case            LOW_SHELF: 

	            b0 =    A*( (A+1) - (A-1)*cos(w0) + 2*sqrt(A)*alpha );
    2500:	4650      	mov	r0, sl
    2502:	4659      	mov	r1, fp
    2504:	f003 fc92 	bl	5e2c <cos>
    2508:	4682      	mov	sl, r0
    250a:	468b      	mov	fp, r1
    250c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
    2510:	f003 fd56 	bl	5fc0 <sqrt>
    2514:	2300      	movs	r3, #0
    2516:	4604      	mov	r4, r0
    2518:	460d      	mov	r5, r1
    251a:	2200      	movs	r2, #0
    251c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
    2520:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
    2524:	f7fe f972 	bl	80c <__adddf3>
    2528:	2300      	movs	r3, #0
    252a:	4606      	mov	r6, r0
    252c:	460f      	mov	r7, r1
    252e:	2200      	movs	r2, #0
    2530:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
    2534:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
    2538:	f7fe f966 	bl	808 <__aeabi_dsub>
    253c:	4652      	mov	r2, sl
    253e:	465b      	mov	r3, fp
    2540:	f7fe fb16 	bl	b70 <__aeabi_dmul>
    2544:	4602      	mov	r2, r0
    2546:	460b      	mov	r3, r1
    2548:	4630      	mov	r0, r6
    254a:	4639      	mov	r1, r7
    254c:	f7fe f95c 	bl	808 <__aeabi_dsub>
    2550:	4622      	mov	r2, r4
    2552:	4606      	mov	r6, r0
    2554:	460f      	mov	r7, r1
    2556:	462b      	mov	r3, r5
    2558:	4620      	mov	r0, r4
    255a:	4629      	mov	r1, r5
    255c:	f7fe f956 	bl	80c <__adddf3>
    2560:	e9d9 2300 	ldrd	r2, r3, [r9]
    2564:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
    2568:	f7fe fb02 	bl	b70 <__aeabi_dmul>
    256c:	e9d8 4500 	ldrd	r4, r5, [r8]
    2570:	4602      	mov	r2, r0
    2572:	460b      	mov	r3, r1
    2574:	4630      	mov	r0, r6
    2576:	4639      	mov	r1, r7
    2578:	f7fe f948 	bl	80c <__adddf3>
    257c:	4622      	mov	r2, r4
    257e:	462b      	mov	r3, r5
    2580:	f7fe faf6 	bl	b70 <__aeabi_dmul>
    2584:	4e9a      	ldr	r6, [pc, #616]	; (27f0 <DesignAudioBiquadIIR_q31_t+0xd38>)
	            b1 =  2*A*( (A-1) - (A+1)*cos(w0)                   );
    2586:	2300      	movs	r3, #0
	            	    


				case            LOW_SHELF: 

	            b0 =    A*( (A+1) - (A-1)*cos(w0) + 2*sqrt(A)*alpha );
    2588:	e9c6 0106 	strd	r0, r1, [r6, #24]
	            b1 =  2*A*( (A-1) - (A+1)*cos(w0)                   );
    258c:	2200      	movs	r2, #0
    258e:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
    2592:	4620      	mov	r0, r4
    2594:	4629      	mov	r1, r5
	            	    


				case            LOW_SHELF: 

	            b0 =    A*( (A+1) - (A-1)*cos(w0) + 2*sqrt(A)*alpha );
    2596:	9617      	str	r6, [sp, #92]	; 0x5c
	            b1 =  2*A*( (A-1) - (A+1)*cos(w0)                   );
    2598:	f7fe f936 	bl	808 <__aeabi_dsub>
    259c:	2300      	movs	r3, #0
    259e:	4606      	mov	r6, r0
    25a0:	460f      	mov	r7, r1
    25a2:	2200      	movs	r2, #0
    25a4:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
    25a8:	4620      	mov	r0, r4
    25aa:	4629      	mov	r1, r5
    25ac:	f7fe f92e 	bl	80c <__adddf3>
    25b0:	468b      	mov	fp, r1
    25b2:	f24e 0168 	movw	r1, #57448	; 0xe068
    25b6:	f6c1 71ff 	movt	r1, #8191	; 0x1fff
    25ba:	4682      	mov	sl, r0
    25bc:	e9d1 0100 	ldrd	r0, r1, [r1]
    25c0:	f003 fc34 	bl	5e2c <cos>
    25c4:	4622      	mov	r2, r4
    25c6:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
    25ca:	462b      	mov	r3, r5
    25cc:	4620      	mov	r0, r4
    25ce:	4629      	mov	r1, r5
    25d0:	f7fe f91c 	bl	80c <__adddf3>
    25d4:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
    25d8:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
    25dc:	4650      	mov	r0, sl
    25de:	4659      	mov	r1, fp
    25e0:	f7fe fac6 	bl	b70 <__aeabi_dmul>
    25e4:	4602      	mov	r2, r0
    25e6:	460b      	mov	r3, r1
    25e8:	4630      	mov	r0, r6
    25ea:	4639      	mov	r1, r7
    25ec:	f7fe f90c 	bl	808 <__aeabi_dsub>
    25f0:	460b      	mov	r3, r1
    25f2:	4602      	mov	r2, r0
    25f4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
    25f8:	f7fe faba 	bl	b70 <__aeabi_dmul>
    25fc:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    25fe:	e9c2 0108 	strd	r0, r1, [r2, #32]
	            b2 =    A*( (A+1) - (A-1)*cos(w0) - 2*sqrt(A)*alpha );
    2602:	4620      	mov	r0, r4
    2604:	4629      	mov	r1, r5
    2606:	f003 fcdb 	bl	5fc0 <sqrt>
    260a:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
    260e:	4604      	mov	r4, r0
    2610:	460d      	mov	r5, r1
    2612:	4630      	mov	r0, r6
    2614:	4639      	mov	r1, r7
    2616:	f7fe faab 	bl	b70 <__aeabi_dmul>
    261a:	4602      	mov	r2, r0
    261c:	460b      	mov	r3, r1
    261e:	4650      	mov	r0, sl
    2620:	4659      	mov	r1, fp
    2622:	f7fe f8f1 	bl	808 <__aeabi_dsub>
    2626:	4622      	mov	r2, r4
    2628:	4606      	mov	r6, r0
    262a:	460f      	mov	r7, r1
    262c:	462b      	mov	r3, r5
    262e:	4620      	mov	r0, r4
    2630:	4629      	mov	r1, r5
    2632:	f7fe f8eb 	bl	80c <__adddf3>
    2636:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
    263a:	e9d9 2300 	ldrd	r2, r3, [r9]
    263e:	e9de 4500 	ldrd	r4, r5, [lr]
    2642:	f7fe fa95 	bl	b70 <__aeabi_dmul>
    2646:	4602      	mov	r2, r0
    2648:	460b      	mov	r3, r1
    264a:	4630      	mov	r0, r6
    264c:	4639      	mov	r1, r7
    264e:	f7fe f8db 	bl	808 <__aeabi_dsub>
    2652:	4622      	mov	r2, r4
    2654:	462b      	mov	r3, r5
    2656:	f7fe fa8b 	bl	b70 <__aeabi_dmul>
    265a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    265c:	e9c3 010a 	strd	r0, r1, [r3, #40]	; 0x28
	            a0 =        (A+1) + (A-1)*cos(w0) + 2*sqrt(A)*alpha;
    2660:	f24e 0068 	movw	r0, #57448	; 0xe068
    2664:	f6c1 70ff 	movt	r0, #8191	; 0x1fff
    2668:	e9d0 0100 	ldrd	r0, r1, [r0]
    266c:	f003 fbde 	bl	5e2c <cos>
    2670:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
    2674:	4620      	mov	r0, r4
    2676:	4629      	mov	r1, r5
    2678:	f003 fca2 	bl	5fc0 <sqrt>
    267c:	2300      	movs	r3, #0
    267e:	4680      	mov	r8, r0
    2680:	468a      	mov	sl, r1
    2682:	4620      	mov	r0, r4
    2684:	4629      	mov	r1, r5
    2686:	2200      	movs	r2, #0
    2688:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
    268c:	f7fe f8be 	bl	80c <__adddf3>
    2690:	2300      	movs	r3, #0
    2692:	4606      	mov	r6, r0
    2694:	460f      	mov	r7, r1
    2696:	4620      	mov	r0, r4
    2698:	4629      	mov	r1, r5
    269a:	2200      	movs	r2, #0
    269c:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
    26a0:	f7fe f8b2 	bl	808 <__aeabi_dsub>
    26a4:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
    26a8:	f7fe fa62 	bl	b70 <__aeabi_dmul>
    26ac:	4602      	mov	r2, r0
    26ae:	460b      	mov	r3, r1
    26b0:	4630      	mov	r0, r6
    26b2:	4639      	mov	r1, r7
    26b4:	f7fe f8aa 	bl	80c <__adddf3>
    26b8:	4642      	mov	r2, r8
    26ba:	4604      	mov	r4, r0
    26bc:	460d      	mov	r5, r1
    26be:	4653      	mov	r3, sl
    26c0:	4640      	mov	r0, r8
    26c2:	4651      	mov	r1, sl
    26c4:	f7fe f8a2 	bl	80c <__adddf3>
    26c8:	e9d9 2300 	ldrd	r2, r3, [r9]
    26cc:	f7fe fa50 	bl	b70 <__aeabi_dmul>
    26d0:	4602      	mov	r2, r0
    26d2:	460b      	mov	r3, r1
    26d4:	4620      	mov	r0, r4
    26d6:	4629      	mov	r1, r5
    26d8:	f7fe f898 	bl	80c <__adddf3>
	            a1 =   -2*( (A-1) + (A+1)*cos(w0)                   );
    26dc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
				case            LOW_SHELF: 

	            b0 =    A*( (A+1) - (A-1)*cos(w0) + 2*sqrt(A)*alpha );
	            b1 =  2*A*( (A-1) - (A+1)*cos(w0)                   );
	            b2 =    A*( (A+1) - (A-1)*cos(w0) - 2*sqrt(A)*alpha );
	            a0 =        (A+1) + (A-1)*cos(w0) + 2*sqrt(A)*alpha;
    26de:	9b17      	ldr	r3, [sp, #92]	; 0x5c
	            a1 =   -2*( (A-1) + (A+1)*cos(w0)                   );
    26e0:	e9d2 4500 	ldrd	r4, r5, [r2]
				case            LOW_SHELF: 

	            b0 =    A*( (A+1) - (A-1)*cos(w0) + 2*sqrt(A)*alpha );
	            b1 =  2*A*( (A-1) - (A+1)*cos(w0)                   );
	            b2 =    A*( (A+1) - (A-1)*cos(w0) - 2*sqrt(A)*alpha );
	            a0 =        (A+1) + (A-1)*cos(w0) + 2*sqrt(A)*alpha;
    26e4:	e9c3 0100 	strd	r0, r1, [r3]
	            a1 =   -2*( (A-1) + (A+1)*cos(w0)                   );
    26e8:	2300      	movs	r3, #0
    26ea:	2200      	movs	r2, #0
    26ec:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
    26f0:	4620      	mov	r0, r4
    26f2:	4629      	mov	r1, r5
    26f4:	f7fe f888 	bl	808 <__aeabi_dsub>
    26f8:	2300      	movs	r3, #0
    26fa:	4680      	mov	r8, r0
    26fc:	468b      	mov	fp, r1
    26fe:	2200      	movs	r2, #0
    2700:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
    2704:	4620      	mov	r0, r4
    2706:	4629      	mov	r1, r5
    2708:	f7fe f880 	bl	80c <__adddf3>
    270c:	460f      	mov	r7, r1
    270e:	f24e 0168 	movw	r1, #57448	; 0xe068
    2712:	f6c1 71ff 	movt	r1, #8191	; 0x1fff
    2716:	4606      	mov	r6, r0
    2718:	e9d1 0100 	ldrd	r0, r1, [r1]
    271c:	f003 fb86 	bl	5e2c <cos>
    2720:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
    2724:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
    2728:	4630      	mov	r0, r6
    272a:	4639      	mov	r1, r7
    272c:	f7fe fa20 	bl	b70 <__aeabi_dmul>
    2730:	4602      	mov	r2, r0
    2732:	460b      	mov	r3, r1
    2734:	4640      	mov	r0, r8
    2736:	4659      	mov	r1, fp
    2738:	f7fe f868 	bl	80c <__adddf3>
    273c:	f04f 4340 	mov.w	r3, #3221225472	; 0xc0000000
    2740:	2200      	movs	r2, #0
    2742:	f7fe fa15 	bl	b70 <__aeabi_dmul>
    2746:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    2748:	e9c2 0102 	strd	r0, r1, [r2, #8]
	            a2 =        (A+1) + (A-1)*cos(w0) - 2*sqrt(A)*alpha;
    274c:	4620      	mov	r0, r4
    274e:	4629      	mov	r1, r5
    2750:	f003 fc36 	bl	5fc0 <sqrt>
    2754:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
    2758:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
    275c:	4640      	mov	r0, r8
    275e:	4659      	mov	r1, fp
    2760:	f7fe fa06 	bl	b70 <__aeabi_dmul>
    2764:	4602      	mov	r2, r0
    2766:	460b      	mov	r3, r1
    2768:	4630      	mov	r0, r6
    276a:	4639      	mov	r1, r7
    276c:	f7fe f84e 	bl	80c <__adddf3>
    2770:	4604      	mov	r4, r0
    2772:	460d      	mov	r5, r1
    2774:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
    2778:	4602      	mov	r2, r0
    277a:	460b      	mov	r3, r1
    277c:	f7fe f846 	bl	80c <__adddf3>
    2780:	e9d9 2300 	ldrd	r2, r3, [r9]
    2784:	f7fe f9f4 	bl	b70 <__aeabi_dmul>
    2788:	460b      	mov	r3, r1
    278a:	4602      	mov	r2, r0
    278c:	4629      	mov	r1, r5
    278e:	4620      	mov	r0, r4
    2790:	f7fe f83a 	bl	808 <__aeabi_dsub>
    2794:	f8dd c05c 	ldr.w	ip, [sp, #92]	; 0x5c
    2798:	900e      	str	r0, [sp, #56]	; 0x38
    279a:	910c      	str	r1, [sp, #48]	; 0x30
    279c:	9817      	ldr	r0, [sp, #92]	; 0x5c
    279e:	f8dc 3008 	ldr.w	r3, [ip, #8]
    27a2:	f8dc 100c 	ldr.w	r1, [ip, #12]
    27a6:	6987      	ldr	r7, [r0, #24]
    27a8:	69c6      	ldr	r6, [r0, #28]
    27aa:	6804      	ldr	r4, [r0, #0]
    27ac:	f8dc 5004 	ldr.w	r5, [ip, #4]
    27b0:	f8dc a020 	ldr.w	sl, [ip, #32]
    27b4:	f8dc b024 	ldr.w	fp, [ip, #36]	; 0x24
    27b8:	f8dc 9028 	ldr.w	r9, [ip, #40]	; 0x28
    27bc:	f8dc 802c 	ldr.w	r8, [ip, #44]	; 0x2c
    27c0:	9310      	str	r3, [sp, #64]	; 0x40
    27c2:	9112      	str	r1, [sp, #72]	; 0x48

	            break;
    27c4:	f7ff bb76 	b.w	1eb4 <DesignAudioBiquadIIR_q31_t+0x3fc>
	uint8_t i;
	
	for(i=0;i<Size;i++)
	{
		if(Values[i]<0)
			Temp= Values[i]*-1;
    27c8:	f107 4500 	add.w	r5, r7, #2147483648	; 0x80000000
    27cc:	e4db      	b.n	2186 <DesignAudioBiquadIIR_q31_t+0x6ce>
    27ce:	9916      	ldr	r1, [sp, #88]	; 0x58
    27d0:	f101 4e00 	add.w	lr, r1, #2147483648	; 0x80000000
    27d4:	e46c      	b.n	20b0 <DesignAudioBiquadIIR_q31_t+0x5f8>
    27d6:	9815      	ldr	r0, [sp, #84]	; 0x54
    27d8:	f100 4e00 	add.w	lr, r0, #2147483648	; 0x80000000
    27dc:	e448      	b.n	2070 <DesignAudioBiquadIIR_q31_t+0x5b8>
    27de:	9a14      	ldr	r2, [sp, #80]	; 0x50
    27e0:	f102 4c00 	add.w	ip, r2, #2147483648	; 0x80000000
    27e4:	e424      	b.n	2030 <DesignAudioBiquadIIR_q31_t+0x578>
    27e6:	9812      	ldr	r0, [sp, #72]	; 0x48
    27e8:	f100 4e00 	add.w	lr, r0, #2147483648	; 0x80000000
    27ec:	e400      	b.n	1ff0 <DesignAudioBiquadIIR_q31_t+0x538>
    27ee:	bf00      	nop
    27f0:	1fffe070 	.word	0x1fffe070
    27f4:	9a20      	ldr	r2, [sp, #128]	; 0x80
    27f6:	9b22      	ldr	r3, [sp, #136]	; 0x88
    27f8:	9228      	str	r2, [sp, #160]	; 0xa0
    27fa:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    27fc:	9c1c      	ldr	r4, [sp, #112]	; 0x70
    27fe:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
    2800:	9318      	str	r3, [sp, #96]	; 0x60
    2802:	9219      	str	r2, [sp, #100]	; 0x64
    2804:	9924      	ldr	r1, [sp, #144]	; 0x90
    2806:	9b25      	ldr	r3, [sp, #148]	; 0x94
    2808:	911a      	str	r1, [sp, #104]	; 0x68
    280a:	e9cd 4500 	strd	r4, r5, [sp]
    280e:	e9dd 4518 	ldrd	r4, r5, [sp, #96]	; 0x60
    2812:	931b      	str	r3, [sp, #108]	; 0x6c
    2814:	9826      	ldr	r0, [sp, #152]	; 0x98
    2816:	9927      	ldr	r1, [sp, #156]	; 0x9c
    2818:	901c      	str	r0, [sp, #112]	; 0x70
    281a:	e9cd 4508 	strd	r4, r5, [sp, #32]
    281e:	e9dd 451a 	ldrd	r4, r5, [sp, #104]	; 0x68
    2822:	911d      	str	r1, [sp, #116]	; 0x74
    2824:	e9cd 4506 	strd	r4, r5, [sp, #24]
    2828:	e9dd 451c 	ldrd	r4, r5, [sp, #112]	; 0x70
    282c:	960c      	str	r6, [sp, #48]	; 0x30
    282e:	970d      	str	r7, [sp, #52]	; 0x34
    2830:	e9cd 4504 	strd	r4, r5, [sp, #16]
    2834:	e9dd 450c 	ldrd	r4, r5, [sp, #48]	; 0x30
    2838:	9e21      	ldr	r6, [sp, #132]	; 0x84
    283a:	f8dd e05c 	ldr.w	lr, [sp, #92]	; 0x5c
    283e:	9629      	str	r6, [sp, #164]	; 0xa4
    2840:	e9cd 450a 	strd	r4, r5, [sp, #40]	; 0x28
    2844:	e9dd 4500 	ldrd	r4, r5, [sp]
    2848:	e9dd 6728 	ldrd	r6, r7, [sp, #160]	; 0xa0
		a1 = a1/(float)(1<<C->PostShift);
		a2 = a2/(float)(1<<C->PostShift);
		a0 = a0/(float)(1<<C->PostShift);
	}

	C->a[0] = (q31_t)(0x7FFFFFFF * a1); //a[0] in the IIR struct is actually a1
    284c:	9910      	ldr	r1, [sp, #64]	; 0x40
    284e:	e9ce 4506 	strd	r4, r5, [lr, #24]
    2852:	e9dd 4508 	ldrd	r4, r5, [sp, #32]
    2856:	e9ce 450a 	strd	r4, r5, [lr, #40]	; 0x28
    285a:	e9dd 4506 	ldrd	r4, r5, [sp, #24]
    285e:	e9ce 4502 	strd	r4, r5, [lr, #8]
    2862:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
    2866:	e9ce 4504 	strd	r4, r5, [lr, #16]
    286a:	e9dd 450a 	ldrd	r4, r5, [sp, #40]	; 0x28
    286e:	e9ce 6708 	strd	r6, r7, [lr, #32]
    2872:	e9ce 4500 	strd	r4, r5, [lr]
    2876:	a31c      	add	r3, pc, #112	; (adr r3, 28e8 <DesignAudioBiquadIIR_q31_t+0xe30>)
    2878:	e9d3 2300 	ldrd	r2, r3, [r3]
    287c:	4650      	mov	r0, sl
    287e:	f7fe f977 	bl	b70 <__aeabi_dmul>
    2882:	f7fe fc0f 	bl	10a4 <__aeabi_d2iz>
    2886:	9e1e      	ldr	r6, [sp, #120]	; 0x78
	C->a[1] = (q31_t)(0x7FFFFFFF * a2); //a[1] in the IIR struct is actually a2
    2888:	9d12      	ldr	r5, [sp, #72]	; 0x48
		a1 = a1/(float)(1<<C->PostShift);
		a2 = a2/(float)(1<<C->PostShift);
		a0 = a0/(float)(1<<C->PostShift);
	}

	C->a[0] = (q31_t)(0x7FFFFFFF * a1); //a[0] in the IIR struct is actually a1
    288a:	60f0      	str	r0, [r6, #12]
	C->a[1] = (q31_t)(0x7FFFFFFF * a2); //a[1] in the IIR struct is actually a2
    288c:	a316      	add	r3, pc, #88	; (adr r3, 28e8 <DesignAudioBiquadIIR_q31_t+0xe30>)
    288e:	e9d3 2300 	ldrd	r2, r3, [r3]
    2892:	4629      	mov	r1, r5
    2894:	4648      	mov	r0, r9
    2896:	f7fe f96b 	bl	b70 <__aeabi_dmul>
    289a:	f7fe fc03 	bl	10a4 <__aeabi_d2iz>
	C->b[0] = (q31_t)(0x7FFFFFFF * b0); 
    289e:	a312      	add	r3, pc, #72	; (adr r3, 28e8 <DesignAudioBiquadIIR_q31_t+0xe30>)
    28a0:	e9d3 2300 	ldrd	r2, r3, [r3]
		a2 = a2/(float)(1<<C->PostShift);
		a0 = a0/(float)(1<<C->PostShift);
	}

	C->a[0] = (q31_t)(0x7FFFFFFF * a1); //a[0] in the IIR struct is actually a1
	C->a[1] = (q31_t)(0x7FFFFFFF * a2); //a[1] in the IIR struct is actually a2
    28a4:	6130      	str	r0, [r6, #16]
	C->b[0] = (q31_t)(0x7FFFFFFF * b0); 
    28a6:	9914      	ldr	r1, [sp, #80]	; 0x50
    28a8:	4658      	mov	r0, fp
    28aa:	f7fe f961 	bl	b70 <__aeabi_dmul>
    28ae:	f7fe fbf9 	bl	10a4 <__aeabi_d2iz>
	C->b[1] = (q31_t)(0x7FFFFFFF * b1); 
    28b2:	9d15      	ldr	r5, [sp, #84]	; 0x54
		a0 = a0/(float)(1<<C->PostShift);
	}

	C->a[0] = (q31_t)(0x7FFFFFFF * a1); //a[0] in the IIR struct is actually a1
	C->a[1] = (q31_t)(0x7FFFFFFF * a2); //a[1] in the IIR struct is actually a2
	C->b[0] = (q31_t)(0x7FFFFFFF * b0); 
    28b4:	6030      	str	r0, [r6, #0]
	C->b[1] = (q31_t)(0x7FFFFFFF * b1); 
    28b6:	a30c      	add	r3, pc, #48	; (adr r3, 28e8 <DesignAudioBiquadIIR_q31_t+0xe30>)
    28b8:	e9d3 2300 	ldrd	r2, r3, [r3]
    28bc:	4629      	mov	r1, r5
    28be:	4640      	mov	r0, r8
    28c0:	f7fe f956 	bl	b70 <__aeabi_dmul>
    28c4:	f7fe fbee 	bl	10a4 <__aeabi_d2iz>
	C->b[2] = (q31_t)(0x7FFFFFFF * b2); 
    28c8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
    28ca:	9d16      	ldr	r5, [sp, #88]	; 0x58
	}

	C->a[0] = (q31_t)(0x7FFFFFFF * a1); //a[0] in the IIR struct is actually a1
	C->a[1] = (q31_t)(0x7FFFFFFF * a2); //a[1] in the IIR struct is actually a2
	C->b[0] = (q31_t)(0x7FFFFFFF * b0); 
	C->b[1] = (q31_t)(0x7FFFFFFF * b1); 
    28cc:	6070      	str	r0, [r6, #4]
	C->b[2] = (q31_t)(0x7FFFFFFF * b2); 
    28ce:	a306      	add	r3, pc, #24	; (adr r3, 28e8 <DesignAudioBiquadIIR_q31_t+0xe30>)
    28d0:	e9d3 2300 	ldrd	r2, r3, [r3]
    28d4:	4620      	mov	r0, r4
    28d6:	4629      	mov	r1, r5
    28d8:	f7fe f94a 	bl	b70 <__aeabi_dmul>
    28dc:	f7fe fbe2 	bl	10a4 <__aeabi_d2iz>
    28e0:	60b0      	str	r0, [r6, #8]
		
	
	return;
}
    28e2:	b02b      	add	sp, #172	; 0xac
    28e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    28e8:	ffc00000 	.word	0xffc00000
    28ec:	41dfffff 	.word	0x41dfffff

000028f0 <ChangePatch>:



void ChangePatch(uint8_t NewPatch)
{
	switch(NewPatch)
    28f0:	2804      	cmp	r0, #4
q31_t PeakingCombHistory[PEAKING_COMB_SIZE];



void ChangePatch(uint8_t NewPatch)
{
    28f2:	4603      	mov	r3, r0
	switch(NewPatch)
    28f4:	d004      	beq.n	2900 <ChangePatch+0x10>
    28f6:	2805      	cmp	r0, #5
    28f8:	d00d      	beq.n	2916 <ChangePatch+0x26>
		default:
			CurrentPatch = NewPatch;
		break;
		
		case PATCH_TUBEY_CLEAN:
			CurrentPatch = PATCH_TUBEY_CLEAN;
    28fa:	4a0b      	ldr	r2, [pc, #44]	; (2928 <ChangePatch+0x38>)
    28fc:	7010      	strb	r0, [r2, #0]
			break;
    28fe:	4770      	bx	lr
			
		case PATCH_OCTAVE:
			CurrentPatch = PATCH_OCTAVE;
    2900:	4909      	ldr	r1, [pc, #36]	; (2928 <ChangePatch+0x38>)
			InitOctave(&MyOctave,5000,-5000);
    2902:	480a      	ldr	r0, [pc, #40]	; (292c <ChangePatch+0x3c>)
		case PATCH_TUBEY_CLEAN:
			CurrentPatch = PATCH_TUBEY_CLEAN;
			break;
			
		case PATCH_OCTAVE:
			CurrentPatch = PATCH_OCTAVE;
    2904:	700b      	strb	r3, [r1, #0]
			InitOctave(&MyOctave,5000,-5000);
    2906:	f64e 4278 	movw	r2, #60536	; 0xec78
    290a:	f241 3188 	movw	r1, #5000	; 0x1388
    290e:	f6cf 72ff 	movt	r2, #65535	; 0xffff
    2912:	f7fe bfdf 	b.w	18d4 <InitOctave>
			break;
			
		case PATCH_COMB_THE_DESERT:
			CurrentPatch = PATCH_COMB_THE_DESERT;
    2916:	4a04      	ldr	r2, [pc, #16]	; (2928 <ChangePatch+0x38>)
			
			InitPeakingComb(&MyPeakingComb,&PeakingCombHistory[0],PEAKING_COMB_SIZE);
    2918:	4805      	ldr	r0, [pc, #20]	; (2930 <ChangePatch+0x40>)
    291a:	4906      	ldr	r1, [pc, #24]	; (2934 <ChangePatch+0x44>)
			CurrentPatch = PATCH_OCTAVE;
			InitOctave(&MyOctave,5000,-5000);
			break;
			
		case PATCH_COMB_THE_DESERT:
			CurrentPatch = PATCH_COMB_THE_DESERT;
    291c:	7013      	strb	r3, [r2, #0]
			
			InitPeakingComb(&MyPeakingComb,&PeakingCombHistory[0],PEAKING_COMB_SIZE);
    291e:	f44f 7200 	mov.w	r2, #512	; 0x200
    2922:	f7fe bf8b 	b.w	183c <InitPeakingComb>
    2926:	bf00      	nop
    2928:	1fffe000 	.word	0x1fffe000
    292c:	1fffe0b8 	.word	0x1fffe0b8
    2930:	1fffea1c 	.word	0x1fffea1c
    2934:	1fffe218 	.word	0x1fffe218

00002938 <InitAudioProcess>:
}



void InitAudioProcess()
{
    2938:	b510      	push	{r4, lr}
	uint8_t i;
	
	for(i=0;i<NUM_IIR;i++)
		Init_q31_t_IIR(&MyIIR[i]);
    293a:	f24e 04d0 	movw	r4, #57552	; 0xe0d0
    293e:	f6c1 74ff 	movt	r4, #8191	; 0x1fff
    2942:	4620      	mov	r0, r4
    2944:	f7fe fff6 	bl	1934 <Init_q31_t_IIR>
    2948:	f104 0050 	add.w	r0, r4, #80	; 0x50
    294c:	f7fe fff2 	bl	1934 <Init_q31_t_IIR>
    2950:	f104 00a0 	add.w	r0, r4, #160	; 0xa0
    2954:	f7fe ffee 	bl	1934 <Init_q31_t_IIR>
    2958:	f104 00f0 	add.w	r0, r4, #240	; 0xf0
    295c:	f7fe ffea 	bl	1934 <Init_q31_t_IIR>
	
	//MyIIR[0].
	MyIIR[0].Coef.b[0] =    0x7FFFFFFF>>1;
    2960:	f06f 4240 	mvn.w	r2, #3221225472	; 0xc0000000
	MyIIR[0].Coef.b[1] =	0x7FFFFFFF>>1;
	MyIIR[0].Coef.b[2] =	0x7FFFFFFF>>2;
	MyIIR[0].Coef.a[0] =	0;
    2964:	2300      	movs	r3, #0
		Init_q31_t_IIR(&MyIIR[i]);
	
	//MyIIR[0].
	MyIIR[0].Coef.b[0] =    0x7FFFFFFF>>1;
	MyIIR[0].Coef.b[1] =	0x7FFFFFFF>>1;
	MyIIR[0].Coef.b[2] =	0x7FFFFFFF>>2;
    2966:	f06f 4060 	mvn.w	r0, #3758096384	; 0xe0000000
	
	for(i=0;i<NUM_IIR;i++)
		Init_q31_t_IIR(&MyIIR[i]);
	
	//MyIIR[0].
	MyIIR[0].Coef.b[0] =    0x7FFFFFFF>>1;
    296a:	6022      	str	r2, [r4, #0]
	MyIIR[0].Coef.b[1] =	0x7FFFFFFF>>1;
    296c:	6062      	str	r2, [r4, #4]
	MyIIR[0].Coef.b[2] =	0x7FFFFFFF>>2;
    296e:	60a0      	str	r0, [r4, #8]
	MyIIR[0].Coef.a[0] =	0;
    2970:	60e3      	str	r3, [r4, #12]
	MyIIR[0].Coef.a[1] =	0;
    2972:	6123      	str	r3, [r4, #16]
    2974:	bd10      	pop	{r4, pc}
    2976:	bf00      	nop

00002978 <AudioProcess>:

q31_t Current,Last1,Last2,Last3 = 0;
q31_t a;

void AudioProcess()
{
    2978:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
       
                        //See what the current Patch is and do the appropriate processing!
                        switch(CurrentPatch)
    297a:	4b88      	ldr	r3, [pc, #544]	; (2b9c <AudioProcess+0x224>)
    297c:	7818      	ldrb	r0, [r3, #0]
    297e:	2805      	cmp	r0, #5
    2980:	d811      	bhi.n	29a6 <AudioProcess+0x2e>
    2982:	e8df f010 	tbh	[pc, r0, lsl #1]
    2986:	0011      	.short	0x0011
    2988:	0028001a 	.word	0x0028001a
    298c:	00f7006b 	.word	0x00f7006b
    2990:	0006      	.short	0x0006
                                	
                                        break;
                                
                                case PATCH_COMB_THE_DESERT:
                                	
                                	CombTheDesert(LeftIn, &LeftOut,&MyPeakingComb);
    2992:	4c83      	ldr	r4, [pc, #524]	; (2ba0 <AudioProcess+0x228>)
    2994:	4983      	ldr	r1, [pc, #524]	; (2ba4 <AudioProcess+0x22c>)
    2996:	4a84      	ldr	r2, [pc, #528]	; (2ba8 <AudioProcess+0x230>)
    2998:	6808      	ldr	r0, [r1, #0]
    299a:	4621      	mov	r1, r4
    299c:	f7fe ff70 	bl	1880 <CombTheDesert>
                                	
                                	RightOut = LeftOut;
    29a0:	6822      	ldr	r2, [r4, #0]
    29a2:	4b82      	ldr	r3, [pc, #520]	; (2bac <AudioProcess+0x234>)
    29a4:	601a      	str	r2, [r3, #0]
    29a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                        {
                                default:
                                        break;
                                
                                case PATCH_PASS_THROUGH:
                                	LeftOut = LeftIn;
    29a8:	487e      	ldr	r0, [pc, #504]	; (2ba4 <AudioProcess+0x22c>)
                                	
                                	                                	
                                	RightOut = RightIn;
    29aa:	4a81      	ldr	r2, [pc, #516]	; (2bb0 <AudioProcess+0x238>)
                        {
                                default:
                                        break;
                                
                                case PATCH_PASS_THROUGH:
                                	LeftOut = LeftIn;
    29ac:	6801      	ldr	r1, [r0, #0]
    29ae:	4b7c      	ldr	r3, [pc, #496]	; (2ba0 <AudioProcess+0x228>)
                                	
                                	                                	
                                	RightOut = RightIn;
    29b0:	6810      	ldr	r0, [r2, #0]
                        {
                                default:
                                        break;
                                
                                case PATCH_PASS_THROUGH:
                                	LeftOut = LeftIn;
    29b2:	6019      	str	r1, [r3, #0]
                                	
                                	                                	
                                	RightOut = RightIn;
    29b4:	497d      	ldr	r1, [pc, #500]	; (2bac <AudioProcess+0x234>)
    29b6:	6008      	str	r0, [r1, #0]
                                	
                                break;
    29b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                                
                                case PATCH_SINE_TEST:
                                
                                	//Output an octave.  Low tone in left ear and Higher Tone in Right
                                	RightOut = LeftOut = sine_q31_t[Idx>>1 & 0xFF]>>8;
    29ba:	4a7e      	ldr	r2, [pc, #504]	; (2bb4 <AudioProcess+0x23c>)
    29bc:	4b7e      	ldr	r3, [pc, #504]	; (2bb8 <AudioProcess+0x240>)
    29be:	7811      	ldrb	r1, [r2, #0]
    29c0:	0848      	lsrs	r0, r1, #1
                                	Idx++;
    29c2:	3101      	adds	r1, #1
                                break;
                                
                                case PATCH_SINE_TEST:
                                
                                	//Output an octave.  Low tone in left ear and Higher Tone in Right
                                	RightOut = LeftOut = sine_q31_t[Idx>>1 & 0xFF]>>8;
    29c4:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
                                	Idx++;
    29c8:	7011      	strb	r1, [r2, #0]
                                break;
                                
                                case PATCH_SINE_TEST:
                                
                                	//Output an octave.  Low tone in left ear and Higher Tone in Right
                                	RightOut = LeftOut = sine_q31_t[Idx>>1 & 0xFF]>>8;
    29ca:	4b78      	ldr	r3, [pc, #480]	; (2bac <AudioProcess+0x234>)
    29cc:	4a74      	ldr	r2, [pc, #464]	; (2ba0 <AudioProcess+0x228>)
    29ce:	1201      	asrs	r1, r0, #8
    29d0:	6011      	str	r1, [r2, #0]
    29d2:	6019      	str	r1, [r3, #0]
                                	Idx++;
                       
                                	
                                break;
    29d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

                                break;
                                
                                case PATCH_TUBEY_CLEAN:
                                
                                if(MyIIR[0].Update>0)
    29d6:	4e79      	ldr	r6, [pc, #484]	; (2bbc <AudioProcess+0x244>)
    29d8:	f896 0048 	ldrb.w	r0, [r6, #72]	; 0x48
    29dc:	b158      	cbz	r0, 29f6 <AudioProcess+0x7e>
                                {
                                 MyIIR[0].Update = 0;
                                 MyIIR[0].Coef = MyIIR[0].Shadow_Coef;
    29de:	f106 0530 	add.w	r5, r6, #48	; 0x30
    29e2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    29e4:	4634      	mov	r4, r6
    29e6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    29e8:	e895 0003 	ldmia.w	r5, {r0, r1}
    29ec:	e884 0003 	stmia.w	r4, {r0, r1}
                                
                                case PATCH_TUBEY_CLEAN:
                                
                                if(MyIIR[0].Update>0)
                                {
                                 MyIIR[0].Update = 0;
    29f0:	2200      	movs	r2, #0
    29f2:	f886 2048 	strb.w	r2, [r6, #72]	; 0x48
                                 MyIIR[0].Coef = MyIIR[0].Shadow_Coef;
                                }
                                   
                                
                                Compute_q31_t_IIR(&MyIIR[0],LeftIn,&LeftOut);
    29f6:	4b6b      	ldr	r3, [pc, #428]	; (2ba4 <AudioProcess+0x22c>)
    29f8:	4e69      	ldr	r6, [pc, #420]	; (2ba0 <AudioProcess+0x228>)
    29fa:	6819      	ldr	r1, [r3, #0]
    29fc:	486f      	ldr	r0, [pc, #444]	; (2bbc <AudioProcess+0x244>)
    29fe:	4632      	mov	r2, r6
    2a00:	f7fe ffa2 	bl	1948 <Compute_q31_t_IIR>
                                LeftOut = Overdrive(LeftOut<<8, OD_Level);
    2a04:	486e      	ldr	r0, [pc, #440]	; (2bc0 <AudioProcess+0x248>)
    2a06:	6831      	ldr	r1, [r6, #0]
    2a08:	6802      	ldr	r2, [r0, #0]
    2a0a:	020b      	lsls	r3, r1, #8
	uint32_t TableIndex;
	q31_t Out;
	
	
	//Scale in input. to adjust gain into the overdrive table
	Out = ((q63_t)In * OD_Level)>>31;
    2a0c:	fb83 0102 	smull	r0, r1, r3, r2
    2a10:	0fc0      	lsrs	r0, r0, #31
    2a12:	ea40 0141 	orr.w	r1, r0, r1, lsl #1
	                                	
	//make the input span 0 - 0xFFFFFFFF.  Convert from 2's complement to Offset Binary
	                                	
	TableIndex = (uint32_t)Out + (uint32_t)0x80000000;
    2a16:	f101 4200 	add.w	r2, r1, #2147483648	; 0x80000000
    int32_t index;                               /* Index to read nearest output values */

    /* Input is in 12.20 format */
    /* 12 bits for the table index */
    /* Index value calculation */
    index = ((x & 0xFFF00000) >> 20);
    2a1a:	0d13      	lsrs	r3, r2, #20

    if(index >= (int32_t)(nValues - 1))
    2a1c:	f640 70ff 	movw	r0, #4095	; 0xfff
    2a20:	4283      	cmp	r3, r0
    2a22:	f000 80b2 	beq.w	2b8a <AudioProcess+0x212>
      /* 20 bits for the fractional part */
      /* shift left by 11 to keep fract in 1.31 format */
      fract = (x & 0x000FFFFF) << 11;

      /* Read two nearest output values from the index in 1.31(q31) format */
      y0 = pYData[index];
    2a26:	4c67      	ldr	r4, [pc, #412]	; (2bc4 <AudioProcess+0x24c>)
    else
    {

      /* 20 bits for the fractional part */
      /* shift left by 11 to keep fract in 1.31 format */
      fract = (x & 0x000FFFFF) << 11;
    2a28:	f022 457f 	bic.w	r5, r2, #4278190080	; 0xff000000

      /* Read two nearest output values from the index in 1.31(q31) format */
      y0 = pYData[index];
      y1 = pYData[index + 1u];
    2a2c:	1c5f      	adds	r7, r3, #1
    else
    {

      /* 20 bits for the fractional part */
      /* shift left by 11 to keep fract in 1.31 format */
      fract = (x & 0x000FFFFF) << 11;
    2a2e:	f425 0270 	bic.w	r2, r5, #15728640	; 0xf00000
      /* Read two nearest output values from the index in 1.31(q31) format */
      y0 = pYData[index];
      y1 = pYData[index + 1u];

      /* Calculation of y0 * (1-fract) and y is in 2.30 format */
      y = ((q31_t) ((q63_t) y0 * (0x7FFFFFFF - fract) >> 32));
    2a32:	f64f 71ff 	movw	r1, #65535	; 0xffff
    else
    {

      /* 20 bits for the fractional part */
      /* shift left by 11 to keep fract in 1.31 format */
      fract = (x & 0x000FFFFF) << 11;
    2a36:	02d5      	lsls	r5, r2, #11

      /* Read two nearest output values from the index in 1.31(q31) format */
      y0 = pYData[index];
    2a38:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
      y1 = pYData[index + 1u];
    2a3c:	f854 4027 	ldr.w	r4, [r4, r7, lsl #2]

      /* Calculation of y0 * (1-fract) and y is in 2.30 format */
      y = ((q31_t) ((q63_t) y0 * (0x7FFFFFFF - fract) >> 32));
    2a40:	f6c7 71ff 	movt	r1, #32767	; 0x7fff
    2a44:	1b48      	subs	r0, r1, r5
    2a46:	fb83 0100 	smull	r0, r1, r3, r0

      /* Calculation of y0 * (1-fract) + y1 *fract and y is in 2.30 format */
      y += ((q31_t) (((q63_t) y1 * fract) >> 32));
    2a4a:	fb84 4505 	smull	r4, r5, r4, r5
    2a4e:	186a      	adds	r2, r5, r1

      /* Convert y to 1.31 format */
      return (y << 1u);
    2a50:	0051      	lsls	r1, r2, #1
                                
                                RightOut = LeftOut;
    2a52:	4a56      	ldr	r2, [pc, #344]	; (2bac <AudioProcess+0x234>)
	         
	// Ram signal into Overdrive table
	
	Out = arm_linear_interp_q31((q31_t * )atan_24pi_q31_t,TableIndex,4096);
	 
	return Out>>8; //We need to shift by 8 to get back to a value that fits in the lowest 24-bits
    2a54:	1208      	asrs	r0, r1, #8
                                 MyIIR[0].Coef = MyIIR[0].Shadow_Coef;
                                }
                                   
                                
                                Compute_q31_t_IIR(&MyIIR[0],LeftIn,&LeftOut);
                                LeftOut = Overdrive(LeftOut<<8, OD_Level);
    2a56:	6030      	str	r0, [r6, #0]
                                
                                RightOut = LeftOut;
    2a58:	6010      	str	r0, [r2, #0]
                                
                                break;
    2a5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                       
                                	
                                break;
                                                                
                                case PATCH_OVERDRIVE:
                                	Idx++;
    2a5c:	4d55      	ldr	r5, [pc, #340]	; (2bb4 <AudioProcess+0x23c>)
                               
                                	//LeftIn <<= 8;
                                	
                                	//LeftIn >>= 8;
                                	
                                	if(MyIIR[0].Update>0)
    2a5e:	4c57      	ldr	r4, [pc, #348]	; (2bbc <AudioProcess+0x244>)
                       
                                	
                                break;
                                                                
                                case PATCH_OVERDRIVE:
                                	Idx++;
    2a60:	782e      	ldrb	r6, [r5, #0]
                               
                                	//LeftIn <<= 8;
                                	
                                	//LeftIn >>= 8;
                                	
                                	if(MyIIR[0].Update>0)
    2a62:	f894 7048 	ldrb.w	r7, [r4, #72]	; 0x48
                       
                                	
                                break;
                                                                
                                case PATCH_OVERDRIVE:
                                	Idx++;
    2a66:	1c70      	adds	r0, r6, #1
    2a68:	7028      	strb	r0, [r5, #0]
                               
                                	//LeftIn <<= 8;
                                	
                                	//LeftIn >>= 8;
                                	
                                	if(MyIIR[0].Update>0)
    2a6a:	b15f      	cbz	r7, 2a84 <AudioProcess+0x10c>
                                	{
                                		MyIIR[0].Update = 0;
                                		MyIIR[0].Coef = MyIIR[0].Shadow_Coef;
    2a6c:	f104 0630 	add.w	r6, r4, #48	; 0x30
    2a70:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
    2a72:	4625      	mov	r5, r4
    2a74:	c50f      	stmia	r5!, {r0, r1, r2, r3}
    2a76:	e896 0003 	ldmia.w	r6, {r0, r1}
    2a7a:	e885 0003 	stmia.w	r5, {r0, r1}
                                	
                                	//LeftIn >>= 8;
                                	
                                	if(MyIIR[0].Update>0)
                                	{
                                		MyIIR[0].Update = 0;
    2a7e:	2100      	movs	r1, #0
    2a80:	f884 1048 	strb.w	r1, [r4, #72]	; 0x48
                                		MyIIR[0].Coef = MyIIR[0].Shadow_Coef;
                                	}
                                	
                                	if(MyIIR[1].Update>0)
    2a84:	f894 2098 	ldrb.w	r2, [r4, #152]	; 0x98
    2a88:	4f4c      	ldr	r7, [pc, #304]	; (2bbc <AudioProcess+0x244>)
    2a8a:	b162      	cbz	r2, 2aa6 <AudioProcess+0x12e>
                                	     {
                                	           MyIIR[1].Update = 0;
                                	          MyIIR[1].Coef = MyIIR[1].Shadow_Coef;
    2a8c:	f107 0680 	add.w	r6, r7, #128	; 0x80
    2a90:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
    2a92:	f107 0450 	add.w	r4, r7, #80	; 0x50
    2a96:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    2a98:	e896 0003 	ldmia.w	r6, {r0, r1}
    2a9c:	e884 0003 	stmia.w	r4, {r0, r1}
                                		MyIIR[0].Coef = MyIIR[0].Shadow_Coef;
                                	}
                                	
                                	if(MyIIR[1].Update>0)
                                	     {
                                	           MyIIR[1].Update = 0;
    2aa0:	2300      	movs	r3, #0
    2aa2:	f887 3098 	strb.w	r3, [r7, #152]	; 0x98
                                	          MyIIR[1].Coef = MyIIR[1].Shadow_Coef;
                                	    }
                                	
                              
                                	//Compute_q31_t_IIR(&MyIIR[0],LeftIn,&LeftOut);
                                	Compute_q31_t_IIR(&MyIIR[1],LeftIn,&LeftOut);
    2aa6:	4e3e      	ldr	r6, [pc, #248]	; (2ba0 <AudioProcess+0x228>)
    2aa8:	4d3e      	ldr	r5, [pc, #248]	; (2ba4 <AudioProcess+0x22c>)
    2aaa:	4847      	ldr	r0, [pc, #284]	; (2bc8 <AudioProcess+0x250>)
    2aac:	6829      	ldr	r1, [r5, #0]
    2aae:	4632      	mov	r2, r6
    2ab0:	f7fe ff4a 	bl	1948 <Compute_q31_t_IIR>
                                	LeftOut = Overdrive(LeftOut<<8, OD_Level);
    2ab4:	4942      	ldr	r1, [pc, #264]	; (2bc0 <AudioProcess+0x248>)
    2ab6:	6830      	ldr	r0, [r6, #0]
    2ab8:	6809      	ldr	r1, [r1, #0]
    2aba:	0202      	lsls	r2, r0, #8
	uint32_t TableIndex;
	q31_t Out;
	
	
	//Scale in input. to adjust gain into the overdrive table
	Out = ((q63_t)In * OD_Level)>>31;
    2abc:	fb82 4501 	smull	r4, r5, r2, r1
    2ac0:	0fe7      	lsrs	r7, r4, #31
    2ac2:	ea47 0445 	orr.w	r4, r7, r5, lsl #1
	                                	
	//make the input span 0 - 0xFFFFFFFF.  Convert from 2's complement to Offset Binary
	                                	
	TableIndex = (uint32_t)Out + (uint32_t)0x80000000;
    2ac6:	f104 4200 	add.w	r2, r4, #2147483648	; 0x80000000
    int32_t index;                               /* Index to read nearest output values */

    /* Input is in 12.20 format */
    /* 12 bits for the table index */
    /* Index value calculation */
    index = ((x & 0xFFF00000) >> 20);
    2aca:	0d13      	lsrs	r3, r2, #20

    if(index >= (int32_t)(nValues - 1))
    2acc:	f640 75ff 	movw	r5, #4095	; 0xfff
    2ad0:	42ab      	cmp	r3, r5
    2ad2:	d060      	beq.n	2b96 <AudioProcess+0x21e>
    else
    {

      /* 20 bits for the fractional part */
      /* shift left by 11 to keep fract in 1.31 format */
      fract = (x & 0x000FFFFF) << 11;
    2ad4:	f022 407f 	bic.w	r0, r2, #4278190080	; 0xff000000

      /* Read two nearest output values from the index in 1.31(q31) format */
      y0 = pYData[index];
      y1 = pYData[index + 1u];
    2ad8:	1c5f      	adds	r7, r3, #1
      /* 20 bits for the fractional part */
      /* shift left by 11 to keep fract in 1.31 format */
      fract = (x & 0x000FFFFF) << 11;

      /* Read two nearest output values from the index in 1.31(q31) format */
      y0 = pYData[index];
    2ada:	4d3a      	ldr	r5, [pc, #232]	; (2bc4 <AudioProcess+0x24c>)
    else
    {

      /* 20 bits for the fractional part */
      /* shift left by 11 to keep fract in 1.31 format */
      fract = (x & 0x000FFFFF) << 11;
    2adc:	f420 0470 	bic.w	r4, r0, #15728640	; 0xf00000
      /* Read two nearest output values from the index in 1.31(q31) format */
      y0 = pYData[index];
      y1 = pYData[index + 1u];

      /* Calculation of y0 * (1-fract) and y is in 2.30 format */
      y = ((q31_t) ((q63_t) y0 * (0x7FFFFFFF - fract) >> 32));
    2ae0:	f64f 70ff 	movw	r0, #65535	; 0xffff
      /* 20 bits for the fractional part */
      /* shift left by 11 to keep fract in 1.31 format */
      fract = (x & 0x000FFFFF) << 11;

      /* Read two nearest output values from the index in 1.31(q31) format */
      y0 = pYData[index];
    2ae4:	f855 2023 	ldr.w	r2, [r5, r3, lsl #2]
      y1 = pYData[index + 1u];
    2ae8:	f855 5027 	ldr.w	r5, [r5, r7, lsl #2]
    else
    {

      /* 20 bits for the fractional part */
      /* shift left by 11 to keep fract in 1.31 format */
      fract = (x & 0x000FFFFF) << 11;
    2aec:	02e4      	lsls	r4, r4, #11
      /* Read two nearest output values from the index in 1.31(q31) format */
      y0 = pYData[index];
      y1 = pYData[index + 1u];

      /* Calculation of y0 * (1-fract) and y is in 2.30 format */
      y = ((q31_t) ((q63_t) y0 * (0x7FFFFFFF - fract) >> 32));
    2aee:	f6c7 70ff 	movt	r0, #32767	; 0x7fff
    2af2:	1b03      	subs	r3, r0, r4
    2af4:	fb82 2303 	smull	r2, r3, r2, r3

      /* Calculation of y0 * (1-fract) + y1 *fract and y is in 2.30 format */
      y += ((q31_t) (((q63_t) y1 * fract) >> 32));
    2af8:	fb85 4504 	smull	r4, r5, r5, r4
    2afc:	18ef      	adds	r7, r5, r3

      /* Convert y to 1.31 format */
      return (y << 1u);
    2afe:	0078      	lsls	r0, r7, #1
                                	LeftOut = Overdrive(LeftOut<<8, OD_Level);
    2b00:	f020 02ff 	bic.w	r2, r0, #255	; 0xff
	uint32_t TableIndex;
	q31_t Out;
	
	
	//Scale in input. to adjust gain into the overdrive table
	Out = ((q63_t)In * OD_Level)>>31;
    2b04:	fb81 0102 	smull	r0, r1, r1, r2
    2b08:	0fc5      	lsrs	r5, r0, #31
    2b0a:	ea45 0141 	orr.w	r1, r5, r1, lsl #1
	                                	
	//make the input span 0 - 0xFFFFFFFF.  Convert from 2's complement to Offset Binary
	                                	
	TableIndex = (uint32_t)Out + (uint32_t)0x80000000;
    2b0e:	f101 4700 	add.w	r7, r1, #2147483648	; 0x80000000
    int32_t index;                               /* Index to read nearest output values */

    /* Input is in 12.20 format */
    /* 12 bits for the table index */
    /* Index value calculation */
    index = ((x & 0xFFF00000) >> 20);
    2b12:	0d3b      	lsrs	r3, r7, #20

    if(index >= (int32_t)(nValues - 1))
    2b14:	f640 70ff 	movw	r0, #4095	; 0xfff
    2b18:	4283      	cmp	r3, r0
    2b1a:	d039      	beq.n	2b90 <AudioProcess+0x218>
      /* shift left by 11 to keep fract in 1.31 format */
      fract = (x & 0x000FFFFF) << 11;

      /* Read two nearest output values from the index in 1.31(q31) format */
      y0 = pYData[index];
      y1 = pYData[index + 1u];
    2b1c:	1c5d      	adds	r5, r3, #1
      /* 20 bits for the fractional part */
      /* shift left by 11 to keep fract in 1.31 format */
      fract = (x & 0x000FFFFF) << 11;

      /* Read two nearest output values from the index in 1.31(q31) format */
      y0 = pYData[index];
    2b1e:	4c29      	ldr	r4, [pc, #164]	; (2bc4 <AudioProcess+0x24c>)
    else
    {

      /* 20 bits for the fractional part */
      /* shift left by 11 to keep fract in 1.31 format */
      fract = (x & 0x000FFFFF) << 11;
    2b20:	f027 427f 	bic.w	r2, r7, #4278190080	; 0xff000000
    2b24:	f422 0770 	bic.w	r7, r2, #15728640	; 0xf00000
      /* Read two nearest output values from the index in 1.31(q31) format */
      y0 = pYData[index];
      y1 = pYData[index + 1u];

      /* Calculation of y0 * (1-fract) and y is in 2.30 format */
      y = ((q31_t) ((q63_t) y0 * (0x7FFFFFFF - fract) >> 32));
    2b28:	f64f 71ff 	movw	r1, #65535	; 0xffff
    else
    {

      /* 20 bits for the fractional part */
      /* shift left by 11 to keep fract in 1.31 format */
      fract = (x & 0x000FFFFF) << 11;
    2b2c:	02fa      	lsls	r2, r7, #11

      /* Read two nearest output values from the index in 1.31(q31) format */
      y0 = pYData[index];
    2b2e:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
      y1 = pYData[index + 1u];
    2b32:	f854 4025 	ldr.w	r4, [r4, r5, lsl #2]

      /* Calculation of y0 * (1-fract) and y is in 2.30 format */
      y = ((q31_t) ((q63_t) y0 * (0x7FFFFFFF - fract) >> 32));
    2b36:	f6c7 71ff 	movt	r1, #32767	; 0x7fff
    2b3a:	1a88      	subs	r0, r1, r2

      /* Calculation of y0 * (1-fract) + y1 *fract and y is in 2.30 format */
      y += ((q31_t) (((q63_t) y1 * fract) >> 32));
    2b3c:	fb84 4502 	smull	r4, r5, r4, r2
      /* Read two nearest output values from the index in 1.31(q31) format */
      y0 = pYData[index];
      y1 = pYData[index + 1u];

      /* Calculation of y0 * (1-fract) and y is in 2.30 format */
      y = ((q31_t) ((q63_t) y0 * (0x7FFFFFFF - fract) >> 32));
    2b40:	fb83 0100 	smull	r0, r1, r3, r0

      /* Calculation of y0 * (1-fract) + y1 *fract and y is in 2.30 format */
      y += ((q31_t) (((q63_t) y1 * fract) >> 32));
    2b44:	186d      	adds	r5, r5, r1

      /* Convert y to 1.31 format */
      return (y << 1u);
    2b46:	006a      	lsls	r2, r5, #1
                                  	
                                	
                                	Current = LeftOut;
                                	
                                	
                                	a = Current + Last1 + Last2 +Last3;
    2b48:	4920      	ldr	r1, [pc, #128]	; (2bcc <AudioProcess+0x254>)
    2b4a:	4821      	ldr	r0, [pc, #132]	; (2bd0 <AudioProcess+0x258>)
    2b4c:	680c      	ldr	r4, [r1, #0]
    2b4e:	4f21      	ldr	r7, [pc, #132]	; (2bd4 <AudioProcess+0x25c>)
    2b50:	6805      	ldr	r5, [r0, #0]
    2b52:	683b      	ldr	r3, [r7, #0]
                                	a=a>>2;
                                	LeftOut = a;
                                	
                                	Last3 = Last2;
    2b54:	603d      	str	r5, [r7, #0]
	         
	// Ram signal into Overdrive table
	
	Out = arm_linear_interp_q31((q31_t * )atan_24pi_q31_t,TableIndex,4096);
	 
	return Out>>8; //We need to shift by 8 to get back to a value that fits in the lowest 24-bits
    2b56:	1212      	asrs	r2, r2, #8
                                  	
                                	
                                	Current = LeftOut;
                                	
                                	
                                	a = Current + Last1 + Last2 +Last3;
    2b58:	18a7      	adds	r7, r4, r2
    2b5a:	197d      	adds	r5, r7, r5
    2b5c:	18eb      	adds	r3, r5, r3
                                	//LeftOut = Overdrive(LeftOut<<8, OD_Level);
                                	                                	
                                	//Compute_q31_t_IIR(&MyIIR[0],LeftOut,&LeftOut);
                                  	
                                	
                                	Current = LeftOut;
    2b5e:	4d1e      	ldr	r5, [pc, #120]	; (2bd8 <AudioProcess+0x260>)
                                	a=a>>2;
                                	LeftOut = a;
                                	
                                	Last3 = Last2;
                                	Last2 = Last1;
                                	Last1 = Current;
    2b60:	600a      	str	r2, [r1, #0]
                                	//LeftOut = Overdrive(LeftOut<<8, OD_Level);
                                	                                	
                                	//Compute_q31_t_IIR(&MyIIR[0],LeftOut,&LeftOut);
                                  	
                                	
                                	Current = LeftOut;
    2b62:	602a      	str	r2, [r5, #0]
                                	
                                	Last3 = Last2;
                                	Last2 = Last1;
                                	Last1 = Current;
                                	
                                	RightOut = LeftOut;
    2b64:	4911      	ldr	r1, [pc, #68]	; (2bac <AudioProcess+0x234>)
                                	
                                	Current = LeftOut;
                                	
                                	
                                	a = Current + Last1 + Last2 +Last3;
                                	a=a>>2;
    2b66:	4d1d      	ldr	r5, [pc, #116]	; (2bdc <AudioProcess+0x264>)
                                	LeftOut = a;
                                	
                                	Last3 = Last2;
                                	Last2 = Last1;
    2b68:	6004      	str	r4, [r0, #0]
                                	
                                	Current = LeftOut;
                                	
                                	
                                	a = Current + Last1 + Last2 +Last3;
                                	a=a>>2;
    2b6a:	109b      	asrs	r3, r3, #2
    2b6c:	602b      	str	r3, [r5, #0]
                                	LeftOut = a;
    2b6e:	6033      	str	r3, [r6, #0]
                                	
                                	Last3 = Last2;
                                	Last2 = Last1;
                                	Last1 = Current;
                                	
                                	RightOut = LeftOut;
    2b70:	600b      	str	r3, [r1, #0]
                                                                	

                                break;
    2b72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                                
                                break;
                                
                                case PATCH_OCTAVE:
                                        
                                	Octave(LeftIn,&LeftOut,&MyOctave);
    2b74:	480b      	ldr	r0, [pc, #44]	; (2ba4 <AudioProcess+0x22c>)
    2b76:	490a      	ldr	r1, [pc, #40]	; (2ba0 <AudioProcess+0x228>)
    2b78:	4a19      	ldr	r2, [pc, #100]	; (2be0 <AudioProcess+0x268>)
    2b7a:	6800      	ldr	r0, [r0, #0]
    2b7c:	f7fe feb2 	bl	18e4 <Octave>
                                	
                                	RightOut = RightIn;
    2b80:	490b      	ldr	r1, [pc, #44]	; (2bb0 <AudioProcess+0x238>)
    2b82:	4b0a      	ldr	r3, [pc, #40]	; (2bac <AudioProcess+0x234>)
    2b84:	680a      	ldr	r2, [r1, #0]
    2b86:	601a      	str	r2, [r3, #0]
                                	
                                        break;
    2b88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    /* Index value calculation */
    index = ((x & 0xFFF00000) >> 20);

    if(index >= (int32_t)(nValues - 1))
    {
      return (pYData[nValues - 1]);
    2b8a:	4b16      	ldr	r3, [pc, #88]	; (2be4 <AudioProcess+0x26c>)
    2b8c:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
    2b8e:	e760      	b.n	2a52 <AudioProcess+0xda>
    2b90:	4f14      	ldr	r7, [pc, #80]	; (2be4 <AudioProcess+0x26c>)
    2b92:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
    2b94:	e7d8      	b.n	2b48 <AudioProcess+0x1d0>
    2b96:	4c13      	ldr	r4, [pc, #76]	; (2be4 <AudioProcess+0x26c>)
    2b98:	6be0      	ldr	r0, [r4, #60]	; 0x3c
    2b9a:	e7b1      	b.n	2b00 <AudioProcess+0x188>
    2b9c:	1fffe000 	.word	0x1fffe000
    2ba0:	1fffe0b4 	.word	0x1fffe0b4
    2ba4:	1fffe214 	.word	0x1fffe214
    2ba8:	1fffea1c 	.word	0x1fffea1c
    2bac:	1fffea30 	.word	0x1fffea30
    2bb0:	1fffe0b0 	.word	0x1fffe0b0
    2bb4:	1fffe0ac 	.word	0x1fffe0ac
    2bb8:	0000be6c 	.word	0x0000be6c
    2bbc:	1fffe0d0 	.word	0x1fffe0d0
    2bc0:	1fffe034 	.word	0x1fffe034
    2bc4:	00007e6c 	.word	0x00007e6c
    2bc8:	1fffe120 	.word	0x1fffe120
    2bcc:	1fffe0a8 	.word	0x1fffe0a8
    2bd0:	1fffe0cc 	.word	0x1fffe0cc
    2bd4:	1fffe038 	.word	0x1fffe038
    2bd8:	1fffe210 	.word	0x1fffe210
    2bdc:	1fffea18 	.word	0x1fffea18
    2be0:	1fffe0b8 	.word	0x1fffe0b8
    2be4:	0000be2c 	.word	0x0000be2c

00002be8 <InitAudioIO>:
{
    float       TargetDivider;
    uint32_t    Frac;
    uint32_t    Div;

    SIM_SCGC6 |= SIM_SCGC6_I2S_MASK;    //Enable CLock to I2S Module
    2be8:	f248 0320 	movw	r3, #32800	; 0x8020

uint32_t InitAudioIO( uint32_t    BusClockIn,
					  uint32_t    SampleRate,
					  uint32_t    MCLK_Ratio)

{
    2bec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    float       TargetDivider;
    uint32_t    Frac;
    uint32_t    Div;

    SIM_SCGC6 |= SIM_SCGC6_I2S_MASK;    //Enable CLock to I2S Module
    2bf0:	f2c4 0304 	movt	r3, #16388	; 0x4004

uint32_t InitAudioIO( uint32_t    BusClockIn,
					  uint32_t    SampleRate,
					  uint32_t    MCLK_Ratio)

{
    2bf4:	4604      	mov	r4, r0
    float       TargetDivider;
    uint32_t    Frac;
    uint32_t    Div;

    SIM_SCGC6 |= SIM_SCGC6_I2S_MASK;    //Enable CLock to I2S Module
    2bf6:	69d8      	ldr	r0, [r3, #28]
    2bf8:	f440 4500 	orr.w	r5, r0, #32768	; 0x8000

uint32_t InitAudioIO( uint32_t    BusClockIn,
					  uint32_t    SampleRate,
					  uint32_t    MCLK_Ratio)

{
    2bfc:	b082      	sub	sp, #8
    float       TargetDivider;
    uint32_t    Frac;
    uint32_t    Div;

    SIM_SCGC6 |= SIM_SCGC6_I2S_MASK;    //Enable CLock to I2S Module
    2bfe:	61dd      	str	r5, [r3, #28]

    //blow away all the registers;

    sai_clear_reg(0);
    2c00:	2000      	movs	r0, #0

uint32_t InitAudioIO( uint32_t    BusClockIn,
					  uint32_t    SampleRate,
					  uint32_t    MCLK_Ratio)

{
    2c02:	4690      	mov	r8, r2
    2c04:	460e      	mov	r6, r1

    SIM_SCGC6 |= SIM_SCGC6_I2S_MASK;    //Enable CLock to I2S Module

    //blow away all the registers;

    sai_clear_reg(0);
    2c06:	f000 ff3d 	bl	3a84 <sai_clear_reg>

    //Setup the Master Clock

    AudioMasterClock = SampleRate *     //input Sample Rate
    					MCLK_Ratio; // Overclock Ration
    TargetDivider = (float)AudioMasterClock / (float)BusClockIn;
    2c0a:	4620      	mov	r0, r4
    2c0c:	f7fe fb78 	bl	1300 <__aeabi_ui2f>
    2c10:	4681      	mov	r9, r0
    2c12:	fb06 f008 	mul.w	r0, r6, r8
    2c16:	f7fe fb73 	bl	1300 <__aeabi_ui2f>
    2c1a:	4649      	mov	r1, r9
    2c1c:	f7fe fc7c 	bl	1518 <__aeabi_fdiv>

    //Iterate through all possibilities of the DIv/Frac to narrow in on a good diver

    Div = 8192; //1st operation is a halving which will put us at the maximum divider value
    2c20:	f44f 5400 	mov.w	r4, #8192	; 0x2000

    //Setup the Master Clock

    AudioMasterClock = SampleRate *     //input Sample Rate
    					MCLK_Ratio; // Overclock Ration
    TargetDivider = (float)AudioMasterClock / (float)BusClockIn;
    2c24:	4607      	mov	r7, r0
    //Iterate through all possibilities of the DIv/Frac to narrow in on a good diver

    Div = 8192; //1st operation is a halving which will put us at the maximum divider value
    do
    {
        Div >>= 1;
    2c26:	0864      	lsrs	r4, r4, #1
        Frac = (uint32_t) ((float)Div * TargetDivider);
    2c28:	4620      	mov	r0, r4
    2c2a:	f7fe fb69 	bl	1300 <__aeabi_ui2f>
    2c2e:	4639      	mov	r1, r7
    2c30:	4606      	mov	r6, r0
    2c32:	f7fe fbbd 	bl	13b0 <__aeabi_fmul>
    2c36:	f7fe fda7 	bl	1788 <__aeabi_f2uiz>
    } while(Frac > 256);
    2c3a:	f5b0 7f80 	cmp.w	r0, #256	; 0x100

    Div = 8192; //1st operation is a halving which will put us at the maximum divider value
    do
    {
        Div >>= 1;
        Frac = (uint32_t) ((float)Div * TargetDivider);
    2c3e:	4605      	mov	r5, r0
    } while(Frac > 256);
    2c40:	d8f1      	bhi.n	2c26 <InitAudioIO+0x3e>

    //Re compute based upon actual Values

    AudioMasterClock = (uint32_t) ((float)BusClockIn * (((float)Frac + 1) / ((float)Div + 1)));
    2c42:	f7fe fb5d 	bl	1300 <__aeabi_ui2f>
    2c46:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
    2c4a:	f7fe faa9 	bl	11a0 <__addsf3>
    2c4e:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
    2c52:	4682      	mov	sl, r0
    2c54:	4630      	mov	r0, r6
    2c56:	f7fe faa3 	bl	11a0 <__addsf3>
    2c5a:	4601      	mov	r1, r0
    2c5c:	4650      	mov	r0, sl
    2c5e:	f7fe fc5b 	bl	1518 <__aeabi_fdiv>
    2c62:	4601      	mov	r1, r0
    2c64:	4648      	mov	r0, r9
    2c66:	f7fe fba3 	bl	13b0 <__aeabi_fmul>
    2c6a:	f7fe fd8d 	bl	1788 <__aeabi_f2uiz>
    2c6e:	4f6e      	ldr	r7, [pc, #440]	; (2e28 <InitAudioIO+0x240>)
    2c70:	6038      	str	r0, [r7, #0]
    SampleRate = (uint32_t) ((float)AudioMasterClock / (float)MCLK_Ratio);
    2c72:	f7fe fb45 	bl	1300 <__aeabi_ui2f>
    2c76:	4606      	mov	r6, r0
    2c78:	4640      	mov	r0, r8
    2c7a:	f7fe fb41 	bl	1300 <__aeabi_ui2f>
    2c7e:	4601      	mov	r1, r0
    2c80:	4630      	mov	r0, r6
    2c82:	f7fe fc49 	bl	1518 <__aeabi_fdiv>
    2c86:	f7fe fd7f 	bl	1788 <__aeabi_f2uiz>
    
    sai_mclk_config(0, 0, 1, Frac - 1, Div - 1);
    2c8a:	3c01      	subs	r4, #1
    } while(Frac > 256);

    //Re compute based upon actual Values

    AudioMasterClock = (uint32_t) ((float)BusClockIn * (((float)Frac + 1) / ((float)Div + 1)));
    SampleRate = (uint32_t) ((float)AudioMasterClock / (float)MCLK_Ratio);
    2c8c:	4606      	mov	r6, r0
    
    sai_mclk_config(0, 0, 1, Frac - 1, Div - 1);
    2c8e:	1e6b      	subs	r3, r5, #1
    2c90:	2000      	movs	r0, #0
    2c92:	4601      	mov	r1, r0
    2c94:	2201      	movs	r2, #1
    2c96:	9400      	str	r4, [sp, #0]
    2c98:	b2db      	uxtb	r3, r3
    2c9a:	f000 fe9b 	bl	39d4 <sai_mclk_config>

    //Set of the BitClock.  There always needs to be 64 bclocks per sample

    Div = AudioMasterClock / (SampleRate * 64);
    2c9e:	6839      	ldr	r1, [r7, #0]
    2ca0:	01b2      	lsls	r2, r6, #6
    2ca2:	fbb1 f0f2 	udiv	r0, r1, r2
        0,      //Port 0
        1,      //Tx
        1,      //Set as MAster Clock
        1,      //Active High Polarity
        1,      //Direction is out
        Div / 2 - 1
    2ca6:	0845      	lsrs	r5, r0, #1
    //Set of the BitClock.  There always needs to be 64 bclocks per sample

    Div = AudioMasterClock / (SampleRate * 64);
   
    sai_bclk_config
    (
    2ca8:	1e6b      	subs	r3, r5, #1
    2caa:	b2dc      	uxtb	r4, r3
    2cac:	2501      	movs	r5, #1
    2cae:	2000      	movs	r0, #0
    2cb0:	4629      	mov	r1, r5
    2cb2:	462a      	mov	r2, r5
    2cb4:	462b      	mov	r3, r5
    2cb6:	9401      	str	r4, [sp, #4]
    2cb8:	9500      	str	r5, [sp, #0]
    2cba:	f000 fcad 	bl	3618 <sai_bclk_config>
        1,      //Direction is out
        Div / 2 - 1
    );          //Set the Div value for the BIt CLock
    
    sai_bclk_config
    (
    2cbe:	2000      	movs	r0, #0
    2cc0:	462a      	mov	r2, r5
    2cc2:	462b      	mov	r3, r5
    2cc4:	4601      	mov	r1, r0
    2cc6:	9401      	str	r4, [sp, #4]
    2cc8:	9500      	str	r5, [sp, #0]
    2cca:	f000 fca5 	bl	3618 <sai_bclk_config>
        1,      //Active High Polarity
        1,      //Direction is out
        Div / 2 - 1
    );          //Set the Div value for the BIt CLock
    
    sai_bclk_en(0, //Port
    2cce:	2000      	movs	r0, #0
    2cd0:	4629      	mov	r1, r5
    2cd2:	f000 fd1d 	bl	3710 <sai_bclk_en>
    1 //Tx
    );
   
    sai_bclk_en(0, //Port
    2cd6:	2000      	movs	r0, #0
				0 //Rx
				);
			   
    sai_mode_config(0, //Port 0
    2cd8:	4604      	mov	r4, r0
    
    sai_bclk_en(0, //Port
    1 //Tx
    );
   
    sai_bclk_en(0, //Port
    2cda:	4601      	mov	r1, r0
    2cdc:	f000 fd18 	bl	3710 <sai_bclk_en>
				0 //Rx
				);
			   
    sai_mode_config(0, //Port 0
    2ce0:	4620      	mov	r0, r4
    2ce2:	4629      	mov	r1, r5
    2ce4:	4622      	mov	r2, r4
    2ce6:	4623      	mov	r3, r4
    2ce8:	9400      	str	r4, [sp, #0]
    2cea:	f000 fc37 	bl	355c <sai_mode_config>
					1, //Tx
					0, 
					0, //Not Bit Swap
					0);  //No BCI
   
    sai_mode_config(0, //Port 0
    2cee:	4623      	mov	r3, r4
    2cf0:	4620      	mov	r0, r4
    2cf2:	4621      	mov	r1, r4
    2cf4:	462a      	mov	r2, r5
    2cf6:	9400      	str	r4, [sp, #0]
    2cf8:	f000 fc30 	bl	355c <sai_mode_config>
					0, //Rx
					1, 
					0, //Not Bit Swap
					0);  //No BCI
   
    sai_word_flg_config(0, //port
    2cfc:	4620      	mov	r0, r4
    2cfe:	4629      	mov	r1, r5
    2d00:	4622      	mov	r2, r4
    2d02:	f000 fd2d 	bl	3760 <sai_word_flg_config>
						1, //tx
						0 //first word starts word flag
						);
					  
    sai_word_flg_config(0, //port
    2d06:	4620      	mov	r0, r4
    2d08:	4621      	mov	r1, r4
    2d0a:	4622      	mov	r2, r4
    2d0c:	f000 fd28 	bl	3760 <sai_word_flg_config>
						0, //rx
						0 //first word starts word flag
						);
  
    sai_frame_config(
    2d10:	4620      	mov	r0, r4
    2d12:	4629      	mov	r1, r5
    2d14:	462a      	mov	r2, r5
    2d16:	233f      	movs	r3, #63	; 0x3f
    2d18:	9500      	str	r5, [sp, #0]
    2d1a:	f000 fd33 	bl	3784 <sai_frame_config>
						63,                 //one less than the number of BClks per frame.  32 bclocks for each word
						1                   //MSB First
					);
  
    sai_frame_config
    (
    2d1e:	233f      	movs	r3, #63	; 0x3f
    2d20:	4620      	mov	r0, r4
    2d22:	4621      	mov	r1, r4
    2d24:	462a      	mov	r2, r5
    2d26:	9500      	str	r5, [sp, #0]
    2d28:	f000 fd2c 	bl	3784 <sai_frame_config>
        63,                 //one less than the number of BClks per frame.  32 bclocks for each word
        1                   //MSB First
    );
  
    sai_frameclk_config
    (
    2d2c:	4620      	mov	r0, r4
    2d2e:	4629      	mov	r1, r5
    2d30:	462a      	mov	r2, r5
    2d32:	4623      	mov	r3, r4
    2d34:	9500      	str	r5, [sp, #0]
    2d36:	f000 fd75 	bl	3824 <sai_frameclk_config>
        0,                  //high active frame sync polarity
        1                   //Master mode generates frame sync
    );
   
    sai_frameclk_config
    (
    2d3a:	4620      	mov	r0, r4
    2d3c:	4621      	mov	r1, r4
    2d3e:	462a      	mov	r2, r5
    2d40:	4623      	mov	r3, r4
    2d42:	9500      	str	r5, [sp, #0]
    2d44:	f000 fd6e 	bl	3824 <sai_frameclk_config>
        1,                  //Frame Sync One bit Early.   This makes it I2S compatible
        0,                  //high active frame sync polarity
        1                   //Master mode generates frame sync
    );
  
    sai_wordlength_config(0, //Port
    2d48:	f04f 0817 	mov.w	r8, #23
    2d4c:	221f      	movs	r2, #31
    2d4e:	4613      	mov	r3, r2
    2d50:	4620      	mov	r0, r4
    2d52:	4629      	mov	r1, r5
    2d54:	f8cd 8000 	str.w	r8, [sp]
    2d58:	f000 fdee 	bl	3938 <sai_wordlength_config>
							31, //32 bits per word N
							31, //32 bits per word N
							23 // first bit to shift
							);
  
    sai_wordlength_config(0, //Port
    2d5c:	221f      	movs	r2, #31
    2d5e:	4613      	mov	r3, r2
    2d60:	4620      	mov	r0, r4
    2d62:	4621      	mov	r1, r4
    2d64:	f8cd 8000 	str.w	r8, [sp]
    2d68:	f000 fde6 	bl	3938 <sai_wordlength_config>
							31, //32 bits per word N
							31, //32 bits per word N
							23 // first bit to shift
							);
						   
    sai_channel_enable(0, //Port 0
    2d6c:	4620      	mov	r0, r4
    2d6e:	4629      	mov	r1, r5
    2d70:	462a      	mov	r2, r5
    2d72:	f000 fcdf 	bl	3734 <sai_channel_enable>
						1, //Tx
						1 //Enable both Channel
						);
					   
    sai_channel_enable(0, //Port 0
    2d76:	462a      	mov	r2, r5
    2d78:	4620      	mov	r0, r4
    2d7a:	4621      	mov	r1, r4
    2d7c:	f000 fcda 	bl	3734 <sai_channel_enable>
						0, //Rx
						1 //Enable both Channel
						);
   
    sai_pinmux_init(0, 0);  //Port C
    2d80:	4620      	mov	r0, r4
    2d82:	4621      	mov	r1, r4
    2d84:	f000 fb36 	bl	33f4 <sai_pinmux_init>
   
    sai_stop_dbg_enable(0, 1, 0, 0);    //tx enabled in debug and stop
    2d88:	4620      	mov	r0, r4
    2d8a:	4629      	mov	r1, r5
    2d8c:	4622      	mov	r2, r4
    2d8e:	4623      	mov	r3, r4
    2d90:	f000 fb5e 	bl	3450 <sai_stop_dbg_enable>
   
    sai_stop_dbg_enable(0, 0, 0, 0);    //RX enabled in debug and stop
    2d94:	4623      	mov	r3, r4
    2d96:	4620      	mov	r0, r4
    2d98:	4621      	mov	r1, r4
    2d9a:	4622      	mov	r2, r4
    2d9c:	f000 fb58 	bl	3450 <sai_stop_dbg_enable>
    
    sai_watermark_config(0, //POrt 0
    2da0:	4620      	mov	r0, r4
    2da2:	4629      	mov	r1, r5
    2da4:	462a      	mov	r2, r5
    2da6:	f000 fbcd 	bl	3544 <sai_watermark_config>
    1, //Recieve WaterMark
    1 //anything greater than 1
    );
   
    sai_watermark_config(0, //POrt 0
    2daa:	462a      	mov	r2, r5
    2dac:	4620      	mov	r0, r4
    2dae:	4621      	mov	r1, r4
    2db0:	f000 fbc8 	bl	3544 <sai_watermark_config>
        0, //tx WaterMark
        1 //anything less than or equal to
        );
 
    
    sai_enable(0, //port
    2db4:	4620      	mov	r0, r4
    2db6:	4621      	mov	r1, r4
    2db8:	f000 fbb2 	bl	3520 <sai_enable>
        0 //rx
        );
        
     sai_enable(0, //port
    2dbc:	4620      	mov	r0, r4
    2dbe:	4629      	mov	r1, r5
    2dc0:	f000 fbae 	bl	3520 <sai_enable>
     1 //tx
     );
  
     
    I2S0_TDR0 = 0;
    2dc4:	f44f 4270 	mov.w	r2, #61440	; 0xf000
    I2S0_TDR0 = 0;
    
         
   
   
      PORTD_PCR3 = (PORT_PCR_MUX(1) | PORT_PCR_DSE_MASK);
    2dc8:	f44f 4140 	mov.w	r1, #49152	; 0xc000
     sai_enable(0, //port
     1 //tx
     );
  
     
    I2S0_TDR0 = 0;
    2dcc:	f2c4 0202 	movt	r2, #16386	; 0x4002
    I2S0_TDR0 = 0;
    
         
   
   
      PORTD_PCR3 = (PORT_PCR_MUX(1) | PORT_PCR_DSE_MASK);
    2dd0:	f2c4 0104 	movt	r1, #16388	; 0x4004
      
      GPIOD_PDDR |= 1<<3;
    2dd4:	f24f 03c0 	movw	r3, #61632	; 0xf0c0
    2dd8:	f2c4 030f 	movt	r3, #16399	; 0x400f
    I2S0_TDR0 = 0;
    
         
   
   
      PORTD_PCR3 = (PORT_PCR_MUX(1) | PORT_PCR_DSE_MASK);
    2ddc:	f44f 70a0 	mov.w	r0, #320	; 0x140
     sai_enable(0, //port
     1 //tx
     );
  
     
    I2S0_TDR0 = 0;
    2de0:	6214      	str	r4, [r2, #32]
    I2S0_TDR0 = 0;
    2de2:	6214      	str	r4, [r2, #32]
    I2S0_TDR0 = 0;
    2de4:	6214      	str	r4, [r2, #32]
    I2S0_TDR0 = 0;
    2de6:	6214      	str	r4, [r2, #32]
    
         
   
   
      PORTD_PCR3 = (PORT_PCR_MUX(1) | PORT_PCR_DSE_MASK);
    2de8:	60c8      	str	r0, [r1, #12]
      
      GPIOD_PDDR |= 1<<3;
    2dea:	695a      	ldr	r2, [r3, #20]
    2dec:	f042 0208 	orr.w	r2, r2, #8
    2df0:	615a      	str	r2, [r3, #20]
      
      PORTD_PCR1 = (PORT_PCR_MUX(1) | PORT_PCR_DSE_MASK);
    2df2:	6048      	str	r0, [r1, #4]
          
          GPIOD_PDDR |= 1<<1;
    2df4:	6959      	ldr	r1, [r3, #20]
    2df6:	f041 0002 	orr.w	r0, r1, #2
    2dfa:	6158      	str	r0, [r3, #20]
          
          GPIOD_PSOR = 0;
      
    
    
    sai_interrupt_enable(0, //Port
    2dfc:	4621      	mov	r1, r4
      
      PORTD_PCR1 = (PORT_PCR_MUX(1) | PORT_PCR_DSE_MASK);
          
          GPIOD_PDDR |= 1<<1;
          
          GPIOD_PSOR = 0;
    2dfe:	605c      	str	r4, [r3, #4]
      
    
    
    sai_interrupt_enable(0, //Port
    2e00:	4620      	mov	r0, r4
    2e02:	f000 fb7b 	bl	34fc <sai_interrupt_enable>
     0 // Rx)
    );
    
    sai_interrupt_enable(0, //Port
    2e06:	4629      	mov	r1, r5
    2e08:	4620      	mov	r0, r4
    2e0a:	f000 fb77 	bl	34fc <sai_interrupt_enable>
        1 // tx)
        );
        
    
    enable_irq(INT_I2S0_Rx - 16);
    2e0e:	200e      	movs	r0, #14
    2e10:	f000 f80e 	bl	2e30 <enable_irq>
    enable_irq(INT_I2S0_Tx - 16);
    2e14:	200d      	movs	r0, #13
    2e16:	f000 f80b 	bl	2e30 <enable_irq>
    
    AudioSampleRate = SampleRate;
    2e1a:	4b04      	ldr	r3, [pc, #16]	; (2e2c <InitAudioIO+0x244>)
    return AudioMasterClock;
}
    2e1c:	6838      	ldr	r0, [r7, #0]
        
    
    enable_irq(INT_I2S0_Rx - 16);
    enable_irq(INT_I2S0_Tx - 16);
    
    AudioSampleRate = SampleRate;
    2e1e:	601e      	str	r6, [r3, #0]
    return AudioMasterClock;
}
    2e20:	b002      	add	sp, #8
    2e22:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    2e26:	bf00      	nop
    2e28:	1fffea34 	.word	0x1fffea34
    2e2c:	1fffea38 	.word	0x1fffea38

00002e30 <enable_irq>:
    /// if (irq > 61)
    //printf("\nERR! Invalid IRQ value passed to enable irq function!\n");

    /* Determine which of the NVICISERs corresponds to the irq */

    div = irq / 32;
    2e30:	2800      	cmp	r0, #0
    2e32:	4603      	mov	r3, r0
    2e34:	bfb8      	it	lt
    2e36:	f100 031f 	addlt.w	r3, r0, #31
    2e3a:	1159      	asrs	r1, r3, #5

    switch(div)
    2e3c:	2901      	cmp	r1, #1
    2e3e:	d028      	beq.n	2e92 <enable_irq+0x62>
    2e40:	2902      	cmp	r1, #2
    2e42:	d011      	beq.n	2e68 <enable_irq+0x38>
    2e44:	bb21      	cbnz	r1, 2e90 <enable_irq+0x60>
    {
        case 0x0:   NVICICPR0 = 1 << (irq % 32); NVICISER0 = 1 << (irq % 32); break;
    2e46:	231f      	movs	r3, #31
    2e48:	f2c8 0300 	movt	r3, #32768	; 0x8000
    2e4c:	4003      	ands	r3, r0
    2e4e:	2b00      	cmp	r3, #0
    2e50:	db35      	blt.n	2ebe <enable_irq+0x8e>
    2e52:	f44f 4061 	mov.w	r0, #57600	; 0xe100
    2e56:	f2ce 0000 	movt	r0, #57344	; 0xe000
    2e5a:	2101      	movs	r1, #1
    2e5c:	fa01 f203 	lsl.w	r2, r1, r3
    2e60:	f8c0 2180 	str.w	r2, [r0, #384]	; 0x180
    2e64:	6002      	str	r2, [r0, #0]
    2e66:	4770      	bx	lr
        case 0x1:   NVICICPR1 = 1 << (irq % 32); NVICISER1 = 1 << (irq % 32); break;
        case 0x2:   NVICICPR2 = 1 << (irq % 32); NVICISER2 = 1 << (irq % 32); break;
    2e68:	231f      	movs	r3, #31
    2e6a:	f2c8 0300 	movt	r3, #32768	; 0x8000
    2e6e:	4003      	ands	r3, r0
    2e70:	2b00      	cmp	r3, #0
    2e72:	da03      	bge.n	2e7c <enable_irq+0x4c>
    2e74:	3b01      	subs	r3, #1
    2e76:	f063 001f 	orn	r0, r3, #31
    2e7a:	1c43      	adds	r3, r0, #1
    2e7c:	f44f 4261 	mov.w	r2, #57600	; 0xe100
    2e80:	f2ce 0200 	movt	r2, #57344	; 0xe000
    2e84:	2101      	movs	r1, #1
    2e86:	fa01 f003 	lsl.w	r0, r1, r3
    2e8a:	f8c2 0188 	str.w	r0, [r2, #392]	; 0x188
    2e8e:	6090      	str	r0, [r2, #8]
    2e90:	4770      	bx	lr
    div = irq / 32;

    switch(div)
    {
        case 0x0:   NVICICPR0 = 1 << (irq % 32); NVICISER0 = 1 << (irq % 32); break;
        case 0x1:   NVICICPR1 = 1 << (irq % 32); NVICISER1 = 1 << (irq % 32); break;
    2e92:	231f      	movs	r3, #31
    2e94:	f2c8 0300 	movt	r3, #32768	; 0x8000
    2e98:	4003      	ands	r3, r0
    2e9a:	2b00      	cmp	r3, #0
    2e9c:	db0a      	blt.n	2eb4 <enable_irq+0x84>
    2e9e:	f44f 4061 	mov.w	r0, #57600	; 0xe100
    2ea2:	f2ce 0000 	movt	r0, #57344	; 0xe000
    2ea6:	2101      	movs	r1, #1
    2ea8:	fa01 f203 	lsl.w	r2, r1, r3
    2eac:	f8c0 2184 	str.w	r2, [r0, #388]	; 0x184
    2eb0:	6042      	str	r2, [r0, #4]
    2eb2:	4770      	bx	lr
    2eb4:	3b01      	subs	r3, #1
    2eb6:	f063 021f 	orn	r2, r3, #31
    2eba:	1c53      	adds	r3, r2, #1
    2ebc:	e7ef      	b.n	2e9e <enable_irq+0x6e>

    div = irq / 32;

    switch(div)
    {
        case 0x0:   NVICICPR0 = 1 << (irq % 32); NVICISER0 = 1 << (irq % 32); break;
    2ebe:	1e58      	subs	r0, r3, #1
    2ec0:	f060 021f 	orn	r2, r0, #31
    2ec4:	1c53      	adds	r3, r2, #1
    2ec6:	e7c4      	b.n	2e52 <enable_irq+0x22>

00002ec8 <InitADC_12Bit>:

tADC_Config Master_Adc_Config;

void InitADC_12Bit()
{
	SIM_SCGC6 |= SIM_SCGC6_ADC0_MASK;
    2ec8:	f248 0020 	movw	r0, #32800	; 0x8020
    2ecc:	f2c4 0004 	movt	r0, #16388	; 0x4004


tADC_Config Master_Adc_Config;

void InitADC_12Bit()
{
    2ed0:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
(
    ADC_MemMapPtr   adcmap,
    tADC_ConfigPtr  ADC_CfgPtr
)
{
    ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
    2ed4:	f44f 4330 	mov.w	r3, #45056	; 0xb000

tADC_Config Master_Adc_Config;

void InitADC_12Bit()
{
	SIM_SCGC6 |= SIM_SCGC6_ADC0_MASK;
    2ed8:	f8d0 901c 	ldr.w	r9, [r0, #28]
	
	// setup the initial ADC default configuration to get setup for calibration
	
	 Master_Adc_Config.CONFIG1  = ADLPC_NORMAL
    2edc:	4a47      	ldr	r2, [pc, #284]	; (2ffc <InitADC_12Bit+0x134>)
(
    ADC_MemMapPtr   adcmap,
    tADC_ConfigPtr  ADC_CfgPtr
)
{
    ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
    2ede:	f2c4 0303 	movt	r3, #16387	; 0x4003
	 Master_Adc_Config.STATUS3  = CAL_OFF
	                            | ADCO_SINGLE
	                            | AVGE_ENABLED
	                            | ADC_SC3_AVGS(AVGS_16);

	 Master_Adc_Config.STATUS1A = AIEN_OFF | DIFF_SINGLE | ADC_SC1_ADCH(31);
    2ee2:	211f      	movs	r1, #31
	 Master_Adc_Config.CONFIG2  = MUXSEL_ADCA
	                            | ADACKEN_DISABLED
	                            | ADHSC_HISPEED
	                            | ADC_CFG2_ADLSTS(ADLSTS_20) ;
	 
	 Master_Adc_Config.COMPARE1 = 0x1234u ;                 // can be anything
    2ee4:	f241 2734 	movw	r7, #4660	; 0x1234
	 Master_Adc_Config.COMPARE2 = 0x5678u ;                 // can be anything
    2ee8:	f245 6678 	movw	r6, #22136	; 0x5678
	                                                        // since not using
	                                                        // compare feature
	 Master_Adc_Config.STATUS2  = 
    2eec:	2518      	movs	r5, #24
	                            | ACFGT_GREATER
	                            | ACREN_ENABLED
	                            | DMAEN_DISABLED
	                            | ADC_SC2_REFSEL(REFSEL_EXT);

	 Master_Adc_Config.STATUS3  = CAL_OFF
    2eee:	2406      	movs	r4, #6
{
	SIM_SCGC6 |= SIM_SCGC6_ADC0_MASK;
	
	// setup the initial ADC default configuration to get setup for calibration
	
	 Master_Adc_Config.CONFIG1  = ADLPC_NORMAL
    2ef0:	f04f 0854 	mov.w	r8, #84	; 0x54
	                            | ADC_CFG1_ADIV(ADIV_4)
	                            | ADLSMP_LONG
	                            | ADC_CFG1_MODE(MODE_12)
	                            | ADC_CFG1_ADICLK(ADICLK_BUS);
	 Master_Adc_Config.CONFIG2  = MUXSEL_ADCA
    2ef4:	f04f 0c04 	mov.w	ip, #4

tADC_Config Master_Adc_Config;

void InitADC_12Bit()
{
	SIM_SCGC6 |= SIM_SCGC6_ADC0_MASK;
    2ef8:	f049 6900 	orr.w	r9, r9, #134217728	; 0x8000000
    2efc:	f8c0 901c 	str.w	r9, [r0, #28]
	 
	 Master_Adc_Config.COMPARE1 = 0x1234u ;                 // can be anything
	 Master_Adc_Config.COMPARE2 = 0x5678u ;                 // can be anything
	                                                        // since not using
	                                                        // compare feature
	 Master_Adc_Config.STATUS2  = 
    2f00:	7195      	strb	r5, [r2, #6]
{
	SIM_SCGC6 |= SIM_SCGC6_ADC0_MASK;
	
	// setup the initial ADC default configuration to get setup for calibration
	
	 Master_Adc_Config.CONFIG1  = ADLPC_NORMAL
    2f02:	f882 8000 	strb.w	r8, [r2]
	                            | ADC_CFG1_ADIV(ADIV_4)
	                            | ADLSMP_LONG
	                            | ADC_CFG1_MODE(MODE_12)
	                            | ADC_CFG1_ADICLK(ADICLK_BUS);
	 Master_Adc_Config.CONFIG2  = MUXSEL_ADCA
    2f06:	f882 c001 	strb.w	ip, [r2, #1]
	                            | ACFGT_GREATER
	                            | ACREN_ENABLED
	                            | DMAEN_DISABLED
	                            | ADC_SC2_REFSEL(REFSEL_EXT);

	 Master_Adc_Config.STATUS3  = CAL_OFF
    2f0a:	71d4      	strb	r4, [r2, #7]
	                            | ADCO_SINGLE
	                            | AVGE_ENABLED
	                            | ADC_SC3_AVGS(AVGS_16);

	 Master_Adc_Config.STATUS1A = AIEN_OFF | DIFF_SINGLE | ADC_SC1_ADCH(31);
    2f0c:	7211      	strb	r1, [r2, #8]
	 Master_Adc_Config.STATUS1B = AIEN_OFF | DIFF_SINGLE | ADC_SC1_ADCH(31);
    2f0e:	7251      	strb	r1, [r2, #9]
	 Master_Adc_Config.CONFIG2  = MUXSEL_ADCA
	                            | ADACKEN_DISABLED
	                            | ADHSC_HISPEED
	                            | ADC_CFG2_ADLSTS(ADLSTS_20) ;
	 
	 Master_Adc_Config.COMPARE1 = 0x1234u ;                 // can be anything
    2f10:	8057      	strh	r7, [r2, #2]
	 Master_Adc_Config.COMPARE2 = 0x5678u ;                 // can be anything
    2f12:	8096      	strh	r6, [r2, #4]
(
    ADC_MemMapPtr   adcmap,
    tADC_ConfigPtr  ADC_CfgPtr
)
{
    ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
    2f14:	f8c3 8008 	str.w	r8, [r3, #8]
    ADC_CFG2_REG(adcmap) = ADC_CfgPtr->CONFIG2;
    2f18:	f8c3 c00c 	str.w	ip, [r3, #12]
    ADC_CV1_REG(adcmap) = ADC_CfgPtr->COMPARE1;
    2f1c:	619f      	str	r7, [r3, #24]
    ADC_CV2_REG(adcmap) = ADC_CfgPtr->COMPARE2;
    2f1e:	61de      	str	r6, [r3, #28]
    ADC_SC2_REG(adcmap) = ADC_CfgPtr->STATUS2;
    2f20:	621d      	str	r5, [r3, #32]
    ADC_SC3_REG(adcmap) = ADC_CfgPtr->STATUS3;
    2f22:	625c      	str	r4, [r3, #36]	; 0x24

    // ADC_PGA_REG(adcmap)  = ADC_CfgPtr->PGA;  //not one on P0

    ADC_SC1_REG(adcmap, A) = ADC_CfgPtr->STATUS1A;
    2f24:	6019      	str	r1, [r3, #0]
    ADC_SC1_REG(adcmap, B) = ADC_CfgPtr->STATUS1B;
    2f26:	6059      	str	r1, [r3, #4]

    /*~~~~~~~~~~~~~~~~~~~~*/

    /*~~~~~~~~~~~~~~~~~~~~*/

    ADC_SC2_REG(adcmap) &= ~ADC_SC2_ADTRG_MASK; // Enable Software Conversion Trigger for Calibration Process    - ADC0_SC2 = ADC0_SC2 | ADC_SC2_ADTRGW(0);
    2f28:	6a18      	ldr	r0, [r3, #32]
    2f2a:	f020 0240 	bic.w	r2, r0, #64	; 0x40
    2f2e:	621a      	str	r2, [r3, #32]
    ADC_SC3_REG(adcmap) &= (~ADC_SC3_ADCO_MASK &~ADC_SC3_AVGS_MASK);    // set single conversion, clear avgs bitfield for next writing
    2f30:	6a59      	ldr	r1, [r3, #36]	; 0x24
    2f32:	f021 070b 	bic.w	r7, r1, #11
    2f36:	625f      	str	r7, [r3, #36]	; 0x24
    ADC_SC3_REG(adcmap) |= (ADC_SC3_AVGE_MASK | ADC_SC3_AVGS(AVGS_32)); // Turn averaging ON and set at max value ( 32 )
    2f38:	6a5e      	ldr	r6, [r3, #36]	; 0x24
    2f3a:	f046 0507 	orr.w	r5, r6, #7
    2f3e:	625d      	str	r5, [r3, #36]	; 0x24
    ADC_SC3_REG(adcmap) |= ADC_SC3_CAL_MASK;    // Start CAL
    2f40:	6a5c      	ldr	r4, [r3, #36]	; 0x24
    2f42:	f044 0080 	orr.w	r0, r4, #128	; 0x80
    2f46:	6258      	str	r0, [r3, #36]	; 0x24
    while((ADC_SC1_REG(adcmap, A) & ADC_SC1_COCO_MASK) == COCO_NOT);
    2f48:	4619      	mov	r1, r3
    2f4a:	680a      	ldr	r2, [r1, #0]
    2f4c:	f44f 4330 	mov.w	r3, #45056	; 0xb000
    2f50:	0610      	lsls	r0, r2, #24
    2f52:	f2c4 0303 	movt	r3, #16387	; 0x4003
    2f56:	d5f8      	bpl.n	2f4a <InitADC_12Bit+0x82>

    // Wait calibration end

    if((ADC_SC3_REG(adcmap) & ADC_SC3_CALF_MASK) == CALF_FAIL)
    2f58:	6a5f      	ldr	r7, [r3, #36]	; 0x24
    2f5a:	067a      	lsls	r2, r7, #25
    2f5c:	d42d      	bmi.n	2fba <InitADC_12Bit+0xf2>
    }

    // Calculate plus-side calibration

    cal_var = 0x00;
    cal_var = ADC_CLP0_REG(adcmap);
    2f5e:	6cde      	ldr	r6, [r3, #76]	; 0x4c
    cal_var += ADC_CLP1_REG(adcmap);
    2f60:	6c9a      	ldr	r2, [r3, #72]	; 0x48
    cal_var += ADC_CLP2_REG(adcmap);
    2f62:	6c5d      	ldr	r5, [r3, #68]	; 0x44
    cal_var += ADC_CLP3_REG(adcmap);
    2f64:	6c1c      	ldr	r4, [r3, #64]	; 0x40
    cal_var += ADC_CLP4_REG(adcmap);
    2f66:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
    cal_var += ADC_CLPS_REG(adcmap);
    2f68:	6b99      	ldr	r1, [r3, #56]	; 0x38

    // Calculate plus-side calibration

    cal_var = 0x00;
    cal_var = ADC_CLP0_REG(adcmap);
    cal_var += ADC_CLP1_REG(adcmap);
    2f6a:	fa12 f786 	uxtah	r7, r2, r6
    cal_var += ADC_CLP2_REG(adcmap);
    2f6e:	fa15 f687 	uxtah	r6, r5, r7
    cal_var += ADC_CLP3_REG(adcmap);
    2f72:	fa14 f286 	uxtah	r2, r4, r6
    cal_var += ADC_CLP4_REG(adcmap);
    2f76:	fa10 f582 	uxtah	r5, r0, r2
    cal_var += ADC_CLPS_REG(adcmap);
    2f7a:	fa11 f485 	uxtah	r4, r1, r5
    cal_var = cal_var / 2;
    2f7e:	f3c4 004e 	ubfx	r0, r4, #1, #15
    cal_var |= 0x8000;  // Set MSB
    ADC_PG_REG(adcmap) = ADC_PG_PG(cal_var);
    2f82:	f440 4100 	orr.w	r1, r0, #32768	; 0x8000
    2f86:	62d9      	str	r1, [r3, #44]	; 0x2c

    // Calculate minus-side calibration

    cal_var = 0x00;
    cal_var = ADC_CLM0_REG(adcmap);
    2f88:	6edf      	ldr	r7, [r3, #108]	; 0x6c
    cal_var += ADC_CLM1_REG(adcmap);
    2f8a:	6e9e      	ldr	r6, [r3, #104]	; 0x68
    cal_var += ADC_CLM2_REG(adcmap);
    2f8c:	6e5d      	ldr	r5, [r3, #100]	; 0x64
    cal_var += ADC_CLM3_REG(adcmap);
    2f8e:	6e1c      	ldr	r4, [r3, #96]	; 0x60
    cal_var += ADC_CLM4_REG(adcmap);
    2f90:	6dd8      	ldr	r0, [r3, #92]	; 0x5c
    cal_var += ADC_CLMS_REG(adcmap);
    2f92:	6d99      	ldr	r1, [r3, #88]	; 0x58

    // Calculate minus-side calibration

    cal_var = 0x00;
    cal_var = ADC_CLM0_REG(adcmap);
    cal_var += ADC_CLM1_REG(adcmap);
    2f94:	fa16 f287 	uxtah	r2, r6, r7
    cal_var += ADC_CLM2_REG(adcmap);
    2f98:	fa15 f782 	uxtah	r7, r5, r2
    cal_var += ADC_CLM3_REG(adcmap);
    2f9c:	fa14 f687 	uxtah	r6, r4, r7
    cal_var += ADC_CLM4_REG(adcmap);
    2fa0:	fa10 f586 	uxtah	r5, r0, r6
    cal_var += ADC_CLMS_REG(adcmap);
    2fa4:	fa11 f485 	uxtah	r4, r1, r5
    cal_var = cal_var / 2;
    2fa8:	f3c4 004e 	ubfx	r0, r4, #1, #15
    cal_var |= 0x8000;  // Set MSB
    ADC_MG_REG(adcmap) = ADC_MG_MG(cal_var);
    2fac:	f440 4100 	orr.w	r1, r0, #32768	; 0x8000
    2fb0:	6319      	str	r1, [r3, #48]	; 0x30
    ADC_SC3_REG(adcmap) &= ~ADC_SC3_CAL_MASK;   /* Clear CAL bit */
    2fb2:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    2fb4:	f022 0780 	bic.w	r7, r2, #128	; 0x80
    2fb8:	625f      	str	r7, [r3, #36]	; 0x24
(
    ADC_MemMapPtr   adcmap,
    tADC_ConfigPtr  ADC_CfgPtr
)
{
    ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
    2fba:	f44f 4330 	mov.w	r3, #45056	; 0xb000
    2fbe:	f2c4 0303 	movt	r3, #16387	; 0x4003
    ADC_SC2_REG(adcmap) = ADC_CfgPtr->STATUS2;
    ADC_SC3_REG(adcmap) = ADC_CfgPtr->STATUS3;

    // ADC_PGA_REG(adcmap)  = ADC_CfgPtr->PGA;  //not one on P0

    ADC_SC1_REG(adcmap, A) = ADC_CfgPtr->STATUS1A;
    2fc2:	221f      	movs	r2, #31
(
    ADC_MemMapPtr   adcmap,
    tADC_ConfigPtr  ADC_CfgPtr
)
{
    ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
    2fc4:	2754      	movs	r7, #84	; 0x54
    ADC_CFG2_REG(adcmap) = ADC_CfgPtr->CONFIG2;
    2fc6:	2604      	movs	r6, #4
    ADC_CV1_REG(adcmap) = ADC_CfgPtr->COMPARE1;
    2fc8:	f241 2534 	movw	r5, #4660	; 0x1234
    ADC_CV2_REG(adcmap) = ADC_CfgPtr->COMPARE2;
    2fcc:	f245 6478 	movw	r4, #22136	; 0x5678
    ADC_SC2_REG(adcmap) = ADC_CfgPtr->STATUS2;
    2fd0:	2018      	movs	r0, #24
    ADC_SC3_REG(adcmap) = ADC_CfgPtr->STATUS3;
    2fd2:	2106      	movs	r1, #6
(
    ADC_MemMapPtr   adcmap,
    tADC_ConfigPtr  ADC_CfgPtr
)
{
    ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
    2fd4:	609f      	str	r7, [r3, #8]
    ADC_CFG2_REG(adcmap) = ADC_CfgPtr->CONFIG2;
    2fd6:	60de      	str	r6, [r3, #12]
    ADC_CV1_REG(adcmap) = ADC_CfgPtr->COMPARE1;
    2fd8:	619d      	str	r5, [r3, #24]
    ADC_CV2_REG(adcmap) = ADC_CfgPtr->COMPARE2;
    2fda:	61dc      	str	r4, [r3, #28]
    ADC_SC2_REG(adcmap) = ADC_CfgPtr->STATUS2;
    2fdc:	6218      	str	r0, [r3, #32]
    ADC_SC3_REG(adcmap) = ADC_CfgPtr->STATUS3;
    2fde:	6259      	str	r1, [r3, #36]	; 0x24

    // ADC_PGA_REG(adcmap)  = ADC_CfgPtr->PGA;  //not one on P0

    ADC_SC1_REG(adcmap, A) = ADC_CfgPtr->STATUS1A;
    2fe0:	601a      	str	r2, [r3, #0]
    ADC_SC1_REG(adcmap, B) = ADC_CfgPtr->STATUS1B;
    2fe2:	605a      	str	r2, [r3, #4]
(
    ADC_MemMapPtr   adcmap,
    tADC_ConfigPtr  ADC_CfgPtr
)
{
    ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
    2fe4:	609f      	str	r7, [r3, #8]
    ADC_CFG2_REG(adcmap) = ADC_CfgPtr->CONFIG2;
    2fe6:	60de      	str	r6, [r3, #12]
    ADC_CV1_REG(adcmap) = ADC_CfgPtr->COMPARE1;
    2fe8:	619d      	str	r5, [r3, #24]
    ADC_CV2_REG(adcmap) = ADC_CfgPtr->COMPARE2;
    2fea:	61dc      	str	r4, [r3, #28]
    ADC_SC2_REG(adcmap) = ADC_CfgPtr->STATUS2;
    2fec:	6218      	str	r0, [r3, #32]
    ADC_SC3_REG(adcmap) = ADC_CfgPtr->STATUS3;
    2fee:	6259      	str	r1, [r3, #36]	; 0x24

    // ADC_PGA_REG(adcmap)  = ADC_CfgPtr->PGA;  //not one on P0

    ADC_SC1_REG(adcmap, A) = ADC_CfgPtr->STATUS1A;
    2ff0:	601a      	str	r2, [r3, #0]
    ADC_SC1_REG(adcmap, B) = ADC_CfgPtr->STATUS1B;
    2ff2:	605a      	str	r2, [r3, #4]
	// *****************************************************************************

	// use interrupts, single ended mode, and real channel numbers now:
	
	 ADC_Config_Alt(ADC0_BASE_PTR, &Master_Adc_Config);  // config ADC0
}
    2ff4:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
    2ff8:	4770      	bx	lr
    2ffa:	bf00      	nop
    2ffc:	1fffea3c 	.word	0x1fffea3c

00003000 <ReadADC0_SingleEnded>:
void StartADC0_SingleEnded(uint8_t Channel,uint8_t MuxSide)
{
	if(MuxSide == 0)
	{
		//Select The a side of the MUX
		ADC0_CFG1 &= ~(ADC_CFG2_MUXSEL_MASK);
    3000:	f44f 4330 	mov.w	r3, #45056	; 0xb000
    3004:	f2c4 0303 	movt	r3, #16387	; 0x4003
    3008:	689a      	ldr	r2, [r3, #8]



void StartADC0_SingleEnded(uint8_t Channel,uint8_t MuxSide)
{
	if(MuxSide == 0)
    300a:	b991      	cbnz	r1, 3032 <ReadADC0_SingleEnded+0x32>
	{
		//Select The a side of the MUX
		ADC0_CFG1 &= ~(ADC_CFG2_MUXSEL_MASK);
    300c:	f022 0210 	bic.w	r2, r2, #16
    3010:	609a      	str	r2, [r3, #8]
	{
		//Select The b side of the MUX
		ADC0_CFG1 |= (ADC_CFG2_MUXSEL_MASK);
	}
	
	ADC0_SC1A  = Channel;
    3012:	f44f 4330 	mov.w	r3, #45056	; 0xb000
    3016:	f2c4 0303 	movt	r3, #16387	; 0x4003

uint16_t ReadADC0_SingleEnded(uint8_t Channel,uint8_t MuxSide)
{
	StartADC0_SingleEnded(Channel,MuxSide);
	
	while((ADC0_SC1A & ADC_SC1_COCO_MASK) == 0)
    301a:	4619      	mov	r1, r3
	{
		//Select The b side of the MUX
		ADC0_CFG1 |= (ADC_CFG2_MUXSEL_MASK);
	}
	
	ADC0_SC1A  = Channel;
    301c:	6018      	str	r0, [r3, #0]

uint16_t ReadADC0_SingleEnded(uint8_t Channel,uint8_t MuxSide)
{
	StartADC0_SingleEnded(Channel,MuxSide);
	
	while((ADC0_SC1A & ADC_SC1_COCO_MASK) == 0)
    301e:	6808      	ldr	r0, [r1, #0]
    3020:	f44f 4330 	mov.w	r3, #45056	; 0xb000
    3024:	0602      	lsls	r2, r0, #24
    3026:	f2c4 0303 	movt	r3, #16387	; 0x4003
    302a:	d5f8      	bpl.n	301e <ReadADC0_SingleEnded+0x1e>
	{
		//Wait For Conversion Complete
	}
	
	return ADC0_RA;
    302c:	691a      	ldr	r2, [r3, #16]
	
}
    302e:	b290      	uxth	r0, r2
    3030:	4770      	bx	lr
		ADC0_CFG1 &= ~(ADC_CFG2_MUXSEL_MASK);
	}
	else
	{
		//Select The b side of the MUX
		ADC0_CFG1 |= (ADC_CFG2_MUXSEL_MASK);
    3032:	f042 0110 	orr.w	r1, r2, #16
    3036:	6099      	str	r1, [r3, #8]
    3038:	e7eb      	b.n	3012 <ReadADC0_SingleEnded+0x12>
    303a:	bf00      	nop

0000303c <InitIO>:
#include "IO.h"
#include "../DSP/AudioIF.h"
#include "adc16/adc16.h"

void InitIO()
{
    303c:	b508      	push	{r3, lr}
 
    //enable Clocks to All the Ports
        SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK |
    303e:	f248 0320 	movw	r3, #32800	; 0x8020
    3042:	f2c4 0304 	movt	r3, #16388	; 0x4004
    3046:	699a      	ldr	r2, [r3, #24]
    3048:	f442 5078 	orr.w	r0, r2, #15872	; 0x3e00
    304c:	6198      	str	r0, [r3, #24]
    				 SIM_SCGC5_PORTD_MASK |
    				 SIM_SCGC5_PORTE_MASK;
        
 
        
     InitADC_12Bit();
    304e:	f7ff ff3b 	bl	2ec8 <InitADC_12Bit>
        	
     //This sets the SAI unit for 32MHz, 256x oversampling on the ADC/ Dacs
     InitAudioIO(50000000, 24000, 256);
    3052:	f24f 0080 	movw	r0, #61568	; 0xf080
    3056:	f645 51c0 	movw	r1, #24000	; 0x5dc0
    305a:	f44f 7280 	mov.w	r2, #256	; 0x100
    305e:	f2c0 20fa 	movt	r0, #762	; 0x2fa
    3062:	f7ff fdc1 	bl	2be8 <InitAudioIO>
         
     
     PORTC_PCR(0) = PORT_PCR_MUX(1);
    3066:	f44f 4330 	mov.w	r3, #45056	; 0xb000
    306a:	f2c4 0304 	movt	r3, #16388	; 0x4004
     PORTC_PCR(4) = PORT_PCR_MUX(1);
     PORTC_PCR(9) = PORT_PCR_MUX(1);
     
     IO_DELTA_IS_OUTPUT;
    306e:	f24f 0280 	movw	r2, #61568	; 0xf080
        	
     //This sets the SAI unit for 32MHz, 256x oversampling on the ADC/ Dacs
     InitAudioIO(50000000, 24000, 256);
         
     
     PORTC_PCR(0) = PORT_PCR_MUX(1);
    3072:	f44f 7180 	mov.w	r1, #256	; 0x100
     PORTC_PCR(4) = PORT_PCR_MUX(1);
     PORTC_PCR(9) = PORT_PCR_MUX(1);
     
     IO_DELTA_IS_OUTPUT;
    3076:	f2c4 020f 	movt	r2, #16399	; 0x400f
        	
     //This sets the SAI unit for 32MHz, 256x oversampling on the ADC/ Dacs
     InitAudioIO(50000000, 24000, 256);
         
     
     PORTC_PCR(0) = PORT_PCR_MUX(1);
    307a:	6019      	str	r1, [r3, #0]
     PORTC_PCR(4) = PORT_PCR_MUX(1);
    307c:	6119      	str	r1, [r3, #16]
     PORTC_PCR(9) = PORT_PCR_MUX(1);
    307e:	6259      	str	r1, [r3, #36]	; 0x24
     
     IO_DELTA_IS_OUTPUT;
    3080:	6950      	ldr	r0, [r2, #20]
    3082:	f040 0310 	orr.w	r3, r0, #16
    3086:	6153      	str	r3, [r2, #20]
    3088:	bd08      	pop	{r3, pc}
    308a:	bf00      	nop

0000308c <SetPotLimits>:
float PotMax[3] = {1,1,1};


//THis function is used to set the maximum/minimum limits that will be returned by ReadPOT
void SetPotLimits(uint8_t Channel,float Min, float Max)
{
    308c:	2802      	cmp	r0, #2
    308e:	bf88      	it	hi
    3090:	2000      	movhi	r0, #0
	if(Channel>2)
	{
		Channel = 0;
	}
	
	PotMin[Channel] = Min;
    3092:	4b03      	ldr	r3, [pc, #12]	; (30a0 <SetPotLimits+0x14>)
    3094:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
	PotMax[Channel] = Max;
    3098:	4902      	ldr	r1, [pc, #8]	; (30a4 <SetPotLimits+0x18>)
    309a:	f841 2020 	str.w	r2, [r1, r0, lsl #2]
    309e:	4770      	bx	lr
    30a0:	1fffe03c 	.word	0x1fffe03c
    30a4:	1fffe004 	.word	0x1fffe004

000030a8 <ReadPOT>:
				 
				break;
		
			case POT_BETA:
		    	
				 Pot_Value =  (float)ReadADC0_SingleEnded(ADC0_SE23)	/  4095.0; //beta
    30a8:	2100      	movs	r1, #0
//Returns potentiometer setting as a float between the values set by SetPotLimits(...)
float ReadPOT(uint8_t Channel)
{
	float Pot_Value;
	
		switch (Channel)
    30aa:	2801      	cmp	r0, #1
}


//Returns potentiometer setting as a float between the values set by SetPotLimits(...)
float ReadPOT(uint8_t Channel)
{
    30ac:	b570      	push	{r4, r5, r6, lr}
    30ae:	4604      	mov	r4, r0
	float Pot_Value;
	
		switch (Channel)
    30b0:	d01e      	beq.n	30f0 <ReadPOT+0x48>
    30b2:	2802      	cmp	r0, #2
    30b4:	d01e      	beq.n	30f4 <ReadPOT+0x4c>
		{
			default:
			case POT_ALPHA:
				
				 Pot_Value =  (float)ReadADC0_SingleEnded(ADC0_SE13) /  4095.0; //Alpha
    30b6:	200d      	movs	r0, #13
				
				break;
						
			case POT_GAMMA:
				
				 Pot_Value =  (float)ReadADC0_SingleEnded(ADC0_SE12)	/  4095.0; //Gamma
    30b8:	f7ff ffa2 	bl	3000 <ReadADC0_SingleEnded>
    30bc:	f7fe f924 	bl	1308 <__aeabi_i2f>
    30c0:	f44f 4170 	mov.w	r1, #61440	; 0xf000
    30c4:	f2c4 517f 	movt	r1, #17791	; 0x457f
    30c8:	f7fe fa26 	bl	1518 <__aeabi_fdiv>
				break;
		}
	
		
		//Rescale to Range
		Pot_Value = (Pot_Value * (PotMax[Channel] - PotMin[Channel])) + PotMin[Channel];
    30cc:	4b0a      	ldr	r3, [pc, #40]	; (30f8 <ReadPOT+0x50>)
				
				break;
						
			case POT_GAMMA:
				
				 Pot_Value =  (float)ReadADC0_SingleEnded(ADC0_SE12)	/  4095.0; //Gamma
    30ce:	4606      	mov	r6, r0
				break;
		}
	
		
		//Rescale to Range
		Pot_Value = (Pot_Value * (PotMax[Channel] - PotMin[Channel])) + PotMin[Channel];
    30d0:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
    30d4:	4809      	ldr	r0, [pc, #36]	; (30fc <ReadPOT+0x54>)
    30d6:	4629      	mov	r1, r5
    30d8:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
    30dc:	f7fe f85e 	bl	119c <__aeabi_fsub>
    30e0:	4631      	mov	r1, r6
    30e2:	f7fe f965 	bl	13b0 <__aeabi_fmul>
    30e6:	4601      	mov	r1, r0
    30e8:	4628      	mov	r0, r5
    30ea:	f7fe f859 	bl	11a0 <__addsf3>
		
		return Pot_Value;
}
    30ee:	bd70      	pop	{r4, r5, r6, pc}
				 
				break;
		
			case POT_BETA:
		    	
				 Pot_Value =  (float)ReadADC0_SingleEnded(ADC0_SE23)	/  4095.0; //beta
    30f0:	2017      	movs	r0, #23
    30f2:	e7e1      	b.n	30b8 <ReadPOT+0x10>
				
				break;
						
			case POT_GAMMA:
				
				 Pot_Value =  (float)ReadADC0_SingleEnded(ADC0_SE12)	/  4095.0; //Gamma
    30f4:	200c      	movs	r0, #12
    30f6:	e7df      	b.n	30b8 <ReadPOT+0x10>
    30f8:	1fffe03c 	.word	0x1fffe03c
    30fc:	1fffe004 	.word	0x1fffe004

00003100 <pll_init>:
    unsigned char   erefs_val,
    signed char     prdiv_val,
    signed char     vdiv_val,
    unsigned char   mcgout_select
)
{
    3100:	b4f0      	push	{r4, r5, r6, r7}

    // check if in FEI mode

    if
    (
        !((((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) == 0x0)    // check CLKS mux has selcted FLL output
    3102:	f44f 4480 	mov.w	r4, #16384	; 0x4000
    3106:	f2c4 0406 	movt	r4, #16390	; 0x4006
    unsigned char   erefs_val,
    signed char     prdiv_val,
    signed char     vdiv_val,
    unsigned char   mcgout_select
)
{
    310a:	f99d 6010 	ldrsb.w	r6, [sp, #16]

    // check if in FEI mode

    if
    (
        !((((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) == 0x0)    // check CLKS mux has selcted FLL output
    310e:	79a5      	ldrb	r5, [r4, #6]
    /*~~~~~~~~~~~~~~~~~~~~~~~~*/

    // check if in FEI mode

    if
    (
    3110:	f015 0f0c 	tst.w	r5, #12
    3114:	d111      	bne.n	313a <pll_init+0x3a>
        !((((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) == 0x0)    // check CLKS mux has selcted FLL output
        &&  (MCG_S & MCG_S_IREFST_MASK) // check FLL ref is internal ref clk
    3116:	79a5      	ldrb	r5, [r4, #6]
    3118:	f005 0510 	and.w	r5, r5, #16
    311c:	b2ed      	uxtb	r5, r5
    311e:	b165      	cbz	r5, 313a <pll_init+0x3a>
        &&  (!(MCG_S & MCG_S_PLLST_MASK))
    3120:	79a4      	ldrb	r4, [r4, #6]

    // check if in FEI mode

    if
    (
        !((((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) == 0x0)    // check CLKS mux has selcted FLL output
    3122:	f004 0420 	and.w	r4, r4, #32
    3126:	b2e4      	uxtb	r4, r4
    3128:	b93c      	cbnz	r4, 313a <pll_init+0x3a>
        return 0x1;         // return error code
    }

    // check external frequency is less than the maximum frequency

    if(crystal_val > 50000000)
    312a:	f24f 0480 	movw	r4, #61568	; 0xf080
    312e:	f2c0 24fa 	movt	r4, #762	; 0x2fa
    3132:	42a0      	cmp	r0, r4
    3134:	dd04      	ble.n	3140 <pll_init+0x40>
    {
        return 0x21;
    3136:	2021      	movs	r0, #33	; 0x21
    3138:	e000      	b.n	313c <pll_init+0x3c>
        &&  (MCG_S & MCG_S_IREFST_MASK) // check FLL ref is internal ref clk
        &&  (!(MCG_S & MCG_S_PLLST_MASK))
        )
    )                       // check PLLS mux has selected FLL
    {
        return 0x1;         // return error code
    313a:	2001      	movs	r0, #1
    if(((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x3) return 0x1B;   // check CLKST is set correctly and return with error if not

    // Now in PEE

    return((crystal_val / prdiv) * vdiv);   //MCGOUT equals PLL output frequency
}   // pll_init
    313c:	bcf0      	pop	{r4, r5, r6, r7}
    313e:	4770      	bx	lr
        return 0x21;
    }

    // check crystal frequency is within spec. if crystal osc is being used as PLL ref

    if(erefs_val)
    3140:	b15a      	cbz	r2, 315a <pll_init+0x5a>
    {
        if((crystal_val < 3000000) || (crystal_val > 32000000))
    3142:	f5a0 1537 	sub.w	r5, r0, #2998272	; 0x2dc000
    3146:	f248 1440 	movw	r4, #33088	; 0x8140
    314a:	f5a5 65d8 	sub.w	r5, r5, #1728	; 0x6c0
    314e:	f2c0 14ba 	movt	r4, #442	; 0x1ba
    3152:	42a5      	cmp	r5, r4
    3154:	d901      	bls.n	315a <pll_init+0x5a>
        {
            return 0x22;    // return 1 if one of the available crystal options is not available
    3156:	2022      	movs	r0, #34	; 0x22
    3158:	e7f0      	b.n	313c <pll_init+0x3c>
        hgo_val = 1;        // force hgo_val to 1 if > 0
    }

    // Check PLL divider settings are within spec.

    if((prdiv_val < 1) || (prdiv_val > 25))
    315a:	1e5c      	subs	r4, r3, #1
    315c:	b2e4      	uxtb	r4, r4
    315e:	2c18      	cmp	r4, #24
    3160:	d901      	bls.n	3166 <pll_init+0x66>
    {
        return 0x41;
    3162:	2041      	movs	r0, #65	; 0x41
    3164:	e7ea      	b.n	313c <pll_init+0x3c>
    }

    if((vdiv_val < 24) || (vdiv_val > 50))
    3166:	f1a6 0518 	sub.w	r5, r6, #24
    316a:	b2ed      	uxtb	r5, r5
    316c:	2d1a      	cmp	r5, #26
    316e:	d901      	bls.n	3174 <pll_init+0x74>
    {
        return 0x42;
    3170:	2042      	movs	r0, #66	; 0x42
    3172:	e7e3      	b.n	313c <pll_init+0x3c>
    }

    // Check PLL reference clock frequency is within spec.

    ref_freq = crystal_val / prdiv_val;
    3174:	fb90 f3f3 	sdiv	r3, r0, r3

    if((ref_freq < 2000000) || (ref_freq > 4000000))
    3178:	f5a3 1cf4 	sub.w	ip, r3, #1998848	; 0x1e8000
    317c:	f248 4780 	movw	r7, #33920	; 0x8480
    3180:	f5ac 6c90 	sub.w	ip, ip, #1152	; 0x480
    3184:	f2c0 071e 	movt	r7, #30
    3188:	45bc      	cmp	ip, r7
    318a:	d901      	bls.n	3190 <pll_init+0x90>
    {
        return 0x43;
    318c:	2043      	movs	r0, #67	; 0x43
    318e:	e7d5      	b.n	313c <pll_init+0x3c>
    }

    // Check PLL output frequency is within spec.

    pll_freq = (crystal_val / prdiv_val) * vdiv_val;
    3190:	fb06 f603 	mul.w	r6, r6, r3

    if((pll_freq < 48000000) || (pll_freq > 100000000))
    3194:	f1a6 7637 	sub.w	r6, r6, #47972352	; 0x2dc0000
    3198:	f44f 43ea 	mov.w	r3, #29952	; 0x7500
    319c:	f5a6 46d8 	sub.w	r6, r6, #27648	; 0x6c00
    31a0:	f2c0 3319 	movt	r3, #793	; 0x319
    31a4:	429e      	cmp	r6, r3
    31a6:	d901      	bls.n	31ac <pll_init+0xac>
    {
        return 0x45;
    31a8:	2045      	movs	r0, #69	; 0x45
    31aa:	e7c7      	b.n	313c <pll_init+0x3c>

    // configure the MCG_C2 register
    // the RANGE value is determined by the external frequency. Since the RANGE parameter affects the FRDIV divide value
    // it still needs to be set correctly even if the oscillator is not being used

    temp_reg = MCG_C2;
    31ac:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    31b0:	f2c4 0306 	movt	r3, #16390	; 0x4006
    temp_reg &= ~(MCG_C2_RANGE0_MASK | MCG_C2_HGO0_MASK | MCG_C2_EREFS0_MASK);  // clear fields before writing new values
    if(crystal_val <= 8000000)
    31b4:	f44f 5790 	mov.w	r7, #4608	; 0x1200

    // make sure HGO will never be greater than 1. Could return an error instead if desired.

    if(hgo_val > 0)
    {
        hgo_val = 1;        // force hgo_val to 1 if > 0
    31b8:	3100      	adds	r1, #0

    // configure the MCG_C2 register
    // the RANGE value is determined by the external frequency. Since the RANGE parameter affects the FRDIV divide value
    // it still needs to be set correctly even if the oscillator is not being used

    temp_reg = MCG_C2;
    31ba:	785e      	ldrb	r6, [r3, #1]
    temp_reg &= ~(MCG_C2_RANGE0_MASK | MCG_C2_HGO0_MASK | MCG_C2_EREFS0_MASK);  // clear fields before writing new values
    if(crystal_val <= 8000000)
    31bc:	f2c0 077a 	movt	r7, #122	; 0x7a

    // make sure HGO will never be greater than 1. Could return an error instead if desired.

    if(hgo_val > 0)
    {
        hgo_val = 1;        // force hgo_val to 1 if > 0
    31c0:	bf18      	it	ne
    31c2:	2101      	movne	r1, #1
    // the RANGE value is determined by the external frequency. Since the RANGE parameter affects the FRDIV divide value
    // it still needs to be set correctly even if the oscillator is not being used

    temp_reg = MCG_C2;
    temp_reg &= ~(MCG_C2_RANGE0_MASK | MCG_C2_HGO0_MASK | MCG_C2_EREFS0_MASK);  // clear fields before writing new values
    if(crystal_val <= 8000000)
    31c4:	42b8      	cmp	r0, r7
    // configure the MCG_C2 register
    // the RANGE value is determined by the external frequency. Since the RANGE parameter affects the FRDIV divide value
    // it still needs to be set correctly even if the oscillator is not being used

    temp_reg = MCG_C2;
    temp_reg &= ~(MCG_C2_RANGE0_MASK | MCG_C2_HGO0_MASK | MCG_C2_EREFS0_MASK);  // clear fields before writing new values
    31c6:	f006 06c3 	and.w	r6, r6, #195	; 0xc3
    if(crystal_val <= 8000000)
    31ca:	dc68      	bgt.n	329e <pll_init+0x19e>
    {
        temp_reg |= (MCG_C2_RANGE0(1) | (hgo_val << MCG_C2_HGO0_SHIFT) | (erefs_val << MCG_C2_EREFS0_SHIFT));
    31cc:	f046 0710 	orr.w	r7, r6, #16
    31d0:	ea47 0682 	orr.w	r6, r7, r2, lsl #2
    31d4:	b2f7      	uxtb	r7, r6
    MCG_C2 = temp_reg;

    // determine FRDIV based on reference clock frequency
    // since the external frequency has already been checked only the maximum frequency for each FRDIV value needs to be compared here.

    if(crystal_val <= 1250000)
    31d6:	f241 26d0 	movw	r6, #4816	; 0x12d0

    temp_reg = MCG_C2;
    temp_reg &= ~(MCG_C2_RANGE0_MASK | MCG_C2_HGO0_MASK | MCG_C2_EREFS0_MASK);  // clear fields before writing new values
    if(crystal_val <= 8000000)
    {
        temp_reg |= (MCG_C2_RANGE0(1) | (hgo_val << MCG_C2_HGO0_SHIFT) | (erefs_val << MCG_C2_EREFS0_SHIFT));
    31da:	ea47 01c1 	orr.w	r1, r7, r1, lsl #3
    MCG_C2 = temp_reg;

    // determine FRDIV based on reference clock frequency
    // since the external frequency has already been checked only the maximum frequency for each FRDIV value needs to be compared here.

    if(crystal_val <= 1250000)
    31de:	f2c0 0613 	movt	r6, #19
    else
    {
        temp_reg |= (MCG_C2_RANGE0(2) | (hgo_val << MCG_C2_HGO0_SHIFT) | (erefs_val << MCG_C2_EREFS0_SHIFT));
    }

    MCG_C2 = temp_reg;
    31e2:	7059      	strb	r1, [r3, #1]
    // determine FRDIV based on reference clock frequency
    // since the external frequency has already been checked only the maximum frequency for each FRDIV value needs to be compared here.

    if(crystal_val <= 1250000)
    {
        frdiv_val = 0;
    31e4:	2300      	movs	r3, #0
    MCG_C2 = temp_reg;

    // determine FRDIV based on reference clock frequency
    // since the external frequency has already been checked only the maximum frequency for each FRDIV value needs to be compared here.

    if(crystal_val <= 1250000)
    31e6:	42b0      	cmp	r0, r6
    31e8:	f300 8097 	bgt.w	331a <pll_init+0x21a>

    // Select external oscillator and Reference Divider and clear IREFS to start ext osc
    // If IRCLK is required it must be enabled outside of this driver, existing state will be maintained
    // CLKS=2, FRDIV=frdiv_val, IREFS=0, IRCLKEN=0, IREFSTEN=0

    temp_reg = MCG_C1;
    31ec:	f44f 4180 	mov.w	r1, #16384	; 0x4000
    31f0:	f2c4 0106 	movt	r1, #16390	; 0x4006
    31f4:	780e      	ldrb	r6, [r1, #0]
    temp_reg &= ~(MCG_C1_CLKS_MASK | MCG_C1_FRDIV_MASK | MCG_C1_IREFS_MASK);    // Clear values in these fields
    31f6:	f006 0603 	and.w	r6, r6, #3
    temp_reg |= (MCG_C1_CLKS(2) | MCG_C1_FRDIV(frdiv_val));                     // Set the required CLKS and FRDIV values
    31fa:	f046 0680 	orr.w	r6, r6, #128	; 0x80
    31fe:	ea46 03c3 	orr.w	r3, r6, r3, lsl #3
    MCG_C1 = temp_reg;
    3202:	700b      	strb	r3, [r1, #0]

    // if the external oscillator is used need to wait for OSCINIT to set

    if(erefs_val)
    3204:	b1f2      	cbz	r2, 3244 <pll_init+0x144>
    3206:	f644 6320 	movw	r3, #20000	; 0x4e20
    {
        for(i = 0; i < 20000; i++)
        {
            if(MCG_S & MCG_S_OSCINIT0_MASK) break;                          // jump out early if OSCINIT sets before loop finishes
    320a:	460a      	mov	r2, r1
    320c:	e008      	b.n	3220 <pll_init+0x120>
    320e:	7991      	ldrb	r1, [r2, #6]
    3210:	b29b      	uxth	r3, r3
    3212:	f001 0102 	and.w	r1, r1, #2
    3216:	3b01      	subs	r3, #1
    3218:	b2c9      	uxtb	r1, r1
    321a:	b29b      	uxth	r3, r3
    321c:	b939      	cbnz	r1, 322e <pll_init+0x12e>

    // if the external oscillator is used need to wait for OSCINIT to set

    if(erefs_val)
    {
        for(i = 0; i < 20000; i++)
    321e:	b133      	cbz	r3, 322e <pll_init+0x12e>
        {
            if(MCG_S & MCG_S_OSCINIT0_MASK) break;                          // jump out early if OSCINIT sets before loop finishes
    3220:	7991      	ldrb	r1, [r2, #6]
    3222:	f001 0102 	and.w	r1, r1, #2
    3226:	b2c9      	uxtb	r1, r1
    3228:	3b01      	subs	r3, #1
    322a:	2900      	cmp	r1, #0
    322c:	d0ef      	beq.n	320e <pll_init+0x10e>
        }

        if(!(MCG_S & MCG_S_OSCINIT0_MASK)) return 0x23;                     // check bit is really set and return with error if not set
    322e:	f44f 4280 	mov.w	r2, #16384	; 0x4000
    3232:	f2c4 0206 	movt	r2, #16390	; 0x4006
    3236:	7991      	ldrb	r1, [r2, #6]
    3238:	f001 0302 	and.w	r3, r1, #2
    323c:	b2da      	uxtb	r2, r3
    323e:	b90a      	cbnz	r2, 3244 <pll_init+0x144>
    3240:	2023      	movs	r0, #35	; 0x23
    3242:	e77b      	b.n	313c <pll_init+0x3c>

    // wait for Reference clock Status bit to clear

    for(i = 0; i < 2000; i++)
    {
        if(!(MCG_S & MCG_S_IREFST_MASK)) break;                             // jump out early if IREFST clears before loop finishes
    3244:	f44f 4280 	mov.w	r2, #16384	; 0x4000
    3248:	f2c4 0206 	movt	r2, #16390	; 0x4006
    324c:	7991      	ldrb	r1, [r2, #6]
    324e:	f001 0310 	and.w	r3, r1, #16
    3252:	b2d9      	uxtb	r1, r3
    3254:	b1c1      	cbz	r1, 3288 <pll_init+0x188>
    3256:	7993      	ldrb	r3, [r2, #6]
    3258:	f003 0110 	and.w	r1, r3, #16
    325c:	b2c9      	uxtb	r1, r1
    325e:	f240 73cf 	movw	r3, #1999	; 0x7cf
    3262:	b189      	cbz	r1, 3288 <pll_init+0x188>
    3264:	3b01      	subs	r3, #1
    3266:	e008      	b.n	327a <pll_init+0x17a>
    3268:	7991      	ldrb	r1, [r2, #6]
    326a:	b29b      	uxth	r3, r3
    326c:	f001 0110 	and.w	r1, r1, #16
    3270:	3b01      	subs	r3, #1
    3272:	b2c9      	uxtb	r1, r1
    3274:	b29b      	uxth	r3, r3
    3276:	b139      	cbz	r1, 3288 <pll_init+0x188>
        if(!(MCG_S & MCG_S_OSCINIT0_MASK)) return 0x23;                     // check bit is really set and return with error if not set
    }

    // wait for Reference clock Status bit to clear

    for(i = 0; i < 2000; i++)
    3278:	b133      	cbz	r3, 3288 <pll_init+0x188>
    {
        if(!(MCG_S & MCG_S_IREFST_MASK)) break;                             // jump out early if IREFST clears before loop finishes
    327a:	7991      	ldrb	r1, [r2, #6]
    327c:	f001 0110 	and.w	r1, r1, #16
    3280:	b2c9      	uxtb	r1, r1
    3282:	3b01      	subs	r3, #1
    3284:	2900      	cmp	r1, #0
    3286:	d1ef      	bne.n	3268 <pll_init+0x168>
    }

    if(MCG_S & MCG_S_IREFST_MASK) return 0x11;                              // check bit is really clear and return with error if not set
    3288:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    328c:	f2c4 0306 	movt	r3, #16390	; 0x4006
    3290:	799a      	ldrb	r2, [r3, #6]
    3292:	f002 0110 	and.w	r1, r2, #16
    3296:	b2ca      	uxtb	r2, r1
    3298:	b1f2      	cbz	r2, 32d8 <pll_init+0x1d8>
    329a:	2011      	movs	r0, #17
    329c:	e74e      	b.n	313c <pll_init+0x3c>
    {
        temp_reg |= (MCG_C2_RANGE0(1) | (hgo_val << MCG_C2_HGO0_SHIFT) | (erefs_val << MCG_C2_EREFS0_SHIFT));
    }
    else
    {
        temp_reg |= (MCG_C2_RANGE0(2) | (hgo_val << MCG_C2_HGO0_SHIFT) | (erefs_val << MCG_C2_EREFS0_SHIFT));
    329e:	f046 0620 	orr.w	r6, r6, #32
    32a2:	ea46 0682 	orr.w	r6, r6, r2, lsl #2
    32a6:	b2f6      	uxtb	r6, r6
    32a8:	ea46 01c1 	orr.w	r1, r6, r1, lsl #3
    }

    MCG_C2 = temp_reg;
    32ac:	7059      	strb	r1, [r3, #1]
    }
    else if(crystal_val <= 2500000)
    {
        frdiv_val = 1;
    }
    else if(crystal_val <= 5000000)
    32ae:	f644 3640 	movw	r6, #19264	; 0x4b40
    32b2:	f2c0 064c 	movt	r6, #76	; 0x4c
    32b6:	42b0      	cmp	r0, r6
    32b8:	dd2d      	ble.n	3316 <pll_init+0x216>
    {
        frdiv_val = 2;
    }
    else if(crystal_val <= 10000000)
    32ba:	f249 6180 	movw	r1, #38528	; 0x9680
    32be:	f2c0 0198 	movt	r1, #152	; 0x98
    32c2:	4288      	cmp	r0, r1
    32c4:	dd25      	ble.n	3312 <pll_init+0x212>
    {
        frdiv_val = 3;
    }
    else if(crystal_val <= 20000000)
    32c6:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
    32ca:	f2c0 1331 	movt	r3, #305	; 0x131
    {
        frdiv_val = 4;
    32ce:	4298      	cmp	r0, r3
    32d0:	bfcc      	ite	gt
    32d2:	2305      	movgt	r3, #5
    32d4:	2304      	movle	r3, #4
    32d6:	e789      	b.n	31ec <pll_init+0xec>
    for(i = 0; i < 2000; i++)
    {
        if(!(MCG_S & MCG_S_IREFST_MASK)) break;                             // jump out early if IREFST clears before loop finishes
    }

    if(MCG_S & MCG_S_IREFST_MASK) return 0x11;                              // check bit is really clear and return with error if not set
    32d8:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
    32dc:	e007      	b.n	32ee <pll_init+0x1ee>

    // Wait for clock status bits to show clock source is ext ref clk

    for(i = 0; i < 2000; i++)
    {
        if(((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) == 0x2) break; // jump out early if CLKST shows EXT CLK slected before loop finishes
    32de:	7999      	ldrb	r1, [r3, #6]
    32e0:	f3c1 0181 	ubfx	r1, r1, #2, #2
    32e4:	2902      	cmp	r1, #2
    32e6:	d009      	beq.n	32fc <pll_init+0x1fc>
    32e8:	3a01      	subs	r2, #1
    32ea:	b292      	uxth	r2, r2

    if(MCG_S & MCG_S_IREFST_MASK) return 0x11;                              // check bit is really clear and return with error if not set

    // Wait for clock status bits to show clock source is ext ref clk

    for(i = 0; i < 2000; i++)
    32ec:	b132      	cbz	r2, 32fc <pll_init+0x1fc>
    {
        if(((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) == 0x2) break; // jump out early if CLKST shows EXT CLK slected before loop finishes
    32ee:	7999      	ldrb	r1, [r3, #6]
    32f0:	f3c1 0181 	ubfx	r1, r1, #2, #2
    32f4:	3a01      	subs	r2, #1
    32f6:	2902      	cmp	r1, #2
    32f8:	b292      	uxth	r2, r2
    32fa:	d1f0      	bne.n	32de <pll_init+0x1de>
    }

    if(((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x2) return 0x1A;   // check EXT CLK is really selected and return with error if not
    32fc:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    3300:	f2c4 0306 	movt	r3, #16390	; 0x4006
    3304:	7999      	ldrb	r1, [r3, #6]
    3306:	f3c1 0281 	ubfx	r2, r1, #2, #2
    330a:	2a02      	cmp	r2, #2
    330c:	d00d      	beq.n	332a <pll_init+0x22a>
    330e:	201a      	movs	r0, #26
    3310:	e714      	b.n	313c <pll_init+0x3c>
    {
        frdiv_val = 2;
    }
    else if(crystal_val <= 10000000)
    {
        frdiv_val = 3;
    3312:	2303      	movs	r3, #3
    3314:	e76a      	b.n	31ec <pll_init+0xec>
    {
        frdiv_val = 1;
    }
    else if(crystal_val <= 5000000)
    {
        frdiv_val = 2;
    3316:	2302      	movs	r3, #2
    3318:	e768      	b.n	31ec <pll_init+0xec>

    if(crystal_val <= 1250000)
    {
        frdiv_val = 0;
    }
    else if(crystal_val <= 2500000)
    331a:	f242 53a0 	movw	r3, #9632	; 0x25a0
    331e:	f2c0 0326 	movt	r3, #38	; 0x26
    3322:	4298      	cmp	r0, r3
    3324:	dcc3      	bgt.n	32ae <pll_init+0x1ae>
    {
        frdiv_val = 1;
    3326:	2301      	movs	r3, #1
    3328:	e760      	b.n	31ec <pll_init+0xec>

    // Now in FBE
    // It is recommended that the clock monitor is enabled when using an external clock as the clock source/reference.
    // It is enabled here but can be removed if this is not required.

    MCG_C6 |= MCG_C6_CME0_MASK;
    332a:	7959      	ldrb	r1, [r3, #5]
    332c:	f041 0220 	orr.w	r2, r1, #32
    3330:	715a      	strb	r2, [r3, #5]

    // Configure PLL
    // Configure MCG_C5
    // If the PLL is to run in STOP mode then the PLLSTEN bit needs to be OR'ed in here or in user code.

    temp_reg = MCG_C5;
    3332:	7919      	ldrb	r1, [r3, #4]
    temp_reg &= ~MCG_C5_PRDIV0_MASK;
    3334:	f001 02e0 	and.w	r2, r1, #224	; 0xe0
    temp_reg |= MCG_C5_PRDIV0(prdiv_val - 1);   //set PLL ref divider
    3338:	4314      	orrs	r4, r2
    MCG_C5 = temp_reg;
    333a:	711c      	strb	r4, [r3, #4]

    // Configure MCG_C6
    // The PLLS bit is set to enable the PLL, MCGOUT still sourced from ext ref clk
    // The loss of lock interrupt can be enabled by seperately OR'ing in the LOLIE bit in MCG_C6

    temp_reg = MCG_C6;              // store present C6 value
    333c:	7959      	ldrb	r1, [r3, #5]
    temp_reg &= ~MCG_C6_VDIV0_MASK; // clear VDIV settings
    333e:	f001 02e0 	and.w	r2, r1, #224	; 0xe0
    temp_reg |= MCG_C6_PLLS_MASK | MCG_C6_VDIV0(vdiv_val - 24); // write new VDIV and enable PLL
    3342:	f042 0140 	orr.w	r1, r2, #64	; 0x40
    3346:	430d      	orrs	r5, r1
    MCG_C6 = temp_reg;                      // update MCG_C6
    3348:	715d      	strb	r5, [r3, #5]
    334a:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
    334e:	e000      	b.n	3352 <pll_init+0x252>

    // wait for PLLST status bit to set

    for(i = 0; i < 2000; i++)
    3350:	b13a      	cbz	r2, 3362 <pll_init+0x262>
    {
        if(MCG_S & MCG_S_PLLST_MASK) break; // jump out early if PLLST sets before loop finishes
    3352:	7999      	ldrb	r1, [r3, #6]
    3354:	f001 0120 	and.w	r1, r1, #32
    3358:	3a01      	subs	r2, #1
    335a:	b2c9      	uxtb	r1, r1
    335c:	b292      	uxth	r2, r2
    335e:	2900      	cmp	r1, #0
    3360:	d0f6      	beq.n	3350 <pll_init+0x250>
    }

    if(!(MCG_S & MCG_S_PLLST_MASK)) return 0x16;    // check bit is really set and return with error if not set
    3362:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    3366:	f2c4 0306 	movt	r3, #16390	; 0x4006
    336a:	7999      	ldrb	r1, [r3, #6]
    336c:	f001 0220 	and.w	r2, r1, #32
    3370:	b2d1      	uxtb	r1, r2
    3372:	b909      	cbnz	r1, 3378 <pll_init+0x278>
    3374:	2016      	movs	r0, #22
    3376:	e6e1      	b.n	313c <pll_init+0x3c>
    3378:	f44f 627a 	mov.w	r2, #4000	; 0xfa0
    337c:	e000      	b.n	3380 <pll_init+0x280>

    // Wait for LOCK bit to set

    for(i = 0; i < 4000; i++)
    337e:	b13a      	cbz	r2, 3390 <pll_init+0x290>
    {
        if(MCG_S & MCG_S_LOCK0_MASK) break;         // jump out early if LOCK sets before loop finishes
    3380:	7999      	ldrb	r1, [r3, #6]
    3382:	f001 0140 	and.w	r1, r1, #64	; 0x40
    3386:	3a01      	subs	r2, #1
    3388:	b2c9      	uxtb	r1, r1
    338a:	b292      	uxth	r2, r2
    338c:	2900      	cmp	r1, #0
    338e:	d0f6      	beq.n	337e <pll_init+0x27e>
    }

    if(!(MCG_S & MCG_S_LOCK0_MASK)) return 0x44;    // check bit is really set and return with error if not set
    3390:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    3394:	f2c4 0306 	movt	r3, #16390	; 0x4006
    3398:	7999      	ldrb	r1, [r3, #6]
    339a:	f001 0240 	and.w	r2, r1, #64	; 0x40
    339e:	b2d1      	uxtb	r1, r2
    33a0:	b909      	cbnz	r1, 33a6 <pll_init+0x2a6>
    33a2:	2044      	movs	r0, #68	; 0x44
    33a4:	e6ca      	b.n	313c <pll_init+0x3c>

    // Use actual PLL settings to calculate PLL frequency

    prdiv = ((MCG_C5 & MCG_C5_PRDIV0_MASK) + 1);
    33a6:	791c      	ldrb	r4, [r3, #4]
    vdiv = ((MCG_C6 & MCG_C6_VDIV0_MASK) + 24);
    33a8:	795d      	ldrb	r5, [r3, #5]

    // now in PBE

    MCG_C1 &= ~MCG_C1_CLKS_MASK;                    // clear CLKS to switch CLKS mux to select PLL as MCG_OUT
    33aa:	781a      	ldrb	r2, [r3, #0]
    if(!(MCG_S & MCG_S_LOCK0_MASK)) return 0x44;    // check bit is really set and return with error if not set

    // Use actual PLL settings to calculate PLL frequency

    prdiv = ((MCG_C5 & MCG_C5_PRDIV0_MASK) + 1);
    vdiv = ((MCG_C6 & MCG_C6_VDIV0_MASK) + 24);
    33ac:	f005 011f 	and.w	r1, r5, #31

    if(!(MCG_S & MCG_S_LOCK0_MASK)) return 0x44;    // check bit is really set and return with error if not set

    // Use actual PLL settings to calculate PLL frequency

    prdiv = ((MCG_C5 & MCG_C5_PRDIV0_MASK) + 1);
    33b0:	f004 041f 	and.w	r4, r4, #31
    vdiv = ((MCG_C6 & MCG_C6_VDIV0_MASK) + 24);

    // now in PBE

    MCG_C1 &= ~MCG_C1_CLKS_MASK;                    // clear CLKS to switch CLKS mux to select PLL as MCG_OUT
    33b4:	f002 053f 	and.w	r5, r2, #63	; 0x3f

    if(!(MCG_S & MCG_S_LOCK0_MASK)) return 0x44;    // check bit is really set and return with error if not set

    // Use actual PLL settings to calculate PLL frequency

    prdiv = ((MCG_C5 & MCG_C5_PRDIV0_MASK) + 1);
    33b8:	3401      	adds	r4, #1
    vdiv = ((MCG_C6 & MCG_C6_VDIV0_MASK) + 24);
    33ba:	3118      	adds	r1, #24

    // now in PBE

    MCG_C1 &= ~MCG_C1_CLKS_MASK;                    // clear CLKS to switch CLKS mux to select PLL as MCG_OUT
    33bc:	701d      	strb	r5, [r3, #0]
    33be:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0

    // Wait for clock status bits to update

    for(i = 0; i < 2000; i++)
    {
        if(((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) == 0x3) break;     // jump out early if CLKST = 3 before loop finishes
    33c2:	799d      	ldrb	r5, [r3, #6]
    33c4:	f3c5 0581 	ubfx	r5, r5, #2, #2
    33c8:	2d03      	cmp	r5, #3
    33ca:	d003      	beq.n	33d4 <pll_init+0x2d4>
    33cc:	3a01      	subs	r2, #1
    33ce:	b292      	uxth	r2, r2

    MCG_C1 &= ~MCG_C1_CLKS_MASK;                    // clear CLKS to switch CLKS mux to select PLL as MCG_OUT

    // Wait for clock status bits to update

    for(i = 0; i < 2000; i++)
    33d0:	2a00      	cmp	r2, #0
    33d2:	d1f6      	bne.n	33c2 <pll_init+0x2c2>
    {
        if(((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) == 0x3) break;     // jump out early if CLKST = 3 before loop finishes
    }

    if(((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x3) return 0x1B;   // check CLKST is set correctly and return with error if not
    33d4:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    33d8:	f2c4 0306 	movt	r3, #16390	; 0x4006
    33dc:	799a      	ldrb	r2, [r3, #6]
    33de:	f3c2 0381 	ubfx	r3, r2, #2, #2
    33e2:	2b03      	cmp	r3, #3
    33e4:	d001      	beq.n	33ea <pll_init+0x2ea>
    33e6:	201b      	movs	r0, #27
    33e8:	e6a8      	b.n	313c <pll_init+0x3c>

    // Now in PEE

    return((crystal_val / prdiv) * vdiv);   //MCGOUT equals PLL output frequency
    33ea:	fb90 f0f4 	sdiv	r0, r0, r4
    33ee:	fb01 f000 	mul.w	r0, r1, r0
    33f2:	e6a3      	b.n	313c <pll_init+0x3c>

000033f4 <sai_pinmux_init>:
(
    unsigned char   port,
    unsigned char   setting
)
{
    if(port == 0)
    33f4:	b910      	cbnz	r0, 33fc <sai_pinmux_init+0x8>
    {
        if(setting == 0)                        //using PORTC pins
    33f6:	b111      	cbz	r1, 33fe <sai_pinmux_init+0xa>
            PORTC_PCR(1) = PORT_PCR_MUX(6);     //PTC1(ALT6), I2S0_TXD0	-	J51 pin5 or 8
            PORTC_PCR(0) = PORT_PCR_MUX(6);     //PTC0(ALT6), I2S0_TXD1	-	J51 pin2
            PORTC_PCR(6) = PORT_PCR_MUX(6);     //PTC6(ALT6), I2S0_MCLK	-	J37 pin11
            PORTC_PCR(8) = PORT_PCR_MUX(4);     //PTC6(ALT6), I2S0_MCLK	-	J37 pin11
        }
        else if(setting == 1)                   //using PORTA pins
    33f8:	2901      	cmp	r1, #1
    33fa:	d013      	beq.n	3424 <sai_pinmux_init+0x30>
    33fc:	4770      	bx	lr
{
    if(port == 0)
    {
        if(setting == 0)                        //using PORTC pins
        {
            PORTC_PCR(3) = PORT_PCR_MUX(6);     //PTC3(ALT6), I2S0_TX_BCLK	-	J37 pin2
    33fe:	f44f 4030 	mov.w	r0, #45056	; 0xb000
    3402:	f2c4 0004 	movt	r0, #16388	; 0x4004
    3406:	f44f 63c0 	mov.w	r3, #1536	; 0x600
            PORTC_PCR(2) = PORT_PCR_MUX(6);     //PTC2(ALT6), I2S0_TX_FS	-	J51 pin11 or 14
            
            PORTC_PCR(9) = PORT_PCR_MUX(4);     //PTC9(ALT4), I2S0_RX_BCLK	-	J44 pin5
    340a:	f44f 6280 	mov.w	r2, #1024	; 0x400
{
    if(port == 0)
    {
        if(setting == 0)                        //using PORTC pins
        {
            PORTC_PCR(3) = PORT_PCR_MUX(6);     //PTC3(ALT6), I2S0_TX_BCLK	-	J37 pin2
    340e:	60c3      	str	r3, [r0, #12]
            PORTC_PCR(2) = PORT_PCR_MUX(6);     //PTC2(ALT6), I2S0_TX_FS	-	J51 pin11 or 14
    3410:	6083      	str	r3, [r0, #8]
            
            PORTC_PCR(9) = PORT_PCR_MUX(4);     //PTC9(ALT4), I2S0_RX_BCLK	-	J44 pin5
    3412:	6242      	str	r2, [r0, #36]	; 0x24
            PORTC_PCR(10) = PORT_PCR_MUX(4);    //PTC10(ALT4), I2S0_RX_FS	-	J44 pin8
    3414:	6282      	str	r2, [r0, #40]	; 0x28
            PORTC_PCR(5) = PORT_PCR_MUX(4);     //PTC5(ALT4), I2S0_RXD0	-	J37 pin8
    3416:	6142      	str	r2, [r0, #20]
            PORTC_PCR(11) = PORT_PCR_MUX(4);    //PTC11(ALT4), I2S0_RXD1	-	J44 pin11
    3418:	62c2      	str	r2, [r0, #44]	; 0x2c
            PORTC_PCR(1) = PORT_PCR_MUX(6);     //PTC1(ALT6), I2S0_TXD0	-	J51 pin5 or 8
    341a:	6043      	str	r3, [r0, #4]
            PORTC_PCR(0) = PORT_PCR_MUX(6);     //PTC0(ALT6), I2S0_TXD1	-	J51 pin2
    341c:	6003      	str	r3, [r0, #0]
            PORTC_PCR(6) = PORT_PCR_MUX(6);     //PTC6(ALT6), I2S0_MCLK	-	J37 pin11
    341e:	6183      	str	r3, [r0, #24]
            PORTC_PCR(8) = PORT_PCR_MUX(4);     //PTC6(ALT6), I2S0_MCLK	-	J37 pin11
    3420:	6202      	str	r2, [r0, #32]
    3422:	4770      	bx	lr
        }
        else if(setting == 1)                   //using PORTA pins
        {
            PORTA_PCR(5) = PORT_PCR_MUX(6);     //PTA5(ALT6), I2S0_TX_BCLK -	J35 pin8
    3424:	f44f 4010 	mov.w	r0, #36864	; 0x9000
            PORTA_PCR(13) = PORT_PCR_MUX(6);    //PTA13(ALT6), I2S0_TX_FS -		J35 pin14
            PORTC_PCR(6) = PORT_PCR_MUX(4);     //PTC6(ALT4), I2S0_RX_BCLK	-	J37 pin11
    3428:	f44f 4330 	mov.w	r3, #45056	; 0xb000
    342c:	f2c4 0304 	movt	r3, #16388	; 0x4004
            PORTC_PCR(6) = PORT_PCR_MUX(6);     //PTC6(ALT6), I2S0_MCLK	-	J37 pin11
            PORTC_PCR(8) = PORT_PCR_MUX(4);     //PTC6(ALT6), I2S0_MCLK	-	J37 pin11
        }
        else if(setting == 1)                   //using PORTA pins
        {
            PORTA_PCR(5) = PORT_PCR_MUX(6);     //PTA5(ALT6), I2S0_TX_BCLK -	J35 pin8
    3430:	f2c4 0004 	movt	r0, #16388	; 0x4004
            PORTA_PCR(13) = PORT_PCR_MUX(6);    //PTA13(ALT6), I2S0_TX_FS -		J35 pin14
            PORTC_PCR(6) = PORT_PCR_MUX(4);     //PTC6(ALT4), I2S0_RX_BCLK	-	J37 pin11
    3434:	f44f 6280 	mov.w	r2, #1024	; 0x400
            PORTC_PCR(6) = PORT_PCR_MUX(6);     //PTC6(ALT6), I2S0_MCLK	-	J37 pin11
            PORTC_PCR(8) = PORT_PCR_MUX(4);     //PTC6(ALT6), I2S0_MCLK	-	J37 pin11
        }
        else if(setting == 1)                   //using PORTA pins
        {
            PORTA_PCR(5) = PORT_PCR_MUX(6);     //PTA5(ALT6), I2S0_TX_BCLK -	J35 pin8
    3438:	f44f 61c0 	mov.w	r1, #1536	; 0x600
    343c:	6141      	str	r1, [r0, #20]
            PORTA_PCR(13) = PORT_PCR_MUX(6);    //PTA13(ALT6), I2S0_TX_FS -		J35 pin14
    343e:	6341      	str	r1, [r0, #52]	; 0x34
            PORTC_PCR(6) = PORT_PCR_MUX(4);     //PTC6(ALT4), I2S0_RX_BCLK	-	J37 pin11
    3440:	619a      	str	r2, [r3, #24]
            PORTC_PCR(7) = PORT_PCR_MUX(4);     //PTC7(ALT4), I2S0_RX_FS	-	J37 pin14
    3442:	61da      	str	r2, [r3, #28]
            PORTC_PCR(5) = PORT_PCR_MUX(4);     //PTC5(ALT4), I2S0_RXD0	-
    3444:	615a      	str	r2, [r3, #20]
            PORTC_PCR(11) = PORT_PCR_MUX(4);    //PTC11(ALT4), I2S0_RXD1 -
    3446:	62da      	str	r2, [r3, #44]	; 0x2c
            PORTA_PCR(12) = PORT_PCR_MUX(6);    //PTA12(ALT6), I2S0_TXD0	-	J35 pin11
    3448:	6301      	str	r1, [r0, #48]	; 0x30
            PORTC_PCR(0) = PORT_PCR_MUX(6);     //PTC0(ALT6), I2S0_TXD1 -
    344a:	6019      	str	r1, [r3, #0]
            PORTC_PCR(8) = PORT_PCR_MUX(4);     //PTC8(ALT4), I2S0_MCLK	-	J44 pin2
    344c:	621a      	str	r2, [r3, #32]
    344e:	4770      	bx	lr

00003450 <sai_stop_dbg_enable>:
    unsigned char   tx,
    unsigned char   stope,
    unsigned char   dbge
)
{
    if(port == 0)
    3450:	bb48      	cbnz	r0, 34a6 <sai_stop_dbg_enable+0x56>
    {
        if(tx)
    3452:	b191      	cbz	r1, 347a <sai_stop_dbg_enable+0x2a>
        {
            if(stope) I2S_TCSR_REG(I2S0_BASE_PTR) |= I2S_TCSR_STOPE_MASK;   //stop enable
    3454:	b342      	cbz	r2, 34a8 <sai_stop_dbg_enable+0x58>
    3456:	f44f 4070 	mov.w	r0, #61440	; 0xf000
    345a:	f2c4 0002 	movt	r0, #16386	; 0x4002
    345e:	6801      	ldr	r1, [r0, #0]
    3460:	f041 4280 	orr.w	r2, r1, #1073741824	; 0x40000000
    3464:	6002      	str	r2, [r0, #0]
            else
                I2S_TCSR_REG(I2S0_BASE_PTR) &= ~I2S_TCSR_STOPE_MASK;        //stop disable
            if(dbge) I2S_TCSR_REG(I2S0_BASE_PTR) |= I2S_TCSR_DBGE_MASK;     //debug enable
    3466:	b34b      	cbz	r3, 34bc <sai_stop_dbg_enable+0x6c>
    3468:	f44f 4370 	mov.w	r3, #61440	; 0xf000
    346c:	f2c4 0302 	movt	r3, #16386	; 0x4002
    3470:	681a      	ldr	r2, [r3, #0]
    3472:	f042 5000 	orr.w	r0, r2, #536870912	; 0x20000000
    3476:	6018      	str	r0, [r3, #0]
    3478:	4770      	bx	lr
            else
                I2S_TCSR_REG(I2S0_BASE_PTR) &= ~I2S_TCSR_DBGE_MASK;         //debug disable
        }
        else
        {
            if(stope) I2S_RCSR_REG(I2S0_BASE_PTR) |= I2S_RCSR_STOPE_MASK;   //stop enable
    347a:	bb42      	cbnz	r2, 34ce <sai_stop_dbg_enable+0x7e>
            else
                I2S_RCSR_REG(I2S0_BASE_PTR) &= ~I2S_RCSR_STOPE_MASK;        //stop disable
    347c:	f44f 4270 	mov.w	r2, #61440	; 0xf000
    3480:	f2c4 0202 	movt	r2, #16386	; 0x4002
    3484:	f8d2 1080 	ldr.w	r1, [r2, #128]	; 0x80
    3488:	f021 4080 	bic.w	r0, r1, #1073741824	; 0x40000000
    348c:	f8c2 0080 	str.w	r0, [r2, #128]	; 0x80
            if(dbge) I2S_RCSR_REG(I2S0_BASE_PTR) |= I2S_RCSR_DBGE_MASK;     //debug enable
    3490:	bb4b      	cbnz	r3, 34e6 <sai_stop_dbg_enable+0x96>
            else
                I2S_RCSR_REG(I2S0_BASE_PTR) &= ~I2S_RCSR_DBGE_MASK;         //debug disable
    3492:	f44f 4370 	mov.w	r3, #61440	; 0xf000
    3496:	f2c4 0302 	movt	r3, #16386	; 0x4002
    349a:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
    349e:	f022 5100 	bic.w	r1, r2, #536870912	; 0x20000000
    34a2:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
    34a6:	4770      	bx	lr
    {
        if(tx)
        {
            if(stope) I2S_TCSR_REG(I2S0_BASE_PTR) |= I2S_TCSR_STOPE_MASK;   //stop enable
            else
                I2S_TCSR_REG(I2S0_BASE_PTR) &= ~I2S_TCSR_STOPE_MASK;        //stop disable
    34a8:	f44f 4070 	mov.w	r0, #61440	; 0xf000
    34ac:	f2c4 0002 	movt	r0, #16386	; 0x4002
    34b0:	6801      	ldr	r1, [r0, #0]
    34b2:	f021 4280 	bic.w	r2, r1, #1073741824	; 0x40000000
    34b6:	6002      	str	r2, [r0, #0]
            if(dbge) I2S_TCSR_REG(I2S0_BASE_PTR) |= I2S_TCSR_DBGE_MASK;     //debug enable
    34b8:	2b00      	cmp	r3, #0
    34ba:	d1d5      	bne.n	3468 <sai_stop_dbg_enable+0x18>
            else
                I2S_TCSR_REG(I2S0_BASE_PTR) &= ~I2S_TCSR_DBGE_MASK;         //debug disable
    34bc:	f44f 4370 	mov.w	r3, #61440	; 0xf000
    34c0:	f2c4 0302 	movt	r3, #16386	; 0x4002
    34c4:	6818      	ldr	r0, [r3, #0]
    34c6:	f020 5100 	bic.w	r1, r0, #536870912	; 0x20000000
    34ca:	6019      	str	r1, [r3, #0]
    34cc:	4770      	bx	lr
        }
        else
        {
            if(stope) I2S_RCSR_REG(I2S0_BASE_PTR) |= I2S_RCSR_STOPE_MASK;   //stop enable
    34ce:	f44f 4270 	mov.w	r2, #61440	; 0xf000
    34d2:	f2c4 0202 	movt	r2, #16386	; 0x4002
    34d6:	f8d2 1080 	ldr.w	r1, [r2, #128]	; 0x80
    34da:	f041 4080 	orr.w	r0, r1, #1073741824	; 0x40000000
    34de:	f8c2 0080 	str.w	r0, [r2, #128]	; 0x80
            else
                I2S_RCSR_REG(I2S0_BASE_PTR) &= ~I2S_RCSR_STOPE_MASK;        //stop disable
            if(dbge) I2S_RCSR_REG(I2S0_BASE_PTR) |= I2S_RCSR_DBGE_MASK;     //debug enable
    34e2:	2b00      	cmp	r3, #0
    34e4:	d0d5      	beq.n	3492 <sai_stop_dbg_enable+0x42>
    34e6:	f44f 4070 	mov.w	r0, #61440	; 0xf000
    34ea:	f2c4 0002 	movt	r0, #16386	; 0x4002
    34ee:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
    34f2:	f043 5200 	orr.w	r2, r3, #536870912	; 0x20000000
    34f6:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
    34fa:	4770      	bx	lr

000034fc <sai_interrupt_enable>:
(
    unsigned char   port,
    unsigned char   tx
)
{
    if(port == 0)
    34fc:	b950      	cbnz	r0, 3514 <sai_interrupt_enable+0x18>
    {
        if(tx)
        {
            I2S_TCSR_REG(I2S0_BASE_PTR) |= //I2S_TCSR_WSIE_MASK   //word start interrupt enable
    34fe:	f44f 4370 	mov.w	r3, #61440	; 0xf000
    3502:	f2c4 0302 	movt	r3, #16386	; 0x4002
    unsigned char   tx
)
{
    if(port == 0)
    {
        if(tx)
    3506:	b931      	cbnz	r1, 3516 <sai_interrupt_enable+0x1a>
             I2S_TCSR_FRIE_MASK;    //FIFO request interrupt enable
            ;
        }
        else
        {
           I2S_RCSR_REG(I2S0_BASE_PTR) |= I2S_RCSR_FRIE_MASK;  //word start interrupt enabl	//FIFO request interrupt enable
    3508:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
    350c:	f442 7080 	orr.w	r0, r2, #256	; 0x100
    3510:	f8c3 0080 	str.w	r0, [r3, #128]	; 0x80
    3514:	4770      	bx	lr
{
    if(port == 0)
    {
        if(tx)
        {
            I2S_TCSR_REG(I2S0_BASE_PTR) |= //I2S_TCSR_WSIE_MASK   //word start interrupt enable
    3516:	6819      	ldr	r1, [r3, #0]
    3518:	f441 7280 	orr.w	r2, r1, #256	; 0x100
    351c:	601a      	str	r2, [r3, #0]
    351e:	4770      	bx	lr

00003520 <sai_enable>:
(
    unsigned char   port,
    unsigned char   tx
)
{
    if(port == 0)
    3520:	b950      	cbnz	r0, 3538 <sai_enable+0x18>
    {
        if(tx) I2S_TCSR_REG(I2S0_BASE_PTR) |= I2S_TCSR_TE_MASK; //transmit enable
    3522:	f44f 4370 	mov.w	r3, #61440	; 0xf000
    3526:	f2c4 0302 	movt	r3, #16386	; 0x4002
    352a:	b931      	cbnz	r1, 353a <sai_enable+0x1a>
        else
            I2S_RCSR_REG(I2S0_BASE_PTR) |= I2S_RCSR_RE_MASK;    //receive enable
    352c:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
    3530:	f042 4000 	orr.w	r0, r2, #2147483648	; 0x80000000
    3534:	f8c3 0080 	str.w	r0, [r3, #128]	; 0x80
    3538:	4770      	bx	lr
    unsigned char   tx
)
{
    if(port == 0)
    {
        if(tx) I2S_TCSR_REG(I2S0_BASE_PTR) |= I2S_TCSR_TE_MASK; //transmit enable
    353a:	6819      	ldr	r1, [r3, #0]
    353c:	f041 4200 	orr.w	r2, r1, #2147483648	; 0x80000000
    3540:	601a      	str	r2, [r3, #0]
    3542:	4770      	bx	lr

00003544 <sai_watermark_config>:
    unsigned char   port,
    unsigned char   tx,
    unsigned char   watermark
)
{
    if(port == 0)
    3544:	b930      	cbnz	r0, 3554 <sai_watermark_config+0x10>
    {
        if(tx) I2S_TCR1_REG(I2S0_BASE_PTR) = watermark; //tx FIFO watermark
    3546:	f44f 4370 	mov.w	r3, #61440	; 0xf000
    354a:	f2c4 0302 	movt	r3, #16386	; 0x4002
    354e:	b911      	cbnz	r1, 3556 <sai_watermark_config+0x12>
        else
            I2S_RCR1_REG(I2S0_BASE_PTR) = watermark;    //rx FIFO watermark
    3550:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    3554:	4770      	bx	lr
    unsigned char   watermark
)
{
    if(port == 0)
    {
        if(tx) I2S_TCR1_REG(I2S0_BASE_PTR) = watermark; //tx FIFO watermark
    3556:	605a      	str	r2, [r3, #4]
    3558:	4770      	bx	lr
    355a:	bf00      	nop

0000355c <sai_mode_config>:
    unsigned char   tx,
    unsigned char   mode,
    unsigned char   bcs,
    unsigned char   bci
)
{
    355c:	b410      	push	{r4}
    355e:	f89d 4004 	ldrb.w	r4, [sp, #4]
    if(port == 0)
    3562:	b9c0      	cbnz	r0, 3596 <sai_mode_config+0x3a>
    {
        if(tx)
    3564:	b1c9      	cbz	r1, 359a <sai_mode_config+0x3e>
        {
            I2S_TCR2_REG(I2S0_BASE_PTR) |= I2S_TCR2_SYNC(mode);         //configure SAI synchronous mode
    3566:	f44f 4170 	mov.w	r1, #61440	; 0xf000
    356a:	f2c4 0102 	movt	r1, #16386	; 0x4002
    356e:	6888      	ldr	r0, [r1, #8]
    3570:	ea40 7282 	orr.w	r2, r0, r2, lsl #30
    3574:	608a      	str	r2, [r1, #8]
            if(bcs) I2S_TCR2_REG(I2S0_BASE_PTR) |= I2S_TCR2_BCS_MASK;   //bit clock swap
    3576:	2b00      	cmp	r3, #0
    3578:	d12c      	bne.n	35d4 <sai_mode_config+0x78>
            else
                I2S_TCR2_REG(I2S0_BASE_PTR) &= ~I2S_TCR2_BCS_MASK;
    357a:	688b      	ldr	r3, [r1, #8]
    357c:	f023 5000 	bic.w	r0, r3, #536870912	; 0x20000000
    3580:	6088      	str	r0, [r1, #8]

            if(bci) I2S_TCR2_REG(I2S0_BASE_PTR) |= I2S_TCR2_BCI_MASK;   //internal logic clocked by external bit clock
    3582:	f44f 4170 	mov.w	r1, #61440	; 0xf000
    3586:	f2c4 0102 	movt	r1, #16386	; 0x4002
    358a:	6888      	ldr	r0, [r1, #8]
    358c:	2c00      	cmp	r4, #0
    358e:	d02c      	beq.n	35ea <sai_mode_config+0x8e>
    3590:	f040 5380 	orr.w	r3, r0, #268435456	; 0x10000000
    3594:	608b      	str	r3, [r1, #8]
        }
    }
    else if(port == 1)
    {
    }
}
    3596:	bc10      	pop	{r4}
    3598:	4770      	bx	lr
            else
                I2S_TCR2_REG(I2S0_BASE_PTR) &= ~I2S_TCR2_BCI_MASK;
        }
        else
        {
            I2S_RCR2_REG(I2S0_BASE_PTR) |= I2S_RCR2_SYNC(mode);         //configure SAI synchronous mode
    359a:	f44f 4170 	mov.w	r1, #61440	; 0xf000
    359e:	f2c4 0102 	movt	r1, #16386	; 0x4002
    35a2:	f8d1 0088 	ldr.w	r0, [r1, #136]	; 0x88
    35a6:	ea40 7282 	orr.w	r2, r0, r2, lsl #30
    35aa:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
            if(bcs) I2S_RCR2_REG(I2S0_BASE_PTR) |= I2S_RCR2_BCS_MASK;   //bit clock swap
    35ae:	bb03      	cbnz	r3, 35f2 <sai_mode_config+0x96>
            else
                I2S_RCR2_REG(I2S0_BASE_PTR) &= ~I2S_RCR2_BCS_MASK;
    35b0:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
    35b4:	f023 5000 	bic.w	r0, r3, #536870912	; 0x20000000
    35b8:	f8c1 0088 	str.w	r0, [r1, #136]	; 0x88

            if(bci) I2S_RCR2_REG(I2S0_BASE_PTR) |= I2S_RCR2_BCI_MASK;   //internal logic clocked by external bit clock
    35bc:	f44f 4170 	mov.w	r1, #61440	; 0xf000
    35c0:	f2c4 0102 	movt	r1, #16386	; 0x4002
    35c4:	f8d1 0088 	ldr.w	r0, [r1, #136]	; 0x88
    35c8:	bb0c      	cbnz	r4, 360e <sai_mode_config+0xb2>
            else
                I2S_RCR2_REG(I2S0_BASE_PTR) &= ~I2S_RCR2_BCI_MASK;
    35ca:	f020 5280 	bic.w	r2, r0, #268435456	; 0x10000000
    35ce:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
    35d2:	e7e0      	b.n	3596 <sai_mode_config+0x3a>
    if(port == 0)
    {
        if(tx)
        {
            I2S_TCR2_REG(I2S0_BASE_PTR) |= I2S_TCR2_SYNC(mode);         //configure SAI synchronous mode
            if(bcs) I2S_TCR2_REG(I2S0_BASE_PTR) |= I2S_TCR2_BCS_MASK;   //bit clock swap
    35d4:	688a      	ldr	r2, [r1, #8]
    35d6:	f042 5300 	orr.w	r3, r2, #536870912	; 0x20000000
    35da:	608b      	str	r3, [r1, #8]
            else
                I2S_TCR2_REG(I2S0_BASE_PTR) &= ~I2S_TCR2_BCS_MASK;

            if(bci) I2S_TCR2_REG(I2S0_BASE_PTR) |= I2S_TCR2_BCI_MASK;   //internal logic clocked by external bit clock
    35dc:	f44f 4170 	mov.w	r1, #61440	; 0xf000
    35e0:	f2c4 0102 	movt	r1, #16386	; 0x4002
    35e4:	6888      	ldr	r0, [r1, #8]
    35e6:	2c00      	cmp	r4, #0
    35e8:	d1d2      	bne.n	3590 <sai_mode_config+0x34>
            else
                I2S_TCR2_REG(I2S0_BASE_PTR) &= ~I2S_TCR2_BCI_MASK;
    35ea:	f020 5280 	bic.w	r2, r0, #268435456	; 0x10000000
    35ee:	608a      	str	r2, [r1, #8]
    35f0:	e7d1      	b.n	3596 <sai_mode_config+0x3a>
        }
        else
        {
            I2S_RCR2_REG(I2S0_BASE_PTR) |= I2S_RCR2_SYNC(mode);         //configure SAI synchronous mode
            if(bcs) I2S_RCR2_REG(I2S0_BASE_PTR) |= I2S_RCR2_BCS_MASK;   //bit clock swap
    35f2:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
    35f6:	f042 5300 	orr.w	r3, r2, #536870912	; 0x20000000
    35fa:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
            else
                I2S_RCR2_REG(I2S0_BASE_PTR) &= ~I2S_RCR2_BCS_MASK;

            if(bci) I2S_RCR2_REG(I2S0_BASE_PTR) |= I2S_RCR2_BCI_MASK;   //internal logic clocked by external bit clock
    35fe:	f44f 4170 	mov.w	r1, #61440	; 0xf000
    3602:	f2c4 0102 	movt	r1, #16386	; 0x4002
    3606:	f8d1 0088 	ldr.w	r0, [r1, #136]	; 0x88
    360a:	2c00      	cmp	r4, #0
    360c:	d0dd      	beq.n	35ca <sai_mode_config+0x6e>
    360e:	f040 5380 	orr.w	r3, r0, #268435456	; 0x10000000
    3612:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    3616:	e7be      	b.n	3596 <sai_mode_config+0x3a>

00003618 <sai_bclk_config>:
    unsigned char   mclksel,
    unsigned char   bclkpol,
    unsigned char   bclkdir,
    unsigned char   bclkdiv
)
{
    3618:	b430      	push	{r4, r5}
    361a:	f89d 4008 	ldrb.w	r4, [sp, #8]
    361e:	f89d 500c 	ldrb.w	r5, [sp, #12]
    if(port == 0)
    3622:	bb20      	cbnz	r0, 366e <sai_bclk_config+0x56>
    {
        /* SAI0 init */

        if(tx)
    3624:	2900      	cmp	r1, #0
    3626:	d024      	beq.n	3672 <sai_bclk_config+0x5a>
        {
            I2S_TCR2_REG(I2S0_BASE_PTR) &= ~I2S_TCR2_MSEL_MASK;     //clear master clock select
    3628:	f44f 4170 	mov.w	r1, #61440	; 0xf000
    362c:	f2c4 0102 	movt	r1, #16386	; 0x4002
            I2S_TCR2_REG(I2S0_BASE_PTR) &= ~I2S_TCR2_DIV_MASK;      //divide down master clock to generate bit clock
            I2S_TCR2_REG(I2S0_BASE_PTR) |= I2S_TCR2_MSEL(mclksel)   //master clock select
    3630:	0692      	lsls	r2, r2, #26
    {
        /* SAI0 init */

        if(tx)
        {
            I2S_TCR2_REG(I2S0_BASE_PTR) &= ~I2S_TCR2_MSEL_MASK;     //clear master clock select
    3632:	6888      	ldr	r0, [r1, #8]
    3634:	f020 6040 	bic.w	r0, r0, #201326592	; 0xc000000
    3638:	6088      	str	r0, [r1, #8]
            I2S_TCR2_REG(I2S0_BASE_PTR) &= ~I2S_TCR2_DIV_MASK;      //divide down master clock to generate bit clock
    363a:	6888      	ldr	r0, [r1, #8]
    363c:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
    3640:	6088      	str	r0, [r1, #8]
            I2S_TCR2_REG(I2S0_BASE_PTR) |= I2S_TCR2_MSEL(mclksel)   //master clock select
    3642:	6888      	ldr	r0, [r1, #8]
    3644:	f002 6240 	and.w	r2, r2, #201326592	; 0xc000000
            | I2S_TCR2_DIV(bclkdiv) //divide down master clock to generate bit clock
    3648:	4302      	orrs	r2, r0

        if(tx)
        {
            I2S_TCR2_REG(I2S0_BASE_PTR) &= ~I2S_TCR2_MSEL_MASK;     //clear master clock select
            I2S_TCR2_REG(I2S0_BASE_PTR) &= ~I2S_TCR2_DIV_MASK;      //divide down master clock to generate bit clock
            I2S_TCR2_REG(I2S0_BASE_PTR) |= I2S_TCR2_MSEL(mclksel)   //master clock select
    364a:	4315      	orrs	r5, r2
    364c:	608d      	str	r5, [r1, #8]
            | I2S_TCR2_DIV(bclkdiv) //divide down master clock to generate bit clock
            ;

            if(bclkpol) I2S_TCR2_REG(I2S0_BASE_PTR) |= I2S_TCR2_BCP_MASK;   //bit clock is active low
    364e:	2b00      	cmp	r3, #0
    3650:	d13b      	bne.n	36ca <sai_bclk_config+0xb2>
            else
                I2S_TCR2_REG(I2S0_BASE_PTR) &= ~I2S_TCR2_BCP_MASK;          //bit clock is active high
    3652:	688b      	ldr	r3, [r1, #8]
    3654:	f023 7000 	bic.w	r0, r3, #33554432	; 0x2000000
    3658:	6088      	str	r0, [r1, #8]
            if(bclkdir) I2S_TCR2_REG(I2S0_BASE_PTR) |= I2S_TCR2_BCD_MASK;   //bit clock generated internally, master mode
    365a:	f44f 4170 	mov.w	r1, #61440	; 0xf000
    365e:	f2c4 0102 	movt	r1, #16386	; 0x4002
    3662:	6888      	ldr	r0, [r1, #8]
    3664:	2c00      	cmp	r4, #0
    3666:	d03b      	beq.n	36e0 <sai_bclk_config+0xc8>
    3668:	f040 7380 	orr.w	r3, r0, #16777216	; 0x1000000
    366c:	608b      	str	r3, [r1, #8]
        /* SAI1 init */

        //("Error: Port %d is not available yet.",port);

    }
}
    366e:	bc30      	pop	{r4, r5}
    3670:	4770      	bx	lr
            else
                I2S_TCR2_REG(I2S0_BASE_PTR) &= ~I2S_TCR2_BCD_MASK;          //bit clock generated externally, slave mode
        }
        else
        {
            I2S_RCR2_REG(I2S0_BASE_PTR) &= ~I2S_RCR2_MSEL_MASK;             //clear master clock select
    3672:	f44f 4170 	mov.w	r1, #61440	; 0xf000
    3676:	f2c4 0102 	movt	r1, #16386	; 0x4002
            I2S_RCR2_REG(I2S0_BASE_PTR) &= ~I2S_RCR2_DIV_MASK;              //divide down master clock to generate bit clock
            I2S_RCR2_REG(I2S0_BASE_PTR) |= I2S_RCR2_MSEL(mclksel)           //master clock select
    367a:	0692      	lsls	r2, r2, #26
            else
                I2S_TCR2_REG(I2S0_BASE_PTR) &= ~I2S_TCR2_BCD_MASK;          //bit clock generated externally, slave mode
        }
        else
        {
            I2S_RCR2_REG(I2S0_BASE_PTR) &= ~I2S_RCR2_MSEL_MASK;             //clear master clock select
    367c:	f8d1 0088 	ldr.w	r0, [r1, #136]	; 0x88
    3680:	f020 6040 	bic.w	r0, r0, #201326592	; 0xc000000
    3684:	f8c1 0088 	str.w	r0, [r1, #136]	; 0x88
            I2S_RCR2_REG(I2S0_BASE_PTR) &= ~I2S_RCR2_DIV_MASK;              //divide down master clock to generate bit clock
    3688:	f8d1 0088 	ldr.w	r0, [r1, #136]	; 0x88
    368c:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
    3690:	f8c1 0088 	str.w	r0, [r1, #136]	; 0x88
            I2S_RCR2_REG(I2S0_BASE_PTR) |= I2S_RCR2_MSEL(mclksel)           //master clock select
    3694:	f8d1 0088 	ldr.w	r0, [r1, #136]	; 0x88
    3698:	f002 6240 	and.w	r2, r2, #201326592	; 0xc000000
            | I2S_RCR2_DIV(bclkdiv) //divide down master clock to generate bit clock
    369c:	4302      	orrs	r2, r0
        }
        else
        {
            I2S_RCR2_REG(I2S0_BASE_PTR) &= ~I2S_RCR2_MSEL_MASK;             //clear master clock select
            I2S_RCR2_REG(I2S0_BASE_PTR) &= ~I2S_RCR2_DIV_MASK;              //divide down master clock to generate bit clock
            I2S_RCR2_REG(I2S0_BASE_PTR) |= I2S_RCR2_MSEL(mclksel)           //master clock select
    369e:	4315      	orrs	r5, r2
    36a0:	f8c1 5088 	str.w	r5, [r1, #136]	; 0x88
            | I2S_RCR2_DIV(bclkdiv) //divide down master clock to generate bit clock
            ;

            if(bclkpol) I2S_RCR2_REG(I2S0_BASE_PTR) |= I2S_RCR2_BCP_MASK;   //bit clock is active low
    36a4:	bb03      	cbnz	r3, 36e8 <sai_bclk_config+0xd0>
            else
                I2S_RCR2_REG(I2S0_BASE_PTR) &= ~I2S_RCR2_BCP_MASK;          //bit clock is active high
    36a6:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
    36aa:	f023 7000 	bic.w	r0, r3, #33554432	; 0x2000000
    36ae:	f8c1 0088 	str.w	r0, [r1, #136]	; 0x88
            if(bclkdir) I2S_RCR2_REG(I2S0_BASE_PTR) |= I2S_RCR2_BCD_MASK;   //bit clock generated internally, master mode
    36b2:	f44f 4170 	mov.w	r1, #61440	; 0xf000
    36b6:	f2c4 0102 	movt	r1, #16386	; 0x4002
    36ba:	f8d1 0088 	ldr.w	r0, [r1, #136]	; 0x88
    36be:	bb0c      	cbnz	r4, 3704 <sai_bclk_config+0xec>
            else
                I2S_RCR2_REG(I2S0_BASE_PTR) &= ~I2S_RCR2_BCD_MASK;          //bit clock generated externally, slave mode
    36c0:	f020 7280 	bic.w	r2, r0, #16777216	; 0x1000000
    36c4:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
    36c8:	e7d1      	b.n	366e <sai_bclk_config+0x56>
            I2S_TCR2_REG(I2S0_BASE_PTR) &= ~I2S_TCR2_DIV_MASK;      //divide down master clock to generate bit clock
            I2S_TCR2_REG(I2S0_BASE_PTR) |= I2S_TCR2_MSEL(mclksel)   //master clock select
            | I2S_TCR2_DIV(bclkdiv) //divide down master clock to generate bit clock
            ;

            if(bclkpol) I2S_TCR2_REG(I2S0_BASE_PTR) |= I2S_TCR2_BCP_MASK;   //bit clock is active low
    36ca:	688a      	ldr	r2, [r1, #8]
    36cc:	f042 7300 	orr.w	r3, r2, #33554432	; 0x2000000
    36d0:	608b      	str	r3, [r1, #8]
            else
                I2S_TCR2_REG(I2S0_BASE_PTR) &= ~I2S_TCR2_BCP_MASK;          //bit clock is active high
            if(bclkdir) I2S_TCR2_REG(I2S0_BASE_PTR) |= I2S_TCR2_BCD_MASK;   //bit clock generated internally, master mode
    36d2:	f44f 4170 	mov.w	r1, #61440	; 0xf000
    36d6:	f2c4 0102 	movt	r1, #16386	; 0x4002
    36da:	6888      	ldr	r0, [r1, #8]
    36dc:	2c00      	cmp	r4, #0
    36de:	d1c3      	bne.n	3668 <sai_bclk_config+0x50>
            else
                I2S_TCR2_REG(I2S0_BASE_PTR) &= ~I2S_TCR2_BCD_MASK;          //bit clock generated externally, slave mode
    36e0:	f020 7280 	bic.w	r2, r0, #16777216	; 0x1000000
    36e4:	608a      	str	r2, [r1, #8]
    36e6:	e7c2      	b.n	366e <sai_bclk_config+0x56>
            I2S_RCR2_REG(I2S0_BASE_PTR) &= ~I2S_RCR2_DIV_MASK;              //divide down master clock to generate bit clock
            I2S_RCR2_REG(I2S0_BASE_PTR) |= I2S_RCR2_MSEL(mclksel)           //master clock select
            | I2S_RCR2_DIV(bclkdiv) //divide down master clock to generate bit clock
            ;

            if(bclkpol) I2S_RCR2_REG(I2S0_BASE_PTR) |= I2S_RCR2_BCP_MASK;   //bit clock is active low
    36e8:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
    36ec:	f042 7300 	orr.w	r3, r2, #33554432	; 0x2000000
    36f0:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
            else
                I2S_RCR2_REG(I2S0_BASE_PTR) &= ~I2S_RCR2_BCP_MASK;          //bit clock is active high
            if(bclkdir) I2S_RCR2_REG(I2S0_BASE_PTR) |= I2S_RCR2_BCD_MASK;   //bit clock generated internally, master mode
    36f4:	f44f 4170 	mov.w	r1, #61440	; 0xf000
    36f8:	f2c4 0102 	movt	r1, #16386	; 0x4002
    36fc:	f8d1 0088 	ldr.w	r0, [r1, #136]	; 0x88
    3700:	2c00      	cmp	r4, #0
    3702:	d0dd      	beq.n	36c0 <sai_bclk_config+0xa8>
    3704:	f040 7380 	orr.w	r3, r0, #16777216	; 0x1000000
    3708:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    370c:	e7af      	b.n	366e <sai_bclk_config+0x56>
    370e:	bf00      	nop

00003710 <sai_bclk_en>:
(
    unsigned char   port,
    unsigned        tx
)
{
    if(port == 0)
    3710:	b950      	cbnz	r0, 3728 <sai_bclk_en+0x18>
    {
        if(tx) I2S_TCSR_REG(I2S0_BASE_PTR) |= I2S_TCSR_BCE_MASK;    //transmit enable
    3712:	f44f 4370 	mov.w	r3, #61440	; 0xf000
    3716:	f2c4 0302 	movt	r3, #16386	; 0x4002
    371a:	b931      	cbnz	r1, 372a <sai_bclk_en+0x1a>
        else
            I2S_RCSR_REG(I2S0_BASE_PTR) |= I2S_RCSR_BCE_MASK;       //receive enable
    371c:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
    3720:	f042 5080 	orr.w	r0, r2, #268435456	; 0x10000000
    3724:	f8c3 0080 	str.w	r0, [r3, #128]	; 0x80
    3728:	4770      	bx	lr
    unsigned        tx
)
{
    if(port == 0)
    {
        if(tx) I2S_TCSR_REG(I2S0_BASE_PTR) |= I2S_TCSR_BCE_MASK;    //transmit enable
    372a:	6819      	ldr	r1, [r3, #0]
    372c:	f041 5280 	orr.w	r2, r1, #268435456	; 0x10000000
    3730:	601a      	str	r2, [r3, #0]
    3732:	4770      	bx	lr

00003734 <sai_channel_enable>:
    unsigned char   port,
    unsigned char   tx,
    unsigned char   chen
)
{
    if(port == 0)
    3734:	b960      	cbnz	r0, 3750 <sai_channel_enable+0x1c>
    {
        if(tx) I2S_TCR3_REG(I2S0_BASE_PTR) |= I2S_TCR3_TCE(chen);   //tx channel enable
    3736:	f44f 4370 	mov.w	r3, #61440	; 0xf000
    373a:	f2c4 0302 	movt	r3, #16386	; 0x4002
    373e:	0412      	lsls	r2, r2, #16
    3740:	b939      	cbnz	r1, 3752 <sai_channel_enable+0x1e>
        else
            I2S_RCR3_REG(I2S0_BASE_PTR) |= I2S_RCR3_RCE(chen);      //rx channel enable
    3742:	f8d3 108c 	ldr.w	r1, [r3, #140]	; 0x8c
    3746:	f402 3040 	and.w	r0, r2, #196608	; 0x30000
    374a:	4308      	orrs	r0, r1
    374c:	f8c3 008c 	str.w	r0, [r3, #140]	; 0x8c
    3750:	4770      	bx	lr
    unsigned char   chen
)
{
    if(port == 0)
    {
        if(tx) I2S_TCR3_REG(I2S0_BASE_PTR) |= I2S_TCR3_TCE(chen);   //tx channel enable
    3752:	68d9      	ldr	r1, [r3, #12]
    3754:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
    3758:	430a      	orrs	r2, r1
    375a:	60da      	str	r2, [r3, #12]
    375c:	4770      	bx	lr
    375e:	bf00      	nop

00003760 <sai_word_flg_config>:
    unsigned char   port,
    unsigned char   tx,
    unsigned char   wdfl
)
{
    if(port == 0)
    3760:	b958      	cbnz	r0, 377a <sai_word_flg_config+0x1a>
    {
        if(tx) I2S_TCR3_REG(I2S0_BASE_PTR) |= I2S_TCR3_WDFL(wdfl);  //word flag config
    3762:	f44f 4370 	mov.w	r3, #61440	; 0xf000
    3766:	f2c4 0302 	movt	r3, #16386	; 0x4002
    376a:	f002 021f 	and.w	r2, r2, #31
    376e:	b929      	cbnz	r1, 377c <sai_word_flg_config+0x1c>
        else
            I2S_RCR3_REG(I2S0_BASE_PTR) |= I2S_RCR3_WDFL(wdfl);     //word flag config
    3770:	f8d3 108c 	ldr.w	r1, [r3, #140]	; 0x8c
    3774:	430a      	orrs	r2, r1
    3776:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    377a:	4770      	bx	lr
    unsigned char   wdfl
)
{
    if(port == 0)
    {
        if(tx) I2S_TCR3_REG(I2S0_BASE_PTR) |= I2S_TCR3_WDFL(wdfl);  //word flag config
    377c:	68d8      	ldr	r0, [r3, #12]
    377e:	4302      	orrs	r2, r0
    3780:	60da      	str	r2, [r3, #12]
    3782:	4770      	bx	lr

00003784 <sai_frame_config>:
    unsigned char   tx,
    unsigned char   framesize,
    unsigned char   sywd,
    unsigned char   mf
)
{
    3784:	b410      	push	{r4}
    3786:	f89d 4004 	ldrb.w	r4, [sp, #4]
    if(port == 0)
    378a:	b9d8      	cbnz	r0, 37c4 <sai_frame_config+0x40>
    {
        if(tx)
    378c:	b1e1      	cbz	r1, 37c8 <sai_frame_config+0x44>
        {
            I2S_TCR4_REG(I2S0_BASE_PTR) &= ~I2S_TCR4_FRSZ_MASK;
    378e:	f44f 4170 	mov.w	r1, #61440	; 0xf000
    3792:	f2c4 0102 	movt	r1, #16386	; 0x4002
            I2S_TCR4_REG(I2S0_BASE_PTR) &= ~I2S_TCR4_SYWD_MASK;
            I2S_TCR4_REG(I2S0_BASE_PTR) |= I2S_TCR4_FRSZ(framesize) //configure number of words in each frame
    3796:	0412      	lsls	r2, r2, #16
{
    if(port == 0)
    {
        if(tx)
        {
            I2S_TCR4_REG(I2S0_BASE_PTR) &= ~I2S_TCR4_FRSZ_MASK;
    3798:	6908      	ldr	r0, [r1, #16]
    379a:	f420 10f8 	bic.w	r0, r0, #2031616	; 0x1f0000
    379e:	6108      	str	r0, [r1, #16]
            I2S_TCR4_REG(I2S0_BASE_PTR) &= ~I2S_TCR4_SYWD_MASK;
    37a0:	6908      	ldr	r0, [r1, #16]
    37a2:	f420 50f8 	bic.w	r0, r0, #7936	; 0x1f00
    37a6:	6108      	str	r0, [r1, #16]
            I2S_TCR4_REG(I2S0_BASE_PTR) |= I2S_TCR4_FRSZ(framesize) //configure number of words in each frame
    37a8:	6908      	ldr	r0, [r1, #16]
            | I2S_TCR4_SYWD(sywd)   //configure length of the frame sync in number of bit clocks
    37aa:	021b      	lsls	r3, r3, #8
    {
        if(tx)
        {
            I2S_TCR4_REG(I2S0_BASE_PTR) &= ~I2S_TCR4_FRSZ_MASK;
            I2S_TCR4_REG(I2S0_BASE_PTR) &= ~I2S_TCR4_SYWD_MASK;
            I2S_TCR4_REG(I2S0_BASE_PTR) |= I2S_TCR4_FRSZ(framesize) //configure number of words in each frame
    37ac:	f402 12f8 	and.w	r2, r2, #2031616	; 0x1f0000
            | I2S_TCR4_SYWD(sywd)   //configure length of the frame sync in number of bit clocks
    37b0:	4302      	orrs	r2, r0
    37b2:	f403 50f8 	and.w	r0, r3, #7936	; 0x1f00
    {
        if(tx)
        {
            I2S_TCR4_REG(I2S0_BASE_PTR) &= ~I2S_TCR4_FRSZ_MASK;
            I2S_TCR4_REG(I2S0_BASE_PTR) &= ~I2S_TCR4_SYWD_MASK;
            I2S_TCR4_REG(I2S0_BASE_PTR) |= I2S_TCR4_FRSZ(framesize) //configure number of words in each frame
    37b6:	4302      	orrs	r2, r0
    37b8:	610a      	str	r2, [r1, #16]
            | I2S_TCR4_SYWD(sywd)   //configure length of the frame sync in number of bit clocks
            ;

            if(mf) I2S_TCR4_REG(I2S0_BASE_PTR) |= I2S_TCR4_MF_MASK; //MSB transmit first
    37ba:	690b      	ldr	r3, [r1, #16]
    37bc:	b344      	cbz	r4, 3810 <sai_frame_config+0x8c>
    37be:	f043 0210 	orr.w	r2, r3, #16
    37c2:	610a      	str	r2, [r1, #16]
        }
    }
    else if(port == 1)
    {
    }
}
    37c4:	bc10      	pop	{r4}
    37c6:	4770      	bx	lr
            else
                I2S_TCR4_REG(I2S0_BASE_PTR) &= ~I2S_TCR4_MF_MASK;   //LSB transmit first
        }
        else
        {
            I2S_RCR4_REG(I2S0_BASE_PTR) &= ~I2S_RCR4_FRSZ_MASK;
    37c8:	f44f 4170 	mov.w	r1, #61440	; 0xf000
    37cc:	f2c4 0102 	movt	r1, #16386	; 0x4002
            I2S_RCR4_REG(I2S0_BASE_PTR) &= ~I2S_RCR4_SYWD_MASK;
            I2S_RCR4_REG(I2S0_BASE_PTR) |= I2S_RCR4_FRSZ(framesize) //configure number of words in each frame
    37d0:	0412      	lsls	r2, r2, #16
            else
                I2S_TCR4_REG(I2S0_BASE_PTR) &= ~I2S_TCR4_MF_MASK;   //LSB transmit first
        }
        else
        {
            I2S_RCR4_REG(I2S0_BASE_PTR) &= ~I2S_RCR4_FRSZ_MASK;
    37d2:	f8d1 0090 	ldr.w	r0, [r1, #144]	; 0x90
    37d6:	f420 10f8 	bic.w	r0, r0, #2031616	; 0x1f0000
    37da:	f8c1 0090 	str.w	r0, [r1, #144]	; 0x90
            I2S_RCR4_REG(I2S0_BASE_PTR) &= ~I2S_RCR4_SYWD_MASK;
    37de:	f8d1 0090 	ldr.w	r0, [r1, #144]	; 0x90
    37e2:	f420 50f8 	bic.w	r0, r0, #7936	; 0x1f00
    37e6:	f8c1 0090 	str.w	r0, [r1, #144]	; 0x90
            I2S_RCR4_REG(I2S0_BASE_PTR) |= I2S_RCR4_FRSZ(framesize) //configure number of words in each frame
    37ea:	f8d1 0090 	ldr.w	r0, [r1, #144]	; 0x90
            | I2S_RCR4_SYWD(sywd)   //configure length of the frame sync in number of bit clocks
    37ee:	021b      	lsls	r3, r3, #8
        }
        else
        {
            I2S_RCR4_REG(I2S0_BASE_PTR) &= ~I2S_RCR4_FRSZ_MASK;
            I2S_RCR4_REG(I2S0_BASE_PTR) &= ~I2S_RCR4_SYWD_MASK;
            I2S_RCR4_REG(I2S0_BASE_PTR) |= I2S_RCR4_FRSZ(framesize) //configure number of words in each frame
    37f0:	f402 12f8 	and.w	r2, r2, #2031616	; 0x1f0000
            | I2S_RCR4_SYWD(sywd)   //configure length of the frame sync in number of bit clocks
    37f4:	4302      	orrs	r2, r0
    37f6:	f403 50f8 	and.w	r0, r3, #7936	; 0x1f00
        }
        else
        {
            I2S_RCR4_REG(I2S0_BASE_PTR) &= ~I2S_RCR4_FRSZ_MASK;
            I2S_RCR4_REG(I2S0_BASE_PTR) &= ~I2S_RCR4_SYWD_MASK;
            I2S_RCR4_REG(I2S0_BASE_PTR) |= I2S_RCR4_FRSZ(framesize) //configure number of words in each frame
    37fa:	4302      	orrs	r2, r0
    37fc:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
            | I2S_RCR4_SYWD(sywd)   //configure length of the frame sync in number of bit clocks
            ;

            if(mf) I2S_RCR4_REG(I2S0_BASE_PTR) |= I2S_RCR4_MF_MASK; //MSB transmit first
    3800:	f8d1 3090 	ldr.w	r3, [r1, #144]	; 0x90
    3804:	b944      	cbnz	r4, 3818 <sai_frame_config+0x94>
            else
                I2S_RCR4_REG(I2S0_BASE_PTR) &= ~I2S_RCR4_MF_MASK;   //LSB transmit first
    3806:	f023 0010 	bic.w	r0, r3, #16
    380a:	f8c1 0090 	str.w	r0, [r1, #144]	; 0x90
    380e:	e7d9      	b.n	37c4 <sai_frame_config+0x40>
            | I2S_TCR4_SYWD(sywd)   //configure length of the frame sync in number of bit clocks
            ;

            if(mf) I2S_TCR4_REG(I2S0_BASE_PTR) |= I2S_TCR4_MF_MASK; //MSB transmit first
            else
                I2S_TCR4_REG(I2S0_BASE_PTR) &= ~I2S_TCR4_MF_MASK;   //LSB transmit first
    3810:	f023 0010 	bic.w	r0, r3, #16
    3814:	6108      	str	r0, [r1, #16]
    3816:	e7d5      	b.n	37c4 <sai_frame_config+0x40>
            I2S_RCR4_REG(I2S0_BASE_PTR) &= ~I2S_RCR4_SYWD_MASK;
            I2S_RCR4_REG(I2S0_BASE_PTR) |= I2S_RCR4_FRSZ(framesize) //configure number of words in each frame
            | I2S_RCR4_SYWD(sywd)   //configure length of the frame sync in number of bit clocks
            ;

            if(mf) I2S_RCR4_REG(I2S0_BASE_PTR) |= I2S_RCR4_MF_MASK; //MSB transmit first
    3818:	f043 0210 	orr.w	r2, r3, #16
    381c:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
    3820:	e7d0      	b.n	37c4 <sai_frame_config+0x40>
    3822:	bf00      	nop

00003824 <sai_frameclk_config>:
    unsigned char   tx,
    unsigned char   fse,
    unsigned char   fsp,
    unsigned char   fsd
)
{
    3824:	b410      	push	{r4}
    3826:	f89d 4004 	ldrb.w	r4, [sp, #4]
    if(port == 0)
    382a:	b9f0      	cbnz	r0, 386a <sai_frameclk_config+0x46>
    {
        if(tx)
    382c:	b1f9      	cbz	r1, 386e <sai_frameclk_config+0x4a>
        {
            if(fse) I2S_TCR4_REG(I2S0_BASE_PTR) |= I2S_TCR4_FSE_MASK;   //frame sync early
    382e:	2a00      	cmp	r2, #0
    3830:	d042      	beq.n	38b8 <sai_frameclk_config+0x94>
    3832:	f44f 4070 	mov.w	r0, #61440	; 0xf000
    3836:	f2c4 0002 	movt	r0, #16386	; 0x4002
    383a:	6901      	ldr	r1, [r0, #16]
    383c:	f041 0208 	orr.w	r2, r1, #8
    3840:	6102      	str	r2, [r0, #16]
            else
                I2S_TCR4_REG(I2S0_BASE_PTR) &= ~I2S_TCR4_FSE_MASK;

            if(fsp) I2S_TCR4_REG(I2S0_BASE_PTR) |= I2S_TCR4_FSP_MASK;   //frame sync active low
    3842:	2b00      	cmp	r3, #0
    3844:	d042      	beq.n	38cc <sai_frameclk_config+0xa8>
    3846:	f44f 4370 	mov.w	r3, #61440	; 0xf000
    384a:	f2c4 0302 	movt	r3, #16386	; 0x4002
            else
                I2S_TCR4_REG(I2S0_BASE_PTR) &= ~I2S_TCR4_FSP_MASK;      //frame sync active high
            if(fsd) I2S_TCR4_REG(I2S0_BASE_PTR) |= I2S_TCR4_FSD_MASK;   //frame sync generated internally, master mode
    384e:	f44f 4170 	mov.w	r1, #61440	; 0xf000
        {
            if(fse) I2S_TCR4_REG(I2S0_BASE_PTR) |= I2S_TCR4_FSE_MASK;   //frame sync early
            else
                I2S_TCR4_REG(I2S0_BASE_PTR) &= ~I2S_TCR4_FSE_MASK;

            if(fsp) I2S_TCR4_REG(I2S0_BASE_PTR) |= I2S_TCR4_FSP_MASK;   //frame sync active low
    3852:	691a      	ldr	r2, [r3, #16]
            else
                I2S_TCR4_REG(I2S0_BASE_PTR) &= ~I2S_TCR4_FSP_MASK;      //frame sync active high
            if(fsd) I2S_TCR4_REG(I2S0_BASE_PTR) |= I2S_TCR4_FSD_MASK;   //frame sync generated internally, master mode
    3854:	f2c4 0102 	movt	r1, #16386	; 0x4002
        {
            if(fse) I2S_TCR4_REG(I2S0_BASE_PTR) |= I2S_TCR4_FSE_MASK;   //frame sync early
            else
                I2S_TCR4_REG(I2S0_BASE_PTR) &= ~I2S_TCR4_FSE_MASK;

            if(fsp) I2S_TCR4_REG(I2S0_BASE_PTR) |= I2S_TCR4_FSP_MASK;   //frame sync active low
    3858:	f042 0002 	orr.w	r0, r2, #2
    385c:	6118      	str	r0, [r3, #16]
            else
                I2S_TCR4_REG(I2S0_BASE_PTR) &= ~I2S_TCR4_FSP_MASK;      //frame sync active high
            if(fsd) I2S_TCR4_REG(I2S0_BASE_PTR) |= I2S_TCR4_FSD_MASK;   //frame sync generated internally, master mode
    385e:	690b      	ldr	r3, [r1, #16]
    3860:	2c00      	cmp	r4, #0
    3862:	d042      	beq.n	38ea <sai_frameclk_config+0xc6>
    3864:	f043 0001 	orr.w	r0, r3, #1
    3868:	6108      	str	r0, [r1, #16]
        }
    }
    else if(port == 1)
    {
    }
}
    386a:	bc10      	pop	{r4}
    386c:	4770      	bx	lr
            else
                I2S_TCR4_REG(I2S0_BASE_PTR) &= ~I2S_TCR4_FSD_MASK;      //frame sync generated externally, slave mode
        }
        else
        {
            if(fse) I2S_RCR4_REG(I2S0_BASE_PTR) |= I2S_RCR4_FSE_MASK;   //frame sync early
    386e:	2a00      	cmp	r2, #0
    3870:	d03f      	beq.n	38f2 <sai_frameclk_config+0xce>
    3872:	f44f 4270 	mov.w	r2, #61440	; 0xf000
    3876:	f2c4 0202 	movt	r2, #16386	; 0x4002
    387a:	f8d2 1090 	ldr.w	r1, [r2, #144]	; 0x90
    387e:	f041 0008 	orr.w	r0, r1, #8
    3882:	f8c2 0090 	str.w	r0, [r2, #144]	; 0x90
            else
                I2S_RCR4_REG(I2S0_BASE_PTR) &= ~I2S_RCR4_FSE_MASK;

            if(fsp) I2S_RCR4_REG(I2S0_BASE_PTR) |= I2S_RCR4_FSP_MASK;   //frame sync active low
    3886:	2b00      	cmp	r3, #0
    3888:	d03f      	beq.n	390a <sai_frameclk_config+0xe6>
    388a:	f44f 4070 	mov.w	r0, #61440	; 0xf000
    388e:	f2c4 0002 	movt	r0, #16386	; 0x4002
            else
                I2S_RCR4_REG(I2S0_BASE_PTR) &= ~I2S_RCR4_FSP_MASK;      //frame sync active high
            if(fsd) I2S_RCR4_REG(I2S0_BASE_PTR) |= I2S_RCR4_FSD_MASK;   //frame sync generated internally, master mode
    3892:	f44f 4170 	mov.w	r1, #61440	; 0xf000
        {
            if(fse) I2S_RCR4_REG(I2S0_BASE_PTR) |= I2S_RCR4_FSE_MASK;   //frame sync early
            else
                I2S_RCR4_REG(I2S0_BASE_PTR) &= ~I2S_RCR4_FSE_MASK;

            if(fsp) I2S_RCR4_REG(I2S0_BASE_PTR) |= I2S_RCR4_FSP_MASK;   //frame sync active low
    3896:	f8d0 3090 	ldr.w	r3, [r0, #144]	; 0x90
            else
                I2S_RCR4_REG(I2S0_BASE_PTR) &= ~I2S_RCR4_FSP_MASK;      //frame sync active high
            if(fsd) I2S_RCR4_REG(I2S0_BASE_PTR) |= I2S_RCR4_FSD_MASK;   //frame sync generated internally, master mode
    389a:	f2c4 0102 	movt	r1, #16386	; 0x4002
        {
            if(fse) I2S_RCR4_REG(I2S0_BASE_PTR) |= I2S_RCR4_FSE_MASK;   //frame sync early
            else
                I2S_RCR4_REG(I2S0_BASE_PTR) &= ~I2S_RCR4_FSE_MASK;

            if(fsp) I2S_RCR4_REG(I2S0_BASE_PTR) |= I2S_RCR4_FSP_MASK;   //frame sync active low
    389e:	f043 0202 	orr.w	r2, r3, #2
    38a2:	f8c0 2090 	str.w	r2, [r0, #144]	; 0x90
            else
                I2S_RCR4_REG(I2S0_BASE_PTR) &= ~I2S_RCR4_FSP_MASK;      //frame sync active high
            if(fsd) I2S_RCR4_REG(I2S0_BASE_PTR) |= I2S_RCR4_FSD_MASK;   //frame sync generated internally, master mode
    38a6:	f8d1 0090 	ldr.w	r0, [r1, #144]	; 0x90
    38aa:	2c00      	cmp	r4, #0
    38ac:	d13f      	bne.n	392e <sai_frameclk_config+0x10a>
            else
                I2S_RCR4_REG(I2S0_BASE_PTR) &= ~I2S_RCR4_FSD_MASK;      //frame sync generated externally, slave mode
    38ae:	f020 0301 	bic.w	r3, r0, #1
    38b2:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
    38b6:	e7d8      	b.n	386a <sai_frameclk_config+0x46>
    {
        if(tx)
        {
            if(fse) I2S_TCR4_REG(I2S0_BASE_PTR) |= I2S_TCR4_FSE_MASK;   //frame sync early
            else
                I2S_TCR4_REG(I2S0_BASE_PTR) &= ~I2S_TCR4_FSE_MASK;
    38b8:	f44f 4070 	mov.w	r0, #61440	; 0xf000
    38bc:	f2c4 0002 	movt	r0, #16386	; 0x4002
    38c0:	6901      	ldr	r1, [r0, #16]
    38c2:	f021 0208 	bic.w	r2, r1, #8
    38c6:	6102      	str	r2, [r0, #16]

            if(fsp) I2S_TCR4_REG(I2S0_BASE_PTR) |= I2S_TCR4_FSP_MASK;   //frame sync active low
    38c8:	2b00      	cmp	r3, #0
    38ca:	d1bc      	bne.n	3846 <sai_frameclk_config+0x22>
            else
                I2S_TCR4_REG(I2S0_BASE_PTR) &= ~I2S_TCR4_FSP_MASK;      //frame sync active high
    38cc:	f44f 4370 	mov.w	r3, #61440	; 0xf000
    38d0:	f2c4 0302 	movt	r3, #16386	; 0x4002
    38d4:	6918      	ldr	r0, [r3, #16]
    38d6:	f020 0102 	bic.w	r1, r0, #2
    38da:	6119      	str	r1, [r3, #16]
            if(fsd) I2S_TCR4_REG(I2S0_BASE_PTR) |= I2S_TCR4_FSD_MASK;   //frame sync generated internally, master mode
    38dc:	f44f 4170 	mov.w	r1, #61440	; 0xf000
    38e0:	f2c4 0102 	movt	r1, #16386	; 0x4002
    38e4:	690b      	ldr	r3, [r1, #16]
    38e6:	2c00      	cmp	r4, #0
    38e8:	d1bc      	bne.n	3864 <sai_frameclk_config+0x40>
            else
                I2S_TCR4_REG(I2S0_BASE_PTR) &= ~I2S_TCR4_FSD_MASK;      //frame sync generated externally, slave mode
    38ea:	f023 0201 	bic.w	r2, r3, #1
    38ee:	610a      	str	r2, [r1, #16]
    38f0:	e7bb      	b.n	386a <sai_frameclk_config+0x46>
        }
        else
        {
            if(fse) I2S_RCR4_REG(I2S0_BASE_PTR) |= I2S_RCR4_FSE_MASK;   //frame sync early
            else
                I2S_RCR4_REG(I2S0_BASE_PTR) &= ~I2S_RCR4_FSE_MASK;
    38f2:	f44f 4270 	mov.w	r2, #61440	; 0xf000
    38f6:	f2c4 0202 	movt	r2, #16386	; 0x4002
    38fa:	f8d2 1090 	ldr.w	r1, [r2, #144]	; 0x90
    38fe:	f021 0008 	bic.w	r0, r1, #8
    3902:	f8c2 0090 	str.w	r0, [r2, #144]	; 0x90

            if(fsp) I2S_RCR4_REG(I2S0_BASE_PTR) |= I2S_RCR4_FSP_MASK;   //frame sync active low
    3906:	2b00      	cmp	r3, #0
    3908:	d1bf      	bne.n	388a <sai_frameclk_config+0x66>
            else
                I2S_RCR4_REG(I2S0_BASE_PTR) &= ~I2S_RCR4_FSP_MASK;      //frame sync active high
    390a:	f44f 4370 	mov.w	r3, #61440	; 0xf000
    390e:	f2c4 0302 	movt	r3, #16386	; 0x4002
    3912:	f8d3 2090 	ldr.w	r2, [r3, #144]	; 0x90
    3916:	f022 0102 	bic.w	r1, r2, #2
    391a:	f8c3 1090 	str.w	r1, [r3, #144]	; 0x90
            if(fsd) I2S_RCR4_REG(I2S0_BASE_PTR) |= I2S_RCR4_FSD_MASK;   //frame sync generated internally, master mode
    391e:	f44f 4170 	mov.w	r1, #61440	; 0xf000
    3922:	f2c4 0102 	movt	r1, #16386	; 0x4002
    3926:	f8d1 0090 	ldr.w	r0, [r1, #144]	; 0x90
    392a:	2c00      	cmp	r4, #0
    392c:	d0bf      	beq.n	38ae <sai_frameclk_config+0x8a>
    392e:	f040 0201 	orr.w	r2, r0, #1
    3932:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
    3936:	e798      	b.n	386a <sai_frameclk_config+0x46>

00003938 <sai_wordlength_config>:
    unsigned char   tx,
    unsigned char   wnw,
    unsigned char   w0w,
    unsigned char   fbt
)
{
    3938:	b410      	push	{r4}
    393a:	f89d 4004 	ldrb.w	r4, [sp, #4]
    if(port == 0)
    393e:	bb38      	cbnz	r0, 3990 <sai_wordlength_config+0x58>
    {
        if(tx)
    3940:	bb41      	cbnz	r1, 3994 <sai_wordlength_config+0x5c>
            | I2S_TCR5_FBT(fbt) //configure bit index of first bit transmitted of each word
            ;
        }
        else
        {
            I2S_RCR5_REG(I2S0_BASE_PTR) &= ~I2S_RCR5_WNW_MASK;
    3942:	f44f 4170 	mov.w	r1, #61440	; 0xf000
    3946:	f2c4 0102 	movt	r1, #16386	; 0x4002
            I2S_RCR5_REG(I2S0_BASE_PTR) &= ~I2S_RCR5_W0W_MASK;
            I2S_RCR5_REG(I2S0_BASE_PTR) &= ~I2S_RCR5_FBT_MASK;
            I2S_RCR5_REG(I2S0_BASE_PTR) |= I2S_RCR5_WNW(wnw)    //configure number of bits in each word except first in frame
    394a:	0612      	lsls	r2, r2, #24
            | I2S_TCR5_FBT(fbt) //configure bit index of first bit transmitted of each word
            ;
        }
        else
        {
            I2S_RCR5_REG(I2S0_BASE_PTR) &= ~I2S_RCR5_WNW_MASK;
    394c:	f8d1 0094 	ldr.w	r0, [r1, #148]	; 0x94
    3950:	f020 50f8 	bic.w	r0, r0, #520093696	; 0x1f000000
    3954:	f8c1 0094 	str.w	r0, [r1, #148]	; 0x94
            I2S_RCR5_REG(I2S0_BASE_PTR) &= ~I2S_RCR5_W0W_MASK;
    3958:	f8d1 0094 	ldr.w	r0, [r1, #148]	; 0x94
    395c:	f420 10f8 	bic.w	r0, r0, #2031616	; 0x1f0000
    3960:	f8c1 0094 	str.w	r0, [r1, #148]	; 0x94
            I2S_RCR5_REG(I2S0_BASE_PTR) &= ~I2S_RCR5_FBT_MASK;
    3964:	f8d1 0094 	ldr.w	r0, [r1, #148]	; 0x94
    3968:	f420 50f8 	bic.w	r0, r0, #7936	; 0x1f00
    396c:	f8c1 0094 	str.w	r0, [r1, #148]	; 0x94
            I2S_RCR5_REG(I2S0_BASE_PTR) |= I2S_RCR5_WNW(wnw)    //configure number of bits in each word except first in frame
    3970:	f8d1 0094 	ldr.w	r0, [r1, #148]	; 0x94
            | I2S_RCR5_W0W(w0w) //configure number of bits for first word in each frame
    3974:	041b      	lsls	r3, r3, #16
        else
        {
            I2S_RCR5_REG(I2S0_BASE_PTR) &= ~I2S_RCR5_WNW_MASK;
            I2S_RCR5_REG(I2S0_BASE_PTR) &= ~I2S_RCR5_W0W_MASK;
            I2S_RCR5_REG(I2S0_BASE_PTR) &= ~I2S_RCR5_FBT_MASK;
            I2S_RCR5_REG(I2S0_BASE_PTR) |= I2S_RCR5_WNW(wnw)    //configure number of bits in each word except first in frame
    3976:	f002 52f8 	and.w	r2, r2, #520093696	; 0x1f000000
            | I2S_RCR5_W0W(w0w) //configure number of bits for first word in each frame
    397a:	4302      	orrs	r2, r0
            | I2S_RCR5_FBT(fbt) //configure bit index of first bit transmitted of each word
    397c:	0224      	lsls	r4, r4, #8
        {
            I2S_RCR5_REG(I2S0_BASE_PTR) &= ~I2S_RCR5_WNW_MASK;
            I2S_RCR5_REG(I2S0_BASE_PTR) &= ~I2S_RCR5_W0W_MASK;
            I2S_RCR5_REG(I2S0_BASE_PTR) &= ~I2S_RCR5_FBT_MASK;
            I2S_RCR5_REG(I2S0_BASE_PTR) |= I2S_RCR5_WNW(wnw)    //configure number of bits in each word except first in frame
            | I2S_RCR5_W0W(w0w) //configure number of bits for first word in each frame
    397e:	f403 10f8 	and.w	r0, r3, #2031616	; 0x1f0000
            | I2S_RCR5_FBT(fbt) //configure bit index of first bit transmitted of each word
    3982:	4302      	orrs	r2, r0
    3984:	f404 53f8 	and.w	r3, r4, #7936	; 0x1f00
        else
        {
            I2S_RCR5_REG(I2S0_BASE_PTR) &= ~I2S_RCR5_WNW_MASK;
            I2S_RCR5_REG(I2S0_BASE_PTR) &= ~I2S_RCR5_W0W_MASK;
            I2S_RCR5_REG(I2S0_BASE_PTR) &= ~I2S_RCR5_FBT_MASK;
            I2S_RCR5_REG(I2S0_BASE_PTR) |= I2S_RCR5_WNW(wnw)    //configure number of bits in each word except first in frame
    3988:	ea42 0403 	orr.w	r4, r2, r3
    398c:	f8c1 4094 	str.w	r4, [r1, #148]	; 0x94
        }
    }
    else if(port == 1)
    {
    }
}
    3990:	bc10      	pop	{r4}
    3992:	4770      	bx	lr
{
    if(port == 0)
    {
        if(tx)
        {
            I2S_TCR5_REG(I2S0_BASE_PTR) &= ~I2S_TCR5_WNW_MASK;
    3994:	f44f 4170 	mov.w	r1, #61440	; 0xf000
    3998:	f2c4 0102 	movt	r1, #16386	; 0x4002
            I2S_TCR5_REG(I2S0_BASE_PTR) &= ~I2S_TCR5_W0W_MASK;
            I2S_TCR5_REG(I2S0_BASE_PTR) &= ~I2S_TCR5_FBT_MASK;
            I2S_TCR5_REG(I2S0_BASE_PTR) |= I2S_TCR5_WNW(wnw)    //configure number of bits in each word except first in frame
    399c:	0612      	lsls	r2, r2, #24
{
    if(port == 0)
    {
        if(tx)
        {
            I2S_TCR5_REG(I2S0_BASE_PTR) &= ~I2S_TCR5_WNW_MASK;
    399e:	6948      	ldr	r0, [r1, #20]
    39a0:	f020 50f8 	bic.w	r0, r0, #520093696	; 0x1f000000
    39a4:	6148      	str	r0, [r1, #20]
            I2S_TCR5_REG(I2S0_BASE_PTR) &= ~I2S_TCR5_W0W_MASK;
    39a6:	6948      	ldr	r0, [r1, #20]
    39a8:	f420 10f8 	bic.w	r0, r0, #2031616	; 0x1f0000
    39ac:	6148      	str	r0, [r1, #20]
            I2S_TCR5_REG(I2S0_BASE_PTR) &= ~I2S_TCR5_FBT_MASK;
    39ae:	6948      	ldr	r0, [r1, #20]
    39b0:	f420 50f8 	bic.w	r0, r0, #7936	; 0x1f00
    39b4:	6148      	str	r0, [r1, #20]
            I2S_TCR5_REG(I2S0_BASE_PTR) |= I2S_TCR5_WNW(wnw)    //configure number of bits in each word except first in frame
    39b6:	6948      	ldr	r0, [r1, #20]
            | I2S_TCR5_W0W(w0w) //configure number of bits for first word in each frame
    39b8:	041b      	lsls	r3, r3, #16
        if(tx)
        {
            I2S_TCR5_REG(I2S0_BASE_PTR) &= ~I2S_TCR5_WNW_MASK;
            I2S_TCR5_REG(I2S0_BASE_PTR) &= ~I2S_TCR5_W0W_MASK;
            I2S_TCR5_REG(I2S0_BASE_PTR) &= ~I2S_TCR5_FBT_MASK;
            I2S_TCR5_REG(I2S0_BASE_PTR) |= I2S_TCR5_WNW(wnw)    //configure number of bits in each word except first in frame
    39ba:	f002 52f8 	and.w	r2, r2, #520093696	; 0x1f000000
            | I2S_TCR5_W0W(w0w) //configure number of bits for first word in each frame
    39be:	4302      	orrs	r2, r0
            | I2S_TCR5_FBT(fbt) //configure bit index of first bit transmitted of each word
    39c0:	0224      	lsls	r4, r4, #8
        {
            I2S_TCR5_REG(I2S0_BASE_PTR) &= ~I2S_TCR5_WNW_MASK;
            I2S_TCR5_REG(I2S0_BASE_PTR) &= ~I2S_TCR5_W0W_MASK;
            I2S_TCR5_REG(I2S0_BASE_PTR) &= ~I2S_TCR5_FBT_MASK;
            I2S_TCR5_REG(I2S0_BASE_PTR) |= I2S_TCR5_WNW(wnw)    //configure number of bits in each word except first in frame
            | I2S_TCR5_W0W(w0w) //configure number of bits for first word in each frame
    39c2:	f403 10f8 	and.w	r0, r3, #2031616	; 0x1f0000
            | I2S_TCR5_FBT(fbt) //configure bit index of first bit transmitted of each word
    39c6:	4302      	orrs	r2, r0
    39c8:	f404 53f8 	and.w	r3, r4, #7936	; 0x1f00
        if(tx)
        {
            I2S_TCR5_REG(I2S0_BASE_PTR) &= ~I2S_TCR5_WNW_MASK;
            I2S_TCR5_REG(I2S0_BASE_PTR) &= ~I2S_TCR5_W0W_MASK;
            I2S_TCR5_REG(I2S0_BASE_PTR) &= ~I2S_TCR5_FBT_MASK;
            I2S_TCR5_REG(I2S0_BASE_PTR) |= I2S_TCR5_WNW(wnw)    //configure number of bits in each word except first in frame
    39cc:	ea42 0403 	orr.w	r4, r2, r3
    39d0:	614c      	str	r4, [r1, #20]
    39d2:	e7dd      	b.n	3990 <sai_wordlength_config+0x58>

000039d4 <sai_mclk_config>:
    unsigned char   mics,
    unsigned char   moe,
    unsigned char   fract,
    uint32_t        divide
)
{
    39d4:	b430      	push	{r4, r5}
    if(port == 0)
    39d6:	bbc0      	cbnz	r0, 3a4a <sai_mclk_config+0x76>
                                                        *	10		OSC1ERCLK
                                                        *	11		MCGPLLCLK
                                                                *	100		MCGFLLCLK
                                                        */

        I2S_MCR_REG(I2S0_BASE_PTR) &= ~I2S_MCR_MICS_MASK;
    39d8:	f44f 4070 	mov.w	r0, #61440	; 0xf000
    39dc:	f2c4 0002 	movt	r0, #16386	; 0x4002

        if(mics == MCGPLLCLK) SIM_SOPT2 |= SIM_SOPT2_PLLFLLSEL_MASK;    //MCGPLLCLK is selected
    39e0:	2903      	cmp	r1, #3
                                                        *	10		OSC1ERCLK
                                                        *	11		MCGPLLCLK
                                                                *	100		MCGFLLCLK
                                                        */

        I2S_MCR_REG(I2S0_BASE_PTR) &= ~I2S_MCR_MICS_MASK;
    39e2:	f8d0 4100 	ldr.w	r4, [r0, #256]	; 0x100
    39e6:	f024 7540 	bic.w	r5, r4, #50331648	; 0x3000000
    39ea:	f8c0 5100 	str.w	r5, [r0, #256]	; 0x100

        if(mics == MCGPLLCLK) SIM_SOPT2 |= SIM_SOPT2_PLLFLLSEL_MASK;    //MCGPLLCLK is selected
    39ee:	d033      	beq.n	3a58 <sai_mclk_config+0x84>
        if(mics == MCGFLLCLK)
    39f0:	2904      	cmp	r1, #4
    39f2:	d03c      	beq.n	3a6e <sai_mclk_config+0x9a>
    39f4:	0609      	lsls	r1, r1, #24
    39f6:	f001 7140 	and.w	r1, r1, #50331648	; 0x3000000
        {
            SIM_SOPT2 &= ~SIM_SOPT2_PLLFLLSEL_MASK;                     //MCGFLLCLK is selected
            mics = MCGPLLCLK;
        }

        I2S_MCR_REG(I2S0_BASE_PTR) |= I2S_MCR_MICS(mics);               //MCLK divider input clock select
    39fa:	f44f 4070 	mov.w	r0, #61440	; 0xf000
    39fe:	f2c4 0002 	movt	r0, #16386	; 0x4002
                                                        */

        I2S_MDR_REG(I2S0_BASE_PTR) &= ~I2S_MDR_FRACT_MASK;
        I2S_MDR_REG(I2S0_BASE_PTR) &= ~I2S_MDR_DIVIDE_MASK;
        I2S_MDR_REG(I2S0_BASE_PTR) |= I2S_MDR_FRACT(fract)              //MCLK fraction
        | I2S_MDR_DIVIDE(divide)    //MCLK divide
    3a02:	9c02      	ldr	r4, [sp, #8]
        {
            SIM_SOPT2 &= ~SIM_SOPT2_PLLFLLSEL_MASK;                     //MCGFLLCLK is selected
            mics = MCGPLLCLK;
        }

        I2S_MCR_REG(I2S0_BASE_PTR) |= I2S_MCR_MICS(mics);               //MCLK divider input clock select
    3a04:	f8d0 5100 	ldr.w	r5, [r0, #256]	; 0x100
    3a08:	4329      	orrs	r1, r5
    3a0a:	f8c0 1100 	str.w	r1, [r0, #256]	; 0x100

        /*
                                                        *	MCLK output = MCLK input * ((FRACT+1)/(DIVIDE+1))
                                                        */

        I2S_MDR_REG(I2S0_BASE_PTR) &= ~I2S_MDR_FRACT_MASK;
    3a0e:	f8d0 1104 	ldr.w	r1, [r0, #260]	; 0x104
    3a12:	f421 217f 	bic.w	r1, r1, #1044480	; 0xff000
    3a16:	f8c0 1104 	str.w	r1, [r0, #260]	; 0x104
        I2S_MDR_REG(I2S0_BASE_PTR) &= ~I2S_MDR_DIVIDE_MASK;
    3a1a:	f8d0 1104 	ldr.w	r1, [r0, #260]	; 0x104
    3a1e:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
    3a22:	f021 010f 	bic.w	r1, r1, #15
    3a26:	f8c0 1104 	str.w	r1, [r0, #260]	; 0x104
        I2S_MDR_REG(I2S0_BASE_PTR) |= I2S_MDR_FRACT(fract)              //MCLK fraction
    3a2a:	f8d0 1104 	ldr.w	r1, [r0, #260]	; 0x104
        | I2S_MDR_DIVIDE(divide)    //MCLK divide
    3a2e:	0524      	lsls	r4, r4, #20
    3a30:	0d24      	lsrs	r4, r4, #20
    3a32:	430c      	orrs	r4, r1
                                                        *	MCLK output = MCLK input * ((FRACT+1)/(DIVIDE+1))
                                                        */

        I2S_MDR_REG(I2S0_BASE_PTR) &= ~I2S_MDR_FRACT_MASK;
        I2S_MDR_REG(I2S0_BASE_PTR) &= ~I2S_MDR_DIVIDE_MASK;
        I2S_MDR_REG(I2S0_BASE_PTR) |= I2S_MDR_FRACT(fract)              //MCLK fraction
    3a34:	ea44 3303 	orr.w	r3, r4, r3, lsl #12
    3a38:	f8c0 3104 	str.w	r3, [r0, #260]	; 0x104
        /*
                                                        *	Please note that MICS field cannot be changed once MCLK divider enabled, because MOE bit will enable MCLK divider and configure MCLK pin as output,
                                                        *	so MOE bit needs to be set after setting MICS, otherwise the change to MICS bit will not be valid!!!
                                                        */

        if(moe) I2S_MCR_REG(I2S0_BASE_PTR) |= I2S_MCR_MOE_MASK; //SAI_MCLK configure as output from MCLK divider
    3a3c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    3a40:	b92a      	cbnz	r2, 3a4e <sai_mclk_config+0x7a>
        else
            I2S_MCR_REG(I2S0_BASE_PTR) &= ~I2S_MCR_MOE_MASK;    //SAI_MCLK configured as input which bypass MCLK divider
    3a42:	f021 4280 	bic.w	r2, r1, #1073741824	; 0x40000000
    3a46:	f8c0 2100 	str.w	r2, [r0, #256]	; 0x100
    }
    else if(port == 1)
    {
    }
}
    3a4a:	bc30      	pop	{r4, r5}
    3a4c:	4770      	bx	lr
        /*
                                                        *	Please note that MICS field cannot be changed once MCLK divider enabled, because MOE bit will enable MCLK divider and configure MCLK pin as output,
                                                        *	so MOE bit needs to be set after setting MICS, otherwise the change to MICS bit will not be valid!!!
                                                        */

        if(moe) I2S_MCR_REG(I2S0_BASE_PTR) |= I2S_MCR_MOE_MASK; //SAI_MCLK configure as output from MCLK divider
    3a4e:	f041 4380 	orr.w	r3, r1, #1073741824	; 0x40000000
    3a52:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
    3a56:	e7f8      	b.n	3a4a <sai_mclk_config+0x76>
                                                                *	100		MCGFLLCLK
                                                        */

        I2S_MCR_REG(I2S0_BASE_PTR) &= ~I2S_MCR_MICS_MASK;

        if(mics == MCGPLLCLK) SIM_SOPT2 |= SIM_SOPT2_PLLFLLSEL_MASK;    //MCGPLLCLK is selected
    3a58:	f44f 4000 	mov.w	r0, #32768	; 0x8000
    3a5c:	f2c4 0004 	movt	r0, #16388	; 0x4004
    3a60:	f04f 7140 	mov.w	r1, #50331648	; 0x3000000
    3a64:	6844      	ldr	r4, [r0, #4]
    3a66:	f444 3580 	orr.w	r5, r4, #65536	; 0x10000
    3a6a:	6045      	str	r5, [r0, #4]
    3a6c:	e7c5      	b.n	39fa <sai_mclk_config+0x26>
        if(mics == MCGFLLCLK)
        {
            SIM_SOPT2 &= ~SIM_SOPT2_PLLFLLSEL_MASK;                     //MCGFLLCLK is selected
    3a6e:	f44f 4000 	mov.w	r0, #32768	; 0x8000
    3a72:	f2c4 0004 	movt	r0, #16388	; 0x4004
    3a76:	f04f 7140 	mov.w	r1, #50331648	; 0x3000000
    3a7a:	6844      	ldr	r4, [r0, #4]
    3a7c:	f424 3580 	bic.w	r5, r4, #65536	; 0x10000
    3a80:	6045      	str	r5, [r0, #4]
    3a82:	e7ba      	b.n	39fa <sai_mclk_config+0x26>

00003a84 <sai_clear_reg>:
/* */

void sai_clear_reg
(unsigned char   port)
{
    if(port == 0)
    3a84:	b100      	cbz	r0, 3a88 <sai_clear_reg+0x4>
    3a86:	4770      	bx	lr
    {
        I2S_TCSR_REG(I2S0_BASE_PTR) = 0x001c0000;   //clear wsf, sef and fef flags
    3a88:	f44f 4370 	mov.w	r3, #61440	; 0xf000
    3a8c:	f2c4 0302 	movt	r3, #16386	; 0x4002
    3a90:	f44f 12e0 	mov.w	r2, #1835008	; 0x1c0000
    3a94:	601a      	str	r2, [r3, #0]
        I2S_TCR1_REG(I2S0_BASE_PTR) = 0x0;
    3a96:	6058      	str	r0, [r3, #4]
        I2S_TCR2_REG(I2S0_BASE_PTR) = 0x0;
    3a98:	6098      	str	r0, [r3, #8]
        I2S_TCR3_REG(I2S0_BASE_PTR) = 0x0;
    3a9a:	60d8      	str	r0, [r3, #12]
        I2S_TCR4_REG(I2S0_BASE_PTR) = 0x0;
    3a9c:	6118      	str	r0, [r3, #16]
        I2S_TCR5_REG(I2S0_BASE_PTR) = 0x0;
    3a9e:	6158      	str	r0, [r3, #20]
{
    if(port == 0)
    {
        if(tx)
        {
            I2S_TCSR_REG(I2S0_BASE_PTR) |= I2S_TCSR_SR_MASK;    //software reset
    3aa0:	6819      	ldr	r1, [r3, #0]
    3aa2:	f041 7280 	orr.w	r2, r1, #16777216	; 0x1000000
    3aa6:	601a      	str	r2, [r3, #0]
            I2S_TCSR_REG(I2S0_BASE_PTR) &= ~I2S_TCSR_SR_MASK;   //clear software reset bit since it's sticky
    3aa8:	6819      	ldr	r1, [r3, #0]
    3aaa:	f021 7280 	bic.w	r2, r1, #16777216	; 0x1000000
    3aae:	601a      	str	r2, [r3, #0]
        I2S_TCR5_REG(I2S0_BASE_PTR) = 0x0;

        //soft reset, reset internal tranmit logic and FIFO pointers, this operation will clear TDR and TFR, don't try to write 0 to TDR for reg clear, any write to TDR will increment TFR

        sai_soft_reset(port, TX);
        I2S_TMR_REG(I2S0_BASE_PTR) = 0x0;
    3ab0:	6618      	str	r0, [r3, #96]	; 0x60

        /* Loop till TE bit is cleared */

        while(I2S_TCSR_REG(I2S0_BASE_PTR) & I2S_TCSR_TE_MASK) I2S_TCSR_REG(I2S0_BASE_PTR) &= ~I2S_TCSR_TE_MASK;     //clear TE
    3ab2:	6818      	ldr	r0, [r3, #0]
    3ab4:	2800      	cmp	r0, #0
    3ab6:	da06      	bge.n	3ac6 <sai_clear_reg+0x42>
    3ab8:	6819      	ldr	r1, [r3, #0]
    3aba:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
    3abe:	601a      	str	r2, [r3, #0]
    3ac0:	6818      	ldr	r0, [r3, #0]
    3ac2:	2800      	cmp	r0, #0
    3ac4:	dbf8      	blt.n	3ab8 <sai_clear_reg+0x34>

        /* Loop till BCE bit cleared */

        while(I2S_TCSR_REG(I2S0_BASE_PTR) & I2S_TCSR_BCE_MASK) I2S_TCSR_REG(I2S0_BASE_PTR) &= ~I2S_TCSR_BCE_MASK;   //clear BE
    3ac6:	f44f 4370 	mov.w	r3, #61440	; 0xf000
    3aca:	f2c4 0302 	movt	r3, #16386	; 0x4002
    3ace:	6819      	ldr	r1, [r3, #0]
    3ad0:	00ca      	lsls	r2, r1, #3
    3ad2:	d506      	bpl.n	3ae2 <sai_clear_reg+0x5e>
    3ad4:	681a      	ldr	r2, [r3, #0]
    3ad6:	f022 5080 	bic.w	r0, r2, #268435456	; 0x10000000
    3ada:	6018      	str	r0, [r3, #0]
    3adc:	6819      	ldr	r1, [r3, #0]
    3ade:	00c8      	lsls	r0, r1, #3
    3ae0:	d4f8      	bmi.n	3ad4 <sai_clear_reg+0x50>
        I2S_RCSR_REG(I2S0_BASE_PTR) = 0x001c0000;   //clear wsf, sef and fef flags
    3ae2:	f44f 4370 	mov.w	r3, #61440	; 0xf000
    3ae6:	f2c4 0302 	movt	r3, #16386	; 0x4002
        I2S_RCR1_REG(I2S0_BASE_PTR) = 0x0;
    3aea:	2200      	movs	r2, #0
        while(I2S_TCSR_REG(I2S0_BASE_PTR) & I2S_TCSR_TE_MASK) I2S_TCSR_REG(I2S0_BASE_PTR) &= ~I2S_TCSR_TE_MASK;     //clear TE

        /* Loop till BCE bit cleared */

        while(I2S_TCSR_REG(I2S0_BASE_PTR) & I2S_TCSR_BCE_MASK) I2S_TCSR_REG(I2S0_BASE_PTR) &= ~I2S_TCSR_BCE_MASK;   //clear BE
        I2S_RCSR_REG(I2S0_BASE_PTR) = 0x001c0000;   //clear wsf, sef and fef flags
    3aec:	f44f 10e0 	mov.w	r0, #1835008	; 0x1c0000
    3af0:	f8c3 0080 	str.w	r0, [r3, #128]	; 0x80
        I2S_RCR1_REG(I2S0_BASE_PTR) = 0x0;
    3af4:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
        I2S_RCR2_REG(I2S0_BASE_PTR) = 0x0;
    3af8:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
        I2S_RCR3_REG(I2S0_BASE_PTR) = 0x0;
    3afc:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
        I2S_RCR4_REG(I2S0_BASE_PTR) = 0x0;
    3b00:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
        I2S_RCR5_REG(I2S0_BASE_PTR) = 0x0;
    3b04:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
            I2S_TCSR_REG(I2S0_BASE_PTR) |= I2S_TCSR_SR_MASK;    //software reset
            I2S_TCSR_REG(I2S0_BASE_PTR) &= ~I2S_TCSR_SR_MASK;   //clear software reset bit since it's sticky
        }
        else
        {
            I2S_RCSR_REG(I2S0_BASE_PTR) |= I2S_RCSR_SR_MASK;    //software reset
    3b08:	f8d3 1080 	ldr.w	r1, [r3, #128]	; 0x80
    3b0c:	f041 7080 	orr.w	r0, r1, #16777216	; 0x1000000
    3b10:	f8c3 0080 	str.w	r0, [r3, #128]	; 0x80
            I2S_RCSR_REG(I2S0_BASE_PTR) &= ~I2S_RCSR_SR_MASK;   //clear software reset bit since it's sticky
    3b14:	f8d3 1080 	ldr.w	r1, [r3, #128]	; 0x80
    3b18:	f021 7080 	bic.w	r0, r1, #16777216	; 0x1000000
    3b1c:	f8c3 0080 	str.w	r0, [r3, #128]	; 0x80
        I2S_RCR5_REG(I2S0_BASE_PTR) = 0x0;

        //soft reset, reset internal receive logic and FIFO pointers, this operation will clear RDR and RFR, don't try to write 0 to RDR for reg clear, any write to RDR will increment RFR

        sai_soft_reset(port, RX);
        I2S_RMR_REG(I2S0_BASE_PTR) = 0x0;
    3b20:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0

        /* Loop till RE bit clear */

        while(I2S_RCSR_REG(I2S0_BASE_PTR) & I2S_RCSR_RE_MASK) I2S_RCSR_REG(I2S0_BASE_PTR) &= ~I2S_RCSR_RE_MASK;     //clear RE
    3b24:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
    3b28:	2a00      	cmp	r2, #0
    3b2a:	da09      	bge.n	3b40 <sai_clear_reg+0xbc>
    3b2c:	f8d3 1080 	ldr.w	r1, [r3, #128]	; 0x80
    3b30:	f021 4000 	bic.w	r0, r1, #2147483648	; 0x80000000
    3b34:	f8c3 0080 	str.w	r0, [r3, #128]	; 0x80
    3b38:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
    3b3c:	2a00      	cmp	r2, #0
    3b3e:	dbf5      	blt.n	3b2c <sai_clear_reg+0xa8>

        /* Loop till BCE bit clear */

        while(I2S_RCSR_REG(I2S0_BASE_PTR) & I2S_RCSR_BCE_MASK) I2S_RCSR_REG(I2S0_BASE_PTR) &= ~I2S_RCSR_BCE_MASK;   //clear BCE
    3b40:	f44f 4370 	mov.w	r3, #61440	; 0xf000
    3b44:	f2c4 0302 	movt	r3, #16386	; 0x4002
    3b48:	f8d3 1080 	ldr.w	r1, [r3, #128]	; 0x80
    3b4c:	00c9      	lsls	r1, r1, #3
    3b4e:	d509      	bpl.n	3b64 <sai_clear_reg+0xe0>
    3b50:	f8d3 0080 	ldr.w	r0, [r3, #128]	; 0x80
    3b54:	f020 5280 	bic.w	r2, r0, #268435456	; 0x10000000
    3b58:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    3b5c:	f8d3 1080 	ldr.w	r1, [r3, #128]	; 0x80
    3b60:	00ca      	lsls	r2, r1, #3
    3b62:	d4f5      	bmi.n	3b50 <sai_clear_reg+0xcc>

        //Clearing MCR register is a bit tricky, first disable MOE bit, then clear MDR, then change MICS to 0x0

        I2S_MCR_REG(I2S0_BASE_PTR) &= ~I2S_MCR_MOE_MASK;
    3b64:	f44f 4370 	mov.w	r3, #61440	; 0xf000
    3b68:	f2c4 0302 	movt	r3, #16386	; 0x4002
        I2S_MDR_REG(I2S0_BASE_PTR) = 0x0;
    3b6c:	2000      	movs	r0, #0

        while(I2S_RCSR_REG(I2S0_BASE_PTR) & I2S_RCSR_BCE_MASK) I2S_RCSR_REG(I2S0_BASE_PTR) &= ~I2S_RCSR_BCE_MASK;   //clear BCE

        //Clearing MCR register is a bit tricky, first disable MOE bit, then clear MDR, then change MICS to 0x0

        I2S_MCR_REG(I2S0_BASE_PTR) &= ~I2S_MCR_MOE_MASK;
    3b6e:	f8d3 2100 	ldr.w	r2, [r3, #256]	; 0x100
    3b72:	f022 4180 	bic.w	r1, r2, #1073741824	; 0x40000000
    3b76:	f8c3 1100 	str.w	r1, [r3, #256]	; 0x100
        I2S_MDR_REG(I2S0_BASE_PTR) = 0x0;
    3b7a:	f8c3 0104 	str.w	r0, [r3, #260]	; 0x104
        I2S_MCR_REG(I2S0_BASE_PTR) = I2S_MCR_MICS(0x0);
    3b7e:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
    3b82:	4770      	bx	lr

00003b84 <sai0_rx_isr>:


void sai0_rx_isr(void)
{
	//Clear the IRQ Flag
    I2S_RCSR_REG(I2S0_BASE_PTR) &= ~(I2S_RCSR_FRF_MASK);
    3b84:	f44f 4370 	mov.w	r3, #61440	; 0xf000
    3b88:	f2c4 0302 	movt	r3, #16386	; 0x4002
    
    GPIOD_PSOR = 1<<3;
    3b8c:	f24f 02c0 	movw	r2, #61632	; 0xf0c0


void sai0_rx_isr(void)
{
	//Clear the IRQ Flag
    I2S_RCSR_REG(I2S0_BASE_PTR) &= ~(I2S_RCSR_FRF_MASK);
    3b90:	f8d3 0080 	ldr.w	r0, [r3, #128]	; 0x80
    
    GPIOD_PSOR = 1<<3;
    3b94:	f2c4 020f 	movt	r2, #16399	; 0x400f
    3b98:	2108      	movs	r1, #8


void sai0_rx_isr(void)
{
	//Clear the IRQ Flag
    I2S_RCSR_REG(I2S0_BASE_PTR) &= ~(I2S_RCSR_FRF_MASK);
    3b9a:	f420 3080 	bic.w	r0, r0, #65536	; 0x10000
    3b9e:	f8c3 0080 	str.w	r0, [r3, #128]	; 0x80
    
    GPIOD_PSOR = 1<<3;
    3ba2:	6051      	str	r1, [r2, #4]
    GPIOD_PCOR = 1<<3;
    3ba4:	6091      	str	r1, [r2, #8]
        
  	LeftIn = I2S0_RDR0;
    3ba6:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
   	RightIn = I2S0_RDR0;
    3baa:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
    3bae:	4808      	ldr	r0, [pc, #32]	; (3bd0 <sai0_rx_isr+0x4c>)
    
   	//Sign extend the 24-bit data to q31_t;
   	
   	if(LeftIn & (1<<23))
    3bb0:	0211      	lsls	r1, r2, #8
    3bb2:	4908      	ldr	r1, [pc, #32]	; (3bd4 <sai0_rx_isr+0x50>)
   		LeftIn |= 0xFF000000;
    3bb4:	bf4c      	ite	mi
    3bb6:	f042 427f 	orrmi.w	r2, r2, #4278190080	; 0xff000000
   	else
   		LeftIn &=~0xFF000000;;
    3bba:	f022 427f 	bicpl.w	r2, r2, #4278190080	; 0xff000000
    3bbe:	600a      	str	r2, [r1, #0]
   	
  	if(RightIn & (1<<23))
    3bc0:	021a      	lsls	r2, r3, #8
   		RightIn |= 0xFF000000;
    3bc2:	bf4c      	ite	mi
    3bc4:	f043 437f 	orrmi.w	r3, r3, #4278190080	; 0xff000000
   	else
   		RightIn &=~0xFF000000;;
    3bc8:	f023 437f 	bicpl.w	r3, r3, #4278190080	; 0xff000000
    3bcc:	6003      	str	r3, [r0, #0]
    3bce:	4770      	bx	lr
    3bd0:	1fffe0b0 	.word	0x1fffe0b0
    3bd4:	1fffe214 	.word	0x1fffe214

00003bd8 <sai0_tx_isr>:

/* */


void sai0_tx_isr(void)
{
    3bd8:	b538      	push	{r3, r4, r5, lr}
	  IO_DELTA_ON;
    3bda:	f24f 0480 	movw	r4, #61568	; 0xf080
    3bde:	f2c4 040f 	movt	r4, #16399	; 0x400f
	  
	  I2S_TCSR_REG(I2S0_BASE_PTR) &= ~(I2S_TCSR_FRF_MASK);
    3be2:	f44f 4370 	mov.w	r3, #61440	; 0xf000
    3be6:	f2c4 0302 	movt	r3, #16386	; 0x4002
/* */


void sai0_tx_isr(void)
{
	  IO_DELTA_ON;
    3bea:	2510      	movs	r5, #16
    3bec:	6065      	str	r5, [r4, #4]
	  
	  I2S_TCSR_REG(I2S0_BASE_PTR) &= ~(I2S_TCSR_FRF_MASK);
    3bee:	6819      	ldr	r1, [r3, #0]

	 //Send out the last Queued up values
	  I2S0_TDR0 = LeftOut;
    3bf0:	f24e 02b4 	movw	r2, #57524	; 0xe0b4

void sai0_tx_isr(void)
{
	  IO_DELTA_ON;
	  
	  I2S_TCSR_REG(I2S0_BASE_PTR) &= ~(I2S_TCSR_FRF_MASK);
    3bf4:	f421 3080 	bic.w	r0, r1, #65536	; 0x10000

	 //Send out the last Queued up values
	  I2S0_TDR0 = LeftOut;
    3bf8:	f6c1 72ff 	movt	r2, #8191	; 0x1fff

void sai0_tx_isr(void)
{
	  IO_DELTA_ON;
	  
	  I2S_TCSR_REG(I2S0_BASE_PTR) &= ~(I2S_TCSR_FRF_MASK);
    3bfc:	6018      	str	r0, [r3, #0]

	 //Send out the last Queued up values
	  I2S0_TDR0 = LeftOut;
    3bfe:	6811      	ldr	r1, [r2, #0]
	  I2S0_TDR0 = RightOut;
    3c00:	f64e 2230 	movw	r2, #59952	; 0xea30
    3c04:	f6c1 72ff 	movt	r2, #8191	; 0x1fff
	  IO_DELTA_ON;
	  
	  I2S_TCSR_REG(I2S0_BASE_PTR) &= ~(I2S_TCSR_FRF_MASK);

	 //Send out the last Queued up values
	  I2S0_TDR0 = LeftOut;
    3c08:	6219      	str	r1, [r3, #32]
	  I2S0_TDR0 = RightOut;
    3c0a:	6810      	ldr	r0, [r2, #0]
    3c0c:	6218      	str	r0, [r3, #32]
	  
	  //Process the next set of samples
	  AudioProcess();
    3c0e:	f7fe feb3 	bl	2978 <AudioProcess>
	  
	  IO_DELTA_OFF;
    3c12:	60a5      	str	r5, [r4, #8]
    3c14:	bd38      	pop	{r3, r4, r5, pc}
    3c16:	bf00      	nop

00003c18 <SysTick_Handler>:
    // its Interrupt line is not passed through NVIC.   You need to make sure that
    //the SysTickIRQ function is populated in the vector table.  See the kinetis_sysinit.c file
}

void SysTick_Handler()
{
    3c18:	4770      	bx	lr
    3c1a:	bf00      	nop

00003c1c <main>:
	//	LED1_TOGGLE;
}


int main(void)
{
    3c1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3c20:	b085      	sub	sp, #20
	 float TempFloat;
	 q31_t TempQ31_t;
	    
	//Get up and running to 50MHz!
    pll_init(8000000, LOW_POWER, CRYSTAL, 4, 25, 1);
    3c22:	2401      	movs	r4, #1
    3c24:	2519      	movs	r5, #25
    3c26:	f44f 5090 	mov.w	r0, #4608	; 0x1200
    3c2a:	2100      	movs	r1, #0
    3c2c:	4622      	mov	r2, r4
    3c2e:	2304      	movs	r3, #4
    3c30:	9500      	str	r5, [sp, #0]
    3c32:	9401      	str	r4, [sp, #4]
    3c34:	f2c0 007a 	movt	r0, #122	; 0x7a
    3c38:	f7ff fa62 	bl	3100 <pll_init>
 
    InitIO();
    3c3c:	f7ff f9fe 	bl	303c <InitIO>
    InitAudioProcess();
    3c40:	f7fe fe7a 	bl	2938 <InitAudioProcess>
    
    EnableInterrupts;
    3c44:	b662      	cpsie	i
    //Note that computations in the foreground do not have to be very fast.  They will be using cycles not used by the 
    //processing interrupt routines.  For now we will have no other IRQs to devote as much CPU time to the 
    //audio processing
    
    //Switch into the desired Patch
    ChangePatch(PATCH_OVERDRIVE);
    3c46:	2003      	movs	r0, #3
    3c48:	f7fe fe52 	bl	28f0 <ChangePatch>
    3c4c:	4f60      	ldr	r7, [pc, #384]	; (3dd0 <main+0x1b4>)
    3c4e:	f8df a194 	ldr.w	sl, [pc, #404]	; 3de4 <main+0x1c8>
    3c52:	4e60      	ldr	r6, [pc, #384]	; (3dd4 <main+0x1b8>)
    3c54:	4d60      	ldr	r5, [pc, #384]	; (3dd8 <main+0x1bc>)
    3c56:	f8df 9190 	ldr.w	r9, [pc, #400]	; 3de8 <main+0x1cc>
    3c5a:	783c      	ldrb	r4, [r7, #0]
    
    for(;;)
    {
    	//In the main loop we will  read in the potentiomenter values and update the processing routine
    	switch(CurrentPatch)
    3c5c:	2c03      	cmp	r4, #3
    3c5e:	d067      	beq.n	3d30 <main+0x114>
    3c60:	2c05      	cmp	r4, #5
    3c62:	d03f      	beq.n	3ce4 <main+0xc8>
    3c64:	2c02      	cmp	r4, #2
    3c66:	d1f9      	bne.n	3c5c <main+0x40>
    			
   	  			//The use of the variable OD_Level is documented in the audio process routine.  We just need to generate it
    		    		    			
    		   //THis doesn't necessary need to be called every time through the loop but it won't Hurt anything.
    		    		    			
    		   SetPotLimits(POT_ALPHA,0.0,1.0);
    3c68:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
    3c6c:	2100      	movs	r1, #0
    3c6e:	2000      	movs	r0, #0
    3c70:	f7ff fa0c 	bl	308c <SetPotLimits>
    		   //Since a Q31 is 31 bits of fraction and 1 bit of sign,  just
    		   //multiply a binary value of 31 bits by the float and cast back to an integer
    		   TempQ31_t = (q31_t)(0x7fffffff * ReadPOT(POT_ALPHA));
    3c74:	2000      	movs	r0, #0
    3c76:	f7ff fa17 	bl	30a8 <ReadPOT>
    3c7a:	f04f 419e 	mov.w	r1, #1325400064	; 0x4f000000
    3c7e:	f7fd fb97 	bl	13b0 <__aeabi_fmul>
    3c82:	f7fd fd5b 	bl	173c <__aeabi_f2iz>
    		    	
    		   
    		   OD_Level = TempQ31_t;
    		   SetPotLimits(POT_BETA,20,2000);
    3c86:	2100      	movs	r1, #0
    3c88:	2200      	movs	r2, #0
    3c8a:	f2c4 11a0 	movt	r1, #16800	; 0x41a0
    		   //THis doesn't necessary need to be called every time through the loop but it won't Hurt anything.
    		    		    			
    		   SetPotLimits(POT_ALPHA,0.0,1.0);
    		   //Since a Q31 is 31 bits of fraction and 1 bit of sign,  just
    		   //multiply a binary value of 31 bits by the float and cast back to an integer
    		   TempQ31_t = (q31_t)(0x7fffffff * ReadPOT(POT_ALPHA));
    3c8e:	f8ca 0000 	str.w	r0, [sl]
    		    	
    		   
    		   OD_Level = TempQ31_t;
    		   SetPotLimits(POT_BETA,20,2000);
    3c92:	f2c4 42fa 	movt	r2, #17658	; 0x44fa
    3c96:	2001      	movs	r0, #1
     		   SetPotLimits(POT_GAMMA,10,-60);
    3c98:	f04f 0800 	mov.w	r8, #0
    		   //multiply a binary value of 31 bits by the float and cast back to an integer
    		   TempQ31_t = (q31_t)(0x7fffffff * ReadPOT(POT_ALPHA));
    		    	
    		   
    		   OD_Level = TempQ31_t;
    		   SetPotLimits(POT_BETA,20,2000);
    3c9c:	f7ff f9f6 	bl	308c <SetPotLimits>
     		   SetPotLimits(POT_GAMMA,10,-60);
    3ca0:	f2c4 1820 	movt	r8, #16672	; 0x4120
    3ca4:	2200      	movs	r2, #0
    3ca6:	4641      	mov	r1, r8
    3ca8:	f2cc 2270 	movt	r2, #49776	; 0xc270
    3cac:	4620      	mov	r0, r4
    3cae:	f7ff f9ed 	bl	308c <SetPotLimits>
    		    		    			
    		   DesignAudioBiquadIIR_q31_t(&MyIIR[0].Shadow_Coef,// Pointer to the IIR Structure
    3cb2:	6830      	ldr	r0, [r6, #0]
    3cb4:	f7fd fb24 	bl	1300 <__aeabi_ui2f>
    3cb8:	4602      	mov	r2, r0
    3cba:	2001      	movs	r0, #1
    3cbc:	9203      	str	r2, [sp, #12]
    3cbe:	f7ff f9f3 	bl	30a8 <ReadPOT>
    3cc2:	4683      	mov	fp, r0
    3cc4:	4620      	mov	r0, r4
    3cc6:	f7ff f9ef 	bl	30a8 <ReadPOT>
    3cca:	465b      	mov	r3, fp
    3ccc:	9001      	str	r0, [sp, #4]
    3cce:	f8cd 8000 	str.w	r8, [sp]
    3cd2:	2103      	movs	r1, #3
    3cd4:	4841      	ldr	r0, [pc, #260]	; (3ddc <main+0x1c0>)
    3cd6:	9a03      	ldr	r2, [sp, #12]
    3cd8:	f7fd feee 	bl	1ab8 <DesignAudioBiquadIIR_q31_t>
    		    		   				   	   	   	   	   	   // a boost of N dB followed by a cut of N dB for identical Q and
    		    		    			    				   // f0/Fs results in a precisely flat unity gain filter or "wire".)*/
    		    		    			   ReadPOT(POT_GAMMA)// dBgain (used only for peaking and shelving filters)
    		    		 				  );
    		    		    			
    		 	MyIIR[0].Update = 1;
    3cdc:	2301      	movs	r3, #1
    3cde:	f885 3048 	strb.w	r3, [r5, #72]	; 0x48
    		    		    			
    		 	//Flag the processing routine to copy the shadow coef. into the real ones.
    
    		 	break;
    3ce2:	e7ba      	b.n	3c5a <main+0x3e>
    			
    			break;
    			
    		case PATCH_COMB_THE_DESERT:
    			
    			SetPotLimits(POT_BETA,-1,-PEAKING_COMB_SIZE);
    3ce4:	2100      	movs	r1, #0
    3ce6:	2001      	movs	r0, #1
    3ce8:	f6cb 7180 	movt	r1, #49024	; 0xbf80
    3cec:	f04f 4244 	mov.w	r2, #3288334336	; 0xc4000000
    3cf0:	f7ff f9cc 	bl	308c <SetPotLimits>
    			
    			SetPotLimits(POT_GAMMA,-.9,0.9);
    3cf4:	f246 6266 	movw	r2, #26214	; 0x6666
    3cf8:	f246 6166 	movw	r1, #26214	; 0x6666
    3cfc:	f6c3 7266 	movt	r2, #16230	; 0x3f66
    3d00:	f6cb 7166 	movt	r1, #48998	; 0xbf66
    3d04:	2002      	movs	r0, #2
    3d06:	f7ff f9c1 	bl	308c <SetPotLimits>
    			
    			MyPeakingComb.FeedbackTap = (int16_t) ReadPOT(POT_BETA);
    3d0a:	2001      	movs	r0, #1
    3d0c:	f7ff f9cc 	bl	30a8 <ReadPOT>
    3d10:	f7fd fd14 	bl	173c <__aeabi_f2iz>
    3d14:	f8a9 0010 	strh.w	r0, [r9, #16]
    			
    			MyPeakingComb.FeedbackAmplitude = (q31_t)((ReadPOT(POT_GAMMA) * 0x7FFFFFFF));
    3d18:	2002      	movs	r0, #2
    3d1a:	f7ff f9c5 	bl	30a8 <ReadPOT>
    3d1e:	f04f 419e 	mov.w	r1, #1325400064	; 0x4f000000
    3d22:	f7fd fb45 	bl	13b0 <__aeabi_fmul>
    3d26:	f7fd fd09 	bl	173c <__aeabi_f2iz>
    3d2a:	f8c9 0004 	str.w	r0, [r9, #4]
    			
    			break;
    3d2e:	e794      	b.n	3c5a <main+0x3e>
    		case PATCH_OVERDRIVE:
    			
    			//The use of the variable OD_Level is documented in the audio process routine.  We just need to generate it
    		   //THis doesn't necessary need to be called every time through the loop but it won't Hurt anything.
    			
    			SetPotLimits(POT_ALPHA,0.0,-60);
    3d30:	2200      	movs	r2, #0
    3d32:	2000      	movs	r0, #0
    3d34:	2100      	movs	r1, #0
    3d36:	f2cc 2270 	movt	r2, #49776	; 0xc270
    3d3a:	f7ff f9a7 	bl	308c <SetPotLimits>
    			 TempQ31_t = (q31_t)(0x7fffffff * TempFloat);
    			    			
    			 OD_Level = 0x7fffffff;
    			    			
    			
    			SetPotLimits(POT_BETA,1,50);
    3d3e:	2200      	movs	r2, #0
    3d40:	2001      	movs	r0, #1
    3d42:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
    3d46:	f2c4 2248 	movt	r2, #16968	; 0x4248
    			SetPotLimits(POT_ALPHA,0.0,-60);
    			//Since a Q31 is 31 bits of fraction and 1 bit of sign,  just
    			  //multiply a binary value of 31 bits by the float and cast back to an integer
    			 TempQ31_t = (q31_t)(0x7fffffff * TempFloat);
    			    			
    			 OD_Level = 0x7fffffff;
    3d4a:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
    3d4e:	f8ca 4000 	str.w	r4, [sl]
    			    			
    			
    			SetPotLimits(POT_BETA,1,50);
    3d52:	f7ff f99b 	bl	308c <SetPotLimits>
    			SetPotLimits(POT_GAMMA,50,800);
    3d56:	2100      	movs	r1, #0
    3d58:	2200      	movs	r2, #0
    3d5a:	f2c4 2148 	movt	r1, #16968	; 0x4248
    3d5e:	f2c4 4248 	movt	r2, #17480	; 0x4448
    3d62:	2002      	movs	r0, #2
    3d64:	f7ff f992 	bl	308c <SetPotLimits>
    			
    			TempFloat = ReadPOT(POT_ALPHA);
    3d68:	2000      	movs	r0, #0
    3d6a:	f7ff f99d 	bl	30a8 <ReadPOT>
    			
   
 			
    			
    			DesignAudioBiquadIIR_q31_t(&MyIIR[0].Shadow_Coef,// Pointer to the IIR Structure
    3d6e:	6830      	ldr	r0, [r6, #0]
    3d70:	f7fd fac6 	bl	1300 <__aeabi_ui2f>
    3d74:	4683      	mov	fp, r0
    3d76:	2001      	movs	r0, #1
    3d78:	f7ff f996 	bl	30a8 <ReadPOT>
    3d7c:	4680      	mov	r8, r0
    3d7e:	2002      	movs	r0, #2
    3d80:	f7ff f992 	bl	30a8 <ReadPOT>
    3d84:	4604      	mov	r4, r0
    3d86:	2000      	movs	r0, #0
    3d88:	f7ff f98e 	bl	30a8 <ReadPOT>
    3d8c:	465a      	mov	r2, fp
    3d8e:	2108      	movs	r1, #8
    3d90:	4643      	mov	r3, r8
    3d92:	9001      	str	r0, [sp, #4]
    3d94:	9400      	str	r4, [sp, #0]
    3d96:	4811      	ldr	r0, [pc, #68]	; (3ddc <main+0x1c0>)
    3d98:	f7fd fe8e 	bl	1ab8 <DesignAudioBiquadIIR_q31_t>
    			    									   // a boost of N dB followed by a cut of N dB for identical Q and
    			    									   // f0/Fs results in a precisely flat unity gain filter or "wire".)*/
    			    						   ReadPOT(POT_ALPHA)// (used only for peaking and shelving filters)
    			    								);
    			
    			DesignAudioBiquadIIR_q31_t(&MyIIR[1].Shadow_Coef,// Pointer to the IIR Structure
    3d9c:	6830      	ldr	r0, [r6, #0]
    3d9e:	f7fd faaf 	bl	1300 <__aeabi_ui2f>
    3da2:	4683      	mov	fp, r0
    3da4:	2002      	movs	r0, #2
    3da6:	f7ff f97f 	bl	30a8 <ReadPOT>
    3daa:	4604      	mov	r4, r0
    3dac:	2001      	movs	r0, #1
    3dae:	f7ff f97b 	bl	30a8 <ReadPOT>
    3db2:	2100      	movs	r1, #0
    3db4:	9100      	str	r1, [sp, #0]
    3db6:	9001      	str	r0, [sp, #4]
    3db8:	2107      	movs	r1, #7
    3dba:	4809      	ldr	r0, [pc, #36]	; (3de0 <main+0x1c4>)
    3dbc:	465a      	mov	r2, fp
    3dbe:	4623      	mov	r3, r4
    3dc0:	f7fd fe7a 	bl	1ab8 <DesignAudioBiquadIIR_q31_t>
    			    			    									   // a boost of N dB followed by a cut of N dB for identical Q and
    			    			    									   // f0/Fs results in a precisely flat unity gain filter or "wire".)*/
    			    			    						   ReadPOT(POT_BETA)// (used only for peaking and shelving filters)
    			    			    								);
    			
    			MyIIR[0].Update = 1;
    3dc4:	2001      	movs	r0, #1
    3dc6:	f885 0048 	strb.w	r0, [r5, #72]	; 0x48
    			MyIIR[1].Update = 1;
    3dca:	f885 0098 	strb.w	r0, [r5, #152]	; 0x98
    			    			
    			//Copy in our value,   From there it will be used in the interrupt routine
    			
    			
    			
    			break;
    3dce:	e744      	b.n	3c5a <main+0x3e>
    3dd0:	1fffe000 	.word	0x1fffe000
    3dd4:	1fffea38 	.word	0x1fffea38
    3dd8:	1fffe0d0 	.word	0x1fffe0d0
    3ddc:	1fffe100 	.word	0x1fffe100
    3de0:	1fffe150 	.word	0x1fffe150
    3de4:	1fffe034 	.word	0x1fffe034
    3de8:	1fffea1c 	.word	0x1fffea1c

00003dec <exit>:
    3dec:	4c0b      	ldr	r4, [pc, #44]	; (3e1c <exit+0x30>)
    3dee:	b508      	push	{r3, lr}
    3df0:	4605      	mov	r5, r0
    3df2:	f004 f80b 	bl	7e0c <__destroy_global_chain>
    3df6:	f003 ffb5 	bl	7d64 <__fini_cpp>
    3dfa:	6823      	ldr	r3, [r4, #0]
    3dfc:	b113      	cbz	r3, 3e04 <exit+0x18>
    3dfe:	4798      	blx	r3
    3e00:	2000      	movs	r0, #0
    3e02:	6020      	str	r0, [r4, #0]
    3e04:	4c06      	ldr	r4, [pc, #24]	; (3e20 <exit+0x34>)
    3e06:	6821      	ldr	r1, [r4, #0]
    3e08:	b111      	cbz	r1, 3e10 <exit+0x24>
    3e0a:	4788      	blx	r1
    3e0c:	2200      	movs	r2, #0
    3e0e:	6022      	str	r2, [r4, #0]
    3e10:	4628      	mov	r0, r5
    3e12:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    3e16:	f7fd bd0f 	b.w	1838 <_ExitProcess>
    3e1a:	bf00      	nop
    3e1c:	1fffe048 	.word	0x1fffe048
    3e20:	1fffe04c 	.word	0x1fffe04c

00003e24 <memset>:
    3e24:	b510      	push	{r4, lr}
    3e26:	4604      	mov	r4, r0
    3e28:	f001 fd6a 	bl	5900 <__fill_mem>
    3e2c:	4620      	mov	r0, r4
    3e2e:	bd10      	pop	{r4, pc}

00003e30 <long2str.isra.0>:
    3e30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3e34:	b085      	sub	sp, #20
    3e36:	4680      	mov	r8, r0
    3e38:	9203      	str	r2, [sp, #12]
    3e3a:	2200      	movs	r2, #0
    3e3c:	f89d c038 	ldrb.w	ip, [sp, #56]	; 0x38
    3e40:	f89d 403c 	ldrb.w	r4, [sp, #60]	; 0x3c
    3e44:	f801 2c01 	strb.w	r2, [r1, #-1]
    3e48:	f101 3aff 	add.w	sl, r1, #4294967295
    3e4c:	b9d0      	cbnz	r0, 3e84 <long2str.isra.0+0x54>
    3e4e:	9a11      	ldr	r2, [sp, #68]	; 0x44
    3e50:	b9c2      	cbnz	r2, 3e84 <long2str.isra.0+0x54>
    3e52:	f1bc 0f00 	cmp.w	ip, #0
    3e56:	d001      	beq.n	3e5c <long2str.isra.0+0x2c>
    3e58:	2c6f      	cmp	r4, #111	; 0x6f
    3e5a:	d031      	beq.n	3ec0 <long2str.isra.0+0x90>
    3e5c:	2c64      	cmp	r4, #100	; 0x64
    3e5e:	d002      	beq.n	3e66 <long2str.isra.0+0x36>
    3e60:	2c69      	cmp	r4, #105	; 0x69
    3e62:	f040 80ac 	bne.w	3fbe <long2str.isra.0+0x18e>
    3e66:	2b02      	cmp	r3, #2
    3e68:	d103      	bne.n	3e72 <long2str.isra.0+0x42>
    3e6a:	f1a1 0a02 	sub.w	sl, r1, #2
    3e6e:	2020      	movs	r0, #32
    3e70:	e005      	b.n	3e7e <long2str.isra.0+0x4e>
    3e72:	2b01      	cmp	r3, #1
    3e74:	f040 80a3 	bne.w	3fbe <long2str.isra.0+0x18e>
    3e78:	f1a1 0a02 	sub.w	sl, r1, #2
    3e7c:	202b      	movs	r0, #43	; 0x2b
    3e7e:	f801 0c02 	strb.w	r0, [r1, #-2]
    3e82:	e09c      	b.n	3fbe <long2str.isra.0+0x18e>
    3e84:	2c69      	cmp	r4, #105	; 0x69
    3e86:	d00f      	beq.n	3ea8 <long2str.isra.0+0x78>
    3e88:	d804      	bhi.n	3e94 <long2str.isra.0+0x64>
    3e8a:	2c58      	cmp	r4, #88	; 0x58
    3e8c:	d014      	beq.n	3eb8 <long2str.isra.0+0x88>
    3e8e:	2c64      	cmp	r4, #100	; 0x64
    3e90:	d11a      	bne.n	3ec8 <long2str.isra.0+0x98>
    3e92:	e009      	b.n	3ea8 <long2str.isra.0+0x78>
    3e94:	2c75      	cmp	r4, #117	; 0x75
    3e96:	d005      	beq.n	3ea4 <long2str.isra.0+0x74>
    3e98:	2c78      	cmp	r4, #120	; 0x78
    3e9a:	d00d      	beq.n	3eb8 <long2str.isra.0+0x88>
    3e9c:	2c6f      	cmp	r4, #111	; 0x6f
    3e9e:	d113      	bne.n	3ec8 <long2str.isra.0+0x98>
    3ea0:	2300      	movs	r3, #0
    3ea2:	e00e      	b.n	3ec2 <long2str.isra.0+0x92>
    3ea4:	2300      	movs	r3, #0
    3ea6:	e00f      	b.n	3ec8 <long2str.isra.0+0x98>
    3ea8:	2800      	cmp	r0, #0
    3eaa:	da0d      	bge.n	3ec8 <long2str.isra.0+0x98>
    3eac:	f1b0 4f00 	cmp.w	r0, #2147483648	; 0x80000000
    3eb0:	d00c      	beq.n	3ecc <long2str.isra.0+0x9c>
    3eb2:	4240      	negs	r0, r0
    3eb4:	4680      	mov	r8, r0
    3eb6:	e009      	b.n	3ecc <long2str.isra.0+0x9c>
    3eb8:	2300      	movs	r3, #0
    3eba:	461d      	mov	r5, r3
    3ebc:	2210      	movs	r2, #16
    3ebe:	e007      	b.n	3ed0 <long2str.isra.0+0xa0>
    3ec0:	9b11      	ldr	r3, [sp, #68]	; 0x44
    3ec2:	461d      	mov	r5, r3
    3ec4:	2208      	movs	r2, #8
    3ec6:	e003      	b.n	3ed0 <long2str.isra.0+0xa0>
    3ec8:	2500      	movs	r5, #0
    3eca:	e000      	b.n	3ece <long2str.isra.0+0x9e>
    3ecc:	2501      	movs	r5, #1
    3ece:	220a      	movs	r2, #10
    3ed0:	1e8e      	subs	r6, r1, #2
    3ed2:	9601      	str	r6, [sp, #4]
    3ed4:	f04f 0a00 	mov.w	sl, #0
    3ed8:	fbb8 f7f2 	udiv	r7, r8, r2
    3edc:	fb02 8b17 	mls	fp, r2, r7, r8
    3ee0:	f1bb 0f09 	cmp.w	fp, #9
    3ee4:	9702      	str	r7, [sp, #8]
    3ee6:	46b8      	mov	r8, r7
    3ee8:	d802      	bhi.n	3ef0 <long2str.isra.0+0xc0>
    3eea:	f10b 0b30 	add.w	fp, fp, #48	; 0x30
    3eee:	e005      	b.n	3efc <long2str.isra.0+0xcc>
    3ef0:	2c78      	cmp	r4, #120	; 0x78
    3ef2:	bf0c      	ite	eq
    3ef4:	f10b 0b57 	addeq.w	fp, fp, #87	; 0x57
    3ef8:	f10b 0b37 	addne.w	fp, fp, #55	; 0x37
    3efc:	9f01      	ldr	r7, [sp, #4]
    3efe:	9e02      	ldr	r6, [sp, #8]
    3f00:	f107 39ff 	add.w	r9, r7, #4294967295
    3f04:	fa5f fb8b 	uxtb.w	fp, fp
    3f08:	f8cd 9004 	str.w	r9, [sp, #4]
    3f0c:	f887 b000 	strb.w	fp, [r7]
    3f10:	f10a 0901 	add.w	r9, sl, #1
    3f14:	b10e      	cbz	r6, 3f1a <long2str.isra.0+0xea>
    3f16:	46ca      	mov	sl, r9
    3f18:	e7de      	b.n	3ed8 <long2str.isra.0+0xa8>
    3f1a:	2a08      	cmp	r2, #8
    3f1c:	46b8      	mov	r8, r7
    3f1e:	d10c      	bne.n	3f3a <long2str.isra.0+0x10a>
    3f20:	f1bc 0f00 	cmp.w	ip, #0
    3f24:	d009      	beq.n	3f3a <long2str.isra.0+0x10a>
    3f26:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
    3f2a:	d006      	beq.n	3f3a <long2str.isra.0+0x10a>
    3f2c:	f04f 0930 	mov.w	r9, #48	; 0x30
    3f30:	9f01      	ldr	r7, [sp, #4]
    3f32:	f808 9c01 	strb.w	r9, [r8, #-1]
    3f36:	f10a 0902 	add.w	r9, sl, #2
    3f3a:	9e03      	ldr	r6, [sp, #12]
    3f3c:	2e02      	cmp	r6, #2
    3f3e:	d10c      	bne.n	3f5a <long2str.isra.0+0x12a>
    3f40:	b905      	cbnz	r5, 3f44 <long2str.isra.0+0x114>
    3f42:	b113      	cbz	r3, 3f4a <long2str.isra.0+0x11a>
    3f44:	9e10      	ldr	r6, [sp, #64]	; 0x40
    3f46:	3e01      	subs	r6, #1
    3f48:	9610      	str	r6, [sp, #64]	; 0x40
    3f4a:	2a10      	cmp	r2, #16
    3f4c:	9e10      	ldr	r6, [sp, #64]	; 0x40
    3f4e:	d103      	bne.n	3f58 <long2str.isra.0+0x128>
    3f50:	f1bc 0f00 	cmp.w	ip, #0
    3f54:	d000      	beq.n	3f58 <long2str.isra.0+0x128>
    3f56:	3e02      	subs	r6, #2
    3f58:	9611      	str	r6, [sp, #68]	; 0x44
    3f5a:	9e11      	ldr	r6, [sp, #68]	; 0x44
    3f5c:	1bc9      	subs	r1, r1, r7
    3f5e:	1989      	adds	r1, r1, r6
    3f60:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
    3f64:	da29      	bge.n	3fba <long2str.isra.0+0x18a>
    3f66:	4639      	mov	r1, r7
    3f68:	eb07 0809 	add.w	r8, r7, r9
    3f6c:	9e11      	ldr	r6, [sp, #68]	; 0x44
    3f6e:	ebc1 0808 	rsb	r8, r1, r8
    3f72:	45b0      	cmp	r8, r6
    3f74:	468a      	mov	sl, r1
    3f76:	da04      	bge.n	3f82 <long2str.isra.0+0x152>
    3f78:	f04f 0630 	mov.w	r6, #48	; 0x30
    3f7c:	f801 6d01 	strb.w	r6, [r1, #-1]!
    3f80:	e7f2      	b.n	3f68 <long2str.isra.0+0x138>
    3f82:	2a10      	cmp	r2, #16
    3f84:	d10a      	bne.n	3f9c <long2str.isra.0+0x16c>
    3f86:	f1bc 0f00 	cmp.w	ip, #0
    3f8a:	d007      	beq.n	3f9c <long2str.isra.0+0x16c>
    3f8c:	b130      	cbz	r0, 3f9c <long2str.isra.0+0x16c>
    3f8e:	2030      	movs	r0, #48	; 0x30
    3f90:	f801 4c01 	strb.w	r4, [r1, #-1]
    3f94:	f1a1 0a02 	sub.w	sl, r1, #2
    3f98:	f801 0c02 	strb.w	r0, [r1, #-2]
    3f9c:	b10d      	cbz	r5, 3fa2 <long2str.isra.0+0x172>
    3f9e:	232d      	movs	r3, #45	; 0x2d
    3fa0:	e006      	b.n	3fb0 <long2str.isra.0+0x180>
    3fa2:	2b01      	cmp	r3, #1
    3fa4:	d101      	bne.n	3faa <long2str.isra.0+0x17a>
    3fa6:	232b      	movs	r3, #43	; 0x2b
    3fa8:	e002      	b.n	3fb0 <long2str.isra.0+0x180>
    3faa:	2b02      	cmp	r3, #2
    3fac:	d107      	bne.n	3fbe <long2str.isra.0+0x18e>
    3fae:	2320      	movs	r3, #32
    3fb0:	f80a 3c01 	strb.w	r3, [sl, #-1]
    3fb4:	f10a 3aff 	add.w	sl, sl, #4294967295
    3fb8:	e001      	b.n	3fbe <long2str.isra.0+0x18e>
    3fba:	f04f 0a00 	mov.w	sl, #0
    3fbe:	4650      	mov	r0, sl
    3fc0:	b005      	add	sp, #20
    3fc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

00003fc8 <__pformatter>:
    3fc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3fcc:	f5ad 7d1b 	sub.w	sp, sp, #620	; 0x26c
    3fd0:	4698      	mov	r8, r3
    3fd2:	2320      	movs	r3, #32
    3fd4:	9008      	str	r0, [sp, #32]
    3fd6:	9109      	str	r1, [sp, #36]	; 0x24
    3fd8:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
    3fdc:	9207      	str	r2, [sp, #28]
    3fde:	2600      	movs	r6, #0
    3fe0:	9d07      	ldr	r5, [sp, #28]
    3fe2:	7828      	ldrb	r0, [r5, #0]
    3fe4:	2800      	cmp	r0, #0
    3fe6:	f000 8406 	beq.w	47f6 <__pformatter+0x82e>
    3fea:	9807      	ldr	r0, [sp, #28]
    3fec:	2125      	movs	r1, #37	; 0x25
    3fee:	f001 fcce 	bl	598e <strchr>
    3ff2:	900c      	str	r0, [sp, #48]	; 0x30
    3ff4:	b978      	cbnz	r0, 4016 <__pformatter+0x4e>
    3ff6:	9807      	ldr	r0, [sp, #28]
    3ff8:	f001 fcdd 	bl	59b6 <strlen>
    3ffc:	4602      	mov	r2, r0
    3ffe:	1836      	adds	r6, r6, r0
    4000:	2800      	cmp	r0, #0
    4002:	f000 83f8 	beq.w	47f6 <__pformatter+0x82e>
    4006:	9809      	ldr	r0, [sp, #36]	; 0x24
    4008:	9907      	ldr	r1, [sp, #28]
    400a:	9d08      	ldr	r5, [sp, #32]
    400c:	47a8      	blx	r5
    400e:	2800      	cmp	r0, #0
    4010:	f040 83f1 	bne.w	47f6 <__pformatter+0x82e>
    4014:	e342      	b.n	469c <__pformatter+0x6d4>
    4016:	9d0c      	ldr	r5, [sp, #48]	; 0x30
    4018:	9907      	ldr	r1, [sp, #28]
    401a:	1a6a      	subs	r2, r5, r1
    401c:	18b6      	adds	r6, r6, r2
    401e:	b132      	cbz	r2, 402e <__pformatter+0x66>
    4020:	9809      	ldr	r0, [sp, #36]	; 0x24
    4022:	9907      	ldr	r1, [sp, #28]
    4024:	9d08      	ldr	r5, [sp, #32]
    4026:	47a8      	blx	r5
    4028:	2800      	cmp	r0, #0
    402a:	f000 8337 	beq.w	469c <__pformatter+0x6d4>
    402e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    4030:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    4032:	7863      	ldrb	r3, [r4, #1]
    4034:	3201      	adds	r2, #1
    4036:	2b25      	cmp	r3, #37	; 0x25
    4038:	461c      	mov	r4, r3
    403a:	d005      	beq.n	4048 <__pformatter+0x80>
    403c:	2500      	movs	r5, #0
    403e:	9505      	str	r5, [sp, #20]
    4040:	9506      	str	r5, [sp, #24]
    4042:	f04f 0a01 	mov.w	sl, #1
    4046:	e015      	b.n	4074 <__pformatter+0xac>
    4048:	9d0c      	ldr	r5, [sp, #48]	; 0x30
    404a:	1caa      	adds	r2, r5, #2
    404c:	2500      	movs	r5, #0
    404e:	9207      	str	r2, [sp, #28]
    4050:	46ab      	mov	fp, r5
    4052:	462a      	mov	r2, r5
    4054:	9505      	str	r5, [sp, #20]
    4056:	9506      	str	r5, [sp, #24]
    4058:	f04f 0a01 	mov.w	sl, #1
    405c:	2b58      	cmp	r3, #88	; 0x58
    405e:	e058      	b.n	4112 <__pformatter+0x14a>
    4060:	dc0b      	bgt.n	407a <__pformatter+0xb2>
    4062:	2b20      	cmp	r3, #32
    4064:	d017      	beq.n	4096 <__pformatter+0xce>
    4066:	2b23      	cmp	r3, #35	; 0x23
    4068:	f040 8291 	bne.w	458e <__pformatter+0x5c6>
    406c:	2501      	movs	r5, #1
    406e:	9505      	str	r5, [sp, #20]
    4070:	f812 3f01 	ldrb.w	r3, [r2, #1]!
    4074:	2b2b      	cmp	r3, #43	; 0x2b
    4076:	d1f3      	bne.n	4060 <__pformatter+0x98>
    4078:	e3b8      	b.n	47ec <__pformatter+0x824>
    407a:	2b2d      	cmp	r3, #45	; 0x2d
    407c:	f000 83b3 	beq.w	47e6 <__pformatter+0x81e>
    4080:	2b30      	cmp	r3, #48	; 0x30
    4082:	f040 8284 	bne.w	458e <__pformatter+0x5c6>
    4086:	f1ba 0f00 	cmp.w	sl, #0
    408a:	bf14      	ite	ne
    408c:	f04f 0a02 	movne.w	sl, #2
    4090:	f04f 0a00 	moveq.w	sl, #0
    4094:	e7ec      	b.n	4070 <__pformatter+0xa8>
    4096:	f8dd 9018 	ldr.w	r9, [sp, #24]
    409a:	f1b9 0f01 	cmp.w	r9, #1
    409e:	bf0c      	ite	eq
    40a0:	f04f 0901 	moveq.w	r9, #1
    40a4:	f04f 0902 	movne.w	r9, #2
    40a8:	e3a2      	b.n	47f0 <__pformatter+0x828>
    40aa:	f8d8 5000 	ldr.w	r5, [r8]
    40ae:	43eb      	mvns	r3, r5
    40b0:	0fd9      	lsrs	r1, r3, #31
    40b2:	f108 0804 	add.w	r8, r8, #4
    40b6:	7883      	ldrb	r3, [r0, #2]
    40b8:	3002      	adds	r0, #2
    40ba:	f1a3 044c 	sub.w	r4, r3, #76	; 0x4c
    40be:	2c20      	cmp	r4, #32
    40c0:	f200 8318 	bhi.w	46f4 <__pformatter+0x72c>
    40c4:	4fb4      	ldr	r7, [pc, #720]	; (4398 <__pformatter+0x3d0>)
    40c6:	5d3a      	ldrb	r2, [r7, r4]
    40c8:	4fb4      	ldr	r7, [pc, #720]	; (439c <__pformatter+0x3d4>)
    40ca:	573c      	ldrsb	r4, [r7, r4]
    40cc:	b10c      	cbz	r4, 40d2 <__pformatter+0x10a>
    40ce:	7843      	ldrb	r3, [r0, #1]
    40d0:	3001      	adds	r0, #1
    40d2:	2b66      	cmp	r3, #102	; 0x66
    40d4:	b2dc      	uxtb	r4, r3
    40d6:	f000 8333 	beq.w	4740 <__pformatter+0x778>
    40da:	f340 830d 	ble.w	46f8 <__pformatter+0x730>
    40de:	2b6f      	cmp	r3, #111	; 0x6f
    40e0:	f000 8325 	beq.w	472e <__pformatter+0x766>
    40e4:	f340 8318 	ble.w	4718 <__pformatter+0x750>
    40e8:	2b73      	cmp	r3, #115	; 0x73
    40ea:	f000 8337 	beq.w	475c <__pformatter+0x794>
    40ee:	f300 831a 	bgt.w	4726 <__pformatter+0x75e>
    40f2:	2b70      	cmp	r3, #112	; 0x70
    40f4:	f040 833c 	bne.w	4770 <__pformatter+0x7a8>
    40f8:	2301      	movs	r3, #1
    40fa:	2478      	movs	r4, #120	; 0x78
    40fc:	2508      	movs	r5, #8
    40fe:	2203      	movs	r2, #3
    4100:	9305      	str	r3, [sp, #20]
    4102:	3001      	adds	r0, #1
    4104:	2c67      	cmp	r4, #103	; 0x67
    4106:	9007      	str	r0, [sp, #28]
    4108:	d816      	bhi.n	4138 <__pformatter+0x170>
    410a:	2c65      	cmp	r4, #101	; 0x65
    410c:	d241      	bcs.n	4192 <__pformatter+0x1ca>
    410e:	2c58      	cmp	r4, #88	; 0x58
    4110:	d02b      	beq.n	416a <__pformatter+0x1a2>
    4112:	d80a      	bhi.n	412a <__pformatter+0x162>
    4114:	2c25      	cmp	r4, #37	; 0x25
    4116:	f000 8232 	beq.w	457e <__pformatter+0x5b6>
    411a:	f0c0 824d 	bcc.w	45b8 <__pformatter+0x5f0>
    411e:	f1a4 0045 	sub.w	r0, r4, #69	; 0x45
    4122:	2802      	cmp	r0, #2
    4124:	f200 8248 	bhi.w	45b8 <__pformatter+0x5f0>
    4128:	e033      	b.n	4192 <__pformatter+0x1ca>
    412a:	2c63      	cmp	r4, #99	; 0x63
    412c:	f000 8220 	beq.w	4570 <__pformatter+0x5a8>
    4130:	2c64      	cmp	r4, #100	; 0x64
    4132:	f040 8241 	bne.w	45b8 <__pformatter+0x5f0>
    4136:	e005      	b.n	4144 <__pformatter+0x17c>
    4138:	2c6f      	cmp	r4, #111	; 0x6f
    413a:	d016      	beq.n	416a <__pformatter+0x1a2>
    413c:	d812      	bhi.n	4164 <__pformatter+0x19c>
    413e:	2c69      	cmp	r4, #105	; 0x69
    4140:	f040 8318 	bne.w	4774 <__pformatter+0x7ac>
    4144:	2a03      	cmp	r2, #3
    4146:	f8d8 0000 	ldr.w	r0, [r8]
    414a:	f108 0704 	add.w	r7, r8, #4
    414e:	d006      	beq.n	415e <__pformatter+0x196>
    4150:	2a02      	cmp	r2, #2
    4152:	d101      	bne.n	4158 <__pformatter+0x190>
    4154:	b200      	sxth	r0, r0
    4156:	e002      	b.n	415e <__pformatter+0x196>
    4158:	2a01      	cmp	r2, #1
    415a:	bf08      	it	eq
    415c:	b240      	sxtbeq	r0, r0
    415e:	9b05      	ldr	r3, [sp, #20]
    4160:	9300      	str	r3, [sp, #0]
    4162:	e00b      	b.n	417c <__pformatter+0x1b4>
    4164:	2c75      	cmp	r4, #117	; 0x75
    4166:	f040 8232 	bne.w	45ce <__pformatter+0x606>
    416a:	2a03      	cmp	r2, #3
    416c:	f8d8 0000 	ldr.w	r0, [r8]
    4170:	f108 0704 	add.w	r7, r8, #4
    4174:	f040 8302 	bne.w	477c <__pformatter+0x7b4>
    4178:	9905      	ldr	r1, [sp, #20]
    417a:	9100      	str	r1, [sp, #0]
    417c:	9401      	str	r4, [sp, #4]
    417e:	f8cd b008 	str.w	fp, [sp, #8]
    4182:	9503      	str	r5, [sp, #12]
    4184:	a99a      	add	r1, sp, #616	; 0x268
    4186:	4652      	mov	r2, sl
    4188:	9b06      	ldr	r3, [sp, #24]
    418a:	f7ff fe51 	bl	3e30 <long2str.isra.0>
    418e:	4681      	mov	r9, r0
    4190:	e1e6      	b.n	4560 <__pformatter+0x598>
    4192:	f108 0807 	add.w	r8, r8, #7
    4196:	f028 0107 	bic.w	r1, r8, #7
    419a:	e9d1 8900 	ldrd	r8, r9, [r1]
    419e:	f5b5 7fff 	cmp.w	r5, #510	; 0x1fe
    41a2:	f101 0708 	add.w	r7, r1, #8
    41a6:	e9cd 890a 	strd	r8, r9, [sp, #40]	; 0x28
    41aa:	f280 8205 	bge.w	45b8 <__pformatter+0x5f0>
    41ae:	f10d 0840 	add.w	r8, sp, #64	; 0x40
    41b2:	2300      	movs	r3, #0
    41b4:	2220      	movs	r2, #32
    41b6:	f88d 303c 	strb.w	r3, [sp, #60]	; 0x3c
    41ba:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
    41be:	f8cd 8000 	str.w	r8, [sp]
    41c2:	a80f      	add	r0, sp, #60	; 0x3c
    41c4:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
    41c8:	f001 fbfe 	bl	59c8 <__num2dec>
    41cc:	f898 0004 	ldrb.w	r0, [r8, #4]
    41d0:	4480      	add	r8, r0
    41d2:	f108 0005 	add.w	r0, r8, #5
    41d6:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
    41da:	2b01      	cmp	r3, #1
    41dc:	d90c      	bls.n	41f8 <__pformatter+0x230>
    41de:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
    41e2:	2930      	cmp	r1, #48	; 0x30
    41e4:	d108      	bne.n	41f8 <__pformatter+0x230>
    41e6:	f8bd 1042 	ldrh.w	r1, [sp, #66]	; 0x42
    41ea:	3b01      	subs	r3, #1
    41ec:	1c4a      	adds	r2, r1, #1
    41ee:	f88d 3044 	strb.w	r3, [sp, #68]	; 0x44
    41f2:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
    41f6:	e7ee      	b.n	41d6 <__pformatter+0x20e>
    41f8:	f89d 2045 	ldrb.w	r2, [sp, #69]	; 0x45
    41fc:	2a49      	cmp	r2, #73	; 0x49
    41fe:	d007      	beq.n	4210 <__pformatter+0x248>
    4200:	2a4e      	cmp	r2, #78	; 0x4e
    4202:	d024      	beq.n	424e <__pformatter+0x286>
    4204:	2a30      	cmp	r2, #48	; 0x30
    4206:	d142      	bne.n	428e <__pformatter+0x2c6>
    4208:	2000      	movs	r0, #0
    420a:	f8ad 0042 	strh.w	r0, [sp, #66]	; 0x42
    420e:	e03e      	b.n	428e <__pformatter+0x2c6>
    4210:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    4214:	2200      	movs	r2, #0
    4216:	2300      	movs	r3, #0
    4218:	f7fc ff1c 	bl	1054 <__aeabi_dcmplt>
    421c:	b158      	cbz	r0, 4236 <__pformatter+0x26e>
    421e:	4620      	mov	r0, r4
    4220:	f000 fede 	bl	4fe0 <isupper>
    4224:	b118      	cbz	r0, 422e <__pformatter+0x266>
    4226:	f20d 2063 	addw	r0, sp, #611	; 0x263
    422a:	495d      	ldr	r1, [pc, #372]	; (43a0 <__pformatter+0x3d8>)
    422c:	e019      	b.n	4262 <__pformatter+0x29a>
    422e:	f20d 2063 	addw	r0, sp, #611	; 0x263
    4232:	495c      	ldr	r1, [pc, #368]	; (43a4 <__pformatter+0x3dc>)
    4234:	e015      	b.n	4262 <__pformatter+0x29a>
    4236:	4620      	mov	r0, r4
    4238:	f000 fed2 	bl	4fe0 <isupper>
    423c:	f50d 7919 	add.w	r9, sp, #612	; 0x264
    4240:	b110      	cbz	r0, 4248 <__pformatter+0x280>
    4242:	4648      	mov	r0, r9
    4244:	4958      	ldr	r1, [pc, #352]	; (43a8 <__pformatter+0x3e0>)
    4246:	e01f      	b.n	4288 <__pformatter+0x2c0>
    4248:	4648      	mov	r0, r9
    424a:	4958      	ldr	r1, [pc, #352]	; (43ac <__pformatter+0x3e4>)
    424c:	e01c      	b.n	4288 <__pformatter+0x2c0>
    424e:	f99d 2040 	ldrsb.w	r2, [sp, #64]	; 0x40
    4252:	4620      	mov	r0, r4
    4254:	b172      	cbz	r2, 4274 <__pformatter+0x2ac>
    4256:	f000 fec3 	bl	4fe0 <isupper>
    425a:	b138      	cbz	r0, 426c <__pformatter+0x2a4>
    425c:	4954      	ldr	r1, [pc, #336]	; (43b0 <__pformatter+0x3e8>)
    425e:	f20d 2063 	addw	r0, sp, #611	; 0x263
    4262:	f001 fba1 	bl	59a8 <strcpy>
    4266:	f20d 2963 	addw	r9, sp, #611	; 0x263
    426a:	e179      	b.n	4560 <__pformatter+0x598>
    426c:	f20d 2063 	addw	r0, sp, #611	; 0x263
    4270:	4950      	ldr	r1, [pc, #320]	; (43b4 <__pformatter+0x3ec>)
    4272:	e7f6      	b.n	4262 <__pformatter+0x29a>
    4274:	f000 feb4 	bl	4fe0 <isupper>
    4278:	f50d 7919 	add.w	r9, sp, #612	; 0x264
    427c:	b110      	cbz	r0, 4284 <__pformatter+0x2bc>
    427e:	4648      	mov	r0, r9
    4280:	494d      	ldr	r1, [pc, #308]	; (43b8 <__pformatter+0x3f0>)
    4282:	e001      	b.n	4288 <__pformatter+0x2c0>
    4284:	494d      	ldr	r1, [pc, #308]	; (43bc <__pformatter+0x3f4>)
    4286:	4648      	mov	r0, r9
    4288:	f001 fb8e 	bl	59a8 <strcpy>
    428c:	e168      	b.n	4560 <__pformatter+0x598>
    428e:	f8bd 1042 	ldrh.w	r1, [sp, #66]	; 0x42
    4292:	1e4a      	subs	r2, r1, #1
    4294:	1898      	adds	r0, r3, r2
    4296:	2100      	movs	r1, #0
    4298:	2c47      	cmp	r4, #71	; 0x47
    429a:	f8ad 0042 	strh.w	r0, [sp, #66]	; 0x42
    429e:	f88d 1267 	strb.w	r1, [sp, #615]	; 0x267
    42a2:	d00f      	beq.n	42c4 <__pformatter+0x2fc>
    42a4:	d805      	bhi.n	42b2 <__pformatter+0x2ea>
    42a6:	2c45      	cmp	r4, #69	; 0x45
    42a8:	d031      	beq.n	430e <__pformatter+0x346>
    42aa:	2c46      	cmp	r4, #70	; 0x46
    42ac:	f040 8156 	bne.w	455c <__pformatter+0x594>
    42b0:	e0bb      	b.n	442a <__pformatter+0x462>
    42b2:	2c66      	cmp	r4, #102	; 0x66
    42b4:	f000 80b9 	beq.w	442a <__pformatter+0x462>
    42b8:	2c67      	cmp	r4, #103	; 0x67
    42ba:	d003      	beq.n	42c4 <__pformatter+0x2fc>
    42bc:	2c65      	cmp	r4, #101	; 0x65
    42be:	f040 814d 	bne.w	455c <__pformatter+0x594>
    42c2:	e024      	b.n	430e <__pformatter+0x346>
    42c4:	42ab      	cmp	r3, r5
    42c6:	dd03      	ble.n	42d0 <__pformatter+0x308>
    42c8:	a810      	add	r0, sp, #64	; 0x40
    42ca:	4629      	mov	r1, r5
    42cc:	f001 fd44 	bl	5d58 <__round_decimal>
    42d0:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
    42d4:	1d1a      	adds	r2, r3, #4
    42d6:	db01      	blt.n	42dc <__pformatter+0x314>
    42d8:	42ab      	cmp	r3, r5
    42da:	db0d      	blt.n	42f8 <__pformatter+0x330>
    42dc:	9805      	ldr	r0, [sp, #20]
    42de:	b908      	cbnz	r0, 42e4 <__pformatter+0x31c>
    42e0:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
    42e4:	2c67      	cmp	r4, #103	; 0x67
    42e6:	bf14      	ite	ne
    42e8:	f04f 0c45 	movne.w	ip, #69	; 0x45
    42ec:	f04f 0c65 	moveq.w	ip, #101	; 0x65
    42f0:	3d01      	subs	r5, #1
    42f2:	f8cd c028 	str.w	ip, [sp, #40]	; 0x28
    42f6:	e00b      	b.n	4310 <__pformatter+0x348>
    42f8:	9805      	ldr	r0, [sp, #20]
    42fa:	43da      	mvns	r2, r3
    42fc:	b108      	cbz	r0, 4302 <__pformatter+0x33a>
    42fe:	18ad      	adds	r5, r5, r2
    4300:	e093      	b.n	442a <__pformatter+0x462>
    4302:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
    4306:	18a9      	adds	r1, r5, r2
    4308:	ea21 75e1 	bic.w	r5, r1, r1, asr #31
    430c:	e08d      	b.n	442a <__pformatter+0x462>
    430e:	940a      	str	r4, [sp, #40]	; 0x28
    4310:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
    4314:	f105 0801 	add.w	r8, r5, #1
    4318:	4543      	cmp	r3, r8
    431a:	dd03      	ble.n	4324 <__pformatter+0x35c>
    431c:	a810      	add	r0, sp, #64	; 0x40
    431e:	4641      	mov	r1, r8
    4320:	f001 fd1a 	bl	5d58 <__round_decimal>
    4324:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
    4328:	2b00      	cmp	r3, #0
    432a:	da02      	bge.n	4332 <__pformatter+0x36a>
    432c:	425b      	negs	r3, r3
    432e:	202d      	movs	r0, #45	; 0x2d
    4330:	e000      	b.n	4334 <__pformatter+0x36c>
    4332:	202b      	movs	r0, #43	; 0x2b
    4334:	f20d 2267 	addw	r2, sp, #615	; 0x267
    4338:	2100      	movs	r1, #0
    433a:	b15b      	cbz	r3, 4354 <__pformatter+0x38c>
    433c:	f04f 090a 	mov.w	r9, #10
    4340:	fb93 fcf9 	sdiv	ip, r3, r9
    4344:	fb09 331c 	mls	r3, r9, ip, r3
    4348:	3330      	adds	r3, #48	; 0x30
    434a:	f802 3d01 	strb.w	r3, [r2, #-1]!
    434e:	3101      	adds	r1, #1
    4350:	4663      	mov	r3, ip
    4352:	e7f2      	b.n	433a <__pformatter+0x372>
    4354:	2901      	cmp	r1, #1
    4356:	ddf1      	ble.n	433c <__pformatter+0x374>
    4358:	f8dd e028 	ldr.w	lr, [sp, #40]	; 0x28
    435c:	f802 0c01 	strb.w	r0, [r2, #-1]
    4360:	1e93      	subs	r3, r2, #2
    4362:	a99a      	add	r1, sp, #616	; 0x268
    4364:	f802 ec02 	strb.w	lr, [r2, #-2]
    4368:	1aca      	subs	r2, r1, r3
    436a:	1950      	adds	r0, r2, r5
    436c:	f5b0 7fff 	cmp.w	r0, #510	; 0x1fe
    4370:	f280 8122 	bge.w	45b8 <__pformatter+0x5f0>
    4374:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
    4378:	4295      	cmp	r5, r2
    437a:	db22      	blt.n	43c2 <__pformatter+0x3fa>
    437c:	ebc2 0808 	rsb	r8, r2, r8
    4380:	4641      	mov	r1, r8
    4382:	3901      	subs	r1, #1
    4384:	1c48      	adds	r0, r1, #1
    4386:	ebc8 0003 	rsb	r0, r8, r3
    438a:	d019      	beq.n	43c0 <__pformatter+0x3f8>
    438c:	f04f 0e30 	mov.w	lr, #48	; 0x30
    4390:	f800 e001 	strb.w	lr, [r0, r1]
    4394:	e7f5      	b.n	4382 <__pformatter+0x3ba>
    4396:	bf00      	nop
    4398:	0000c2a1 	.word	0x0000c2a1
    439c:	0000c280 	.word	0x0000c280
    43a0:	0000c26c 	.word	0x0000c26c
    43a4:	0000c271 	.word	0x0000c271
    43a8:	0000c26d 	.word	0x0000c26d
    43ac:	0000c272 	.word	0x0000c272
    43b0:	0000c276 	.word	0x0000c276
    43b4:	0000c27b 	.word	0x0000c27b
    43b8:	0000c277 	.word	0x0000c277
    43bc:	0000c27c 	.word	0x0000c27c
    43c0:	4603      	mov	r3, r0
    43c2:	a910      	add	r1, sp, #64	; 0x40
    43c4:	eb01 0902 	add.w	r9, r1, r2
    43c8:	f109 0c05 	add.w	ip, r9, #5
    43cc:	2100      	movs	r1, #0
    43ce:	3901      	subs	r1, #1
    43d0:	1850      	adds	r0, r2, r1
    43d2:	b118      	cbz	r0, 43dc <__pformatter+0x414>
    43d4:	f81c 0001 	ldrb.w	r0, [ip, r1]
    43d8:	5458      	strb	r0, [r3, r1]
    43da:	e7f8      	b.n	43ce <__pformatter+0x406>
    43dc:	3a01      	subs	r2, #1
    43de:	1a9b      	subs	r3, r3, r2
    43e0:	b90d      	cbnz	r5, 43e6 <__pformatter+0x41e>
    43e2:	9d05      	ldr	r5, [sp, #20]
    43e4:	b11d      	cbz	r5, 43ee <__pformatter+0x426>
    43e6:	212e      	movs	r1, #46	; 0x2e
    43e8:	f803 1c01 	strb.w	r1, [r3, #-1]
    43ec:	3b01      	subs	r3, #1
    43ee:	f89d 0045 	ldrb.w	r0, [sp, #69]	; 0x45
    43f2:	f99d 2040 	ldrsb.w	r2, [sp, #64]	; 0x40
    43f6:	f803 0c01 	strb.w	r0, [r3, #-1]
    43fa:	b11a      	cbz	r2, 4404 <__pformatter+0x43c>
    43fc:	f1a3 0902 	sub.w	r9, r3, #2
    4400:	212d      	movs	r1, #45	; 0x2d
    4402:	e00f      	b.n	4424 <__pformatter+0x45c>
    4404:	9d06      	ldr	r5, [sp, #24]
    4406:	2d01      	cmp	r5, #1
    4408:	d103      	bne.n	4412 <__pformatter+0x44a>
    440a:	f1a3 0902 	sub.w	r9, r3, #2
    440e:	212b      	movs	r1, #43	; 0x2b
    4410:	e008      	b.n	4424 <__pformatter+0x45c>
    4412:	9d06      	ldr	r5, [sp, #24]
    4414:	2d02      	cmp	r5, #2
    4416:	f103 39ff 	add.w	r9, r3, #4294967295
    441a:	f040 80a1 	bne.w	4560 <__pformatter+0x598>
    441e:	f1a3 0902 	sub.w	r9, r3, #2
    4422:	2120      	movs	r1, #32
    4424:	f803 1c02 	strb.w	r1, [r3, #-2]
    4428:	e09a      	b.n	4560 <__pformatter+0x598>
    442a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
    442e:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
    4432:	1ad0      	subs	r0, r2, r3
    4434:	1e41      	subs	r1, r0, #1
    4436:	ea21 73e1 	bic.w	r3, r1, r1, asr #31
    443a:	42ab      	cmp	r3, r5
    443c:	dd0c      	ble.n	4458 <__pformatter+0x490>
    443e:	1aeb      	subs	r3, r5, r3
    4440:	18d1      	adds	r1, r2, r3
    4442:	a810      	add	r0, sp, #64	; 0x40
    4444:	f001 fc88 	bl	5d58 <__round_decimal>
    4448:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
    444c:	f9bd 0042 	ldrsh.w	r0, [sp, #66]	; 0x42
    4450:	1a11      	subs	r1, r2, r0
    4452:	1e4b      	subs	r3, r1, #1
    4454:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    4458:	f9bd c042 	ldrsh.w	ip, [sp, #66]	; 0x42
    445c:	f10c 0801 	add.w	r8, ip, #1
    4460:	ea28 72e8 	bic.w	r2, r8, r8, asr #31
    4464:	18d0      	adds	r0, r2, r3
    4466:	f5b0 7fff 	cmp.w	r0, #510	; 0x1fe
    446a:	9204      	str	r2, [sp, #16]
    446c:	f280 80a4 	bge.w	45b8 <__pformatter+0x5f0>
    4470:	f89d 1044 	ldrb.w	r1, [sp, #68]	; 0x44
    4474:	aa10      	add	r2, sp, #64	; 0x40
    4476:	1850      	adds	r0, r2, r1
    4478:	910a      	str	r1, [sp, #40]	; 0x28
    447a:	3005      	adds	r0, #5
    447c:	2200      	movs	r2, #0
    447e:	ebc3 0e05 	rsb	lr, r3, r5
    4482:	4572      	cmp	r2, lr
    4484:	da07      	bge.n	4496 <__pformatter+0x4ce>
    4486:	a99a      	add	r1, sp, #616	; 0x268
    4488:	1a89      	subs	r1, r1, r2
    448a:	f04f 0e30 	mov.w	lr, #48	; 0x30
    448e:	f801 ec02 	strb.w	lr, [r1, #-2]
    4492:	3201      	adds	r2, #1
    4494:	e7f3      	b.n	447e <__pformatter+0x4b6>
    4496:	f20d 2167 	addw	r1, sp, #615	; 0x267
    449a:	ea2e 79ee 	bic.w	r9, lr, lr, asr #31
    449e:	ebc9 0901 	rsb	r9, r9, r1
    44a2:	2100      	movs	r1, #0
    44a4:	4299      	cmp	r1, r3
    44a6:	4602      	mov	r2, r0
    44a8:	da0a      	bge.n	44c0 <__pformatter+0x4f8>
    44aa:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
    44ae:	4541      	cmp	r1, r8
    44b0:	da06      	bge.n	44c0 <__pformatter+0x4f8>
    44b2:	f812 2c01 	ldrb.w	r2, [r2, #-1]
    44b6:	3801      	subs	r0, #1
    44b8:	f809 2d01 	strb.w	r2, [r9, #-1]!
    44bc:	3101      	adds	r1, #1
    44be:	e7f1      	b.n	44a4 <__pformatter+0x4dc>
    44c0:	464a      	mov	r2, r9
    44c2:	eb01 0e09 	add.w	lr, r1, r9
    44c6:	ebc2 080e 	rsb	r8, r2, lr
    44ca:	4598      	cmp	r8, r3
    44cc:	4694      	mov	ip, r2
    44ce:	da04      	bge.n	44da <__pformatter+0x512>
    44d0:	f04f 0830 	mov.w	r8, #48	; 0x30
    44d4:	f802 8d01 	strb.w	r8, [r2, #-1]!
    44d8:	e7f3      	b.n	44c2 <__pformatter+0x4fa>
    44da:	b90d      	cbnz	r5, 44e0 <__pformatter+0x518>
    44dc:	9d05      	ldr	r5, [sp, #20]
    44de:	b125      	cbz	r5, 44ea <__pformatter+0x522>
    44e0:	232e      	movs	r3, #46	; 0x2e
    44e2:	f102 3cff 	add.w	ip, r2, #4294967295
    44e6:	f802 3c01 	strb.w	r3, [r2, #-1]
    44ea:	9904      	ldr	r1, [sp, #16]
    44ec:	b1f1      	cbz	r1, 452c <__pformatter+0x564>
    44ee:	4661      	mov	r1, ip
    44f0:	2300      	movs	r3, #0
    44f2:	9d04      	ldr	r5, [sp, #16]
    44f4:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
    44f8:	ebc8 0205 	rsb	r2, r8, r5
    44fc:	4293      	cmp	r3, r2
    44fe:	da04      	bge.n	450a <__pformatter+0x542>
    4500:	2230      	movs	r2, #48	; 0x30
    4502:	f801 2d01 	strb.w	r2, [r1, #-1]!
    4506:	3301      	adds	r3, #1
    4508:	e7f3      	b.n	44f2 <__pformatter+0x52a>
    450a:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
    450e:	ebc2 0c0c 	rsb	ip, r2, ip
    4512:	4663      	mov	r3, ip
    4514:	eb0c 0102 	add.w	r1, ip, r2
    4518:	9d04      	ldr	r5, [sp, #16]
    451a:	1ac9      	subs	r1, r1, r3
    451c:	42a9      	cmp	r1, r5
    451e:	4699      	mov	r9, r3
    4520:	da09      	bge.n	4536 <__pformatter+0x56e>
    4522:	f810 5d01 	ldrb.w	r5, [r0, #-1]!
    4526:	f803 5d01 	strb.w	r5, [r3, #-1]!
    452a:	e7f3      	b.n	4514 <__pformatter+0x54c>
    452c:	2030      	movs	r0, #48	; 0x30
    452e:	f10c 39ff 	add.w	r9, ip, #4294967295
    4532:	f80c 0c01 	strb.w	r0, [ip, #-1]
    4536:	f99d 3040 	ldrsb.w	r3, [sp, #64]	; 0x40
    453a:	b10b      	cbz	r3, 4540 <__pformatter+0x578>
    453c:	202d      	movs	r0, #45	; 0x2d
    453e:	e008      	b.n	4552 <__pformatter+0x58a>
    4540:	9d06      	ldr	r5, [sp, #24]
    4542:	2d01      	cmp	r5, #1
    4544:	d101      	bne.n	454a <__pformatter+0x582>
    4546:	202b      	movs	r0, #43	; 0x2b
    4548:	e003      	b.n	4552 <__pformatter+0x58a>
    454a:	9d06      	ldr	r5, [sp, #24]
    454c:	2d02      	cmp	r5, #2
    454e:	d107      	bne.n	4560 <__pformatter+0x598>
    4550:	2020      	movs	r0, #32
    4552:	f809 0c01 	strb.w	r0, [r9, #-1]
    4556:	f109 39ff 	add.w	r9, r9, #4294967295
    455a:	e001      	b.n	4560 <__pformatter+0x598>
    455c:	f20d 2967 	addw	r9, sp, #615	; 0x267
    4560:	f1b9 0f00 	cmp.w	r9, #0
    4564:	d028      	beq.n	45b8 <__pformatter+0x5f0>
    4566:	f20d 2567 	addw	r5, sp, #615	; 0x267
    456a:	ebc9 0805 	rsb	r8, r9, r5
    456e:	e046      	b.n	45fe <__pformatter+0x636>
    4570:	f8d8 0000 	ldr.w	r0, [r8]
    4574:	f108 0704 	add.w	r7, r8, #4
    4578:	f88d 0068 	strb.w	r0, [sp, #104]	; 0x68
    457c:	e002      	b.n	4584 <__pformatter+0x5bc>
    457e:	f88d 4068 	strb.w	r4, [sp, #104]	; 0x68
    4582:	4647      	mov	r7, r8
    4584:	f10d 0968 	add.w	r9, sp, #104	; 0x68
    4588:	f04f 0801 	mov.w	r8, #1
    458c:	e037      	b.n	45fe <__pformatter+0x636>
    458e:	2b2a      	cmp	r3, #42	; 0x2a
    4590:	f040 811b 	bne.w	47ca <__pformatter+0x802>
    4594:	f8d8 b000 	ldr.w	fp, [r8]
    4598:	7853      	ldrb	r3, [r2, #1]
    459a:	f1bb 0f00 	cmp.w	fp, #0
    459e:	f108 0104 	add.w	r1, r8, #4
    45a2:	bfbc      	itt	lt
    45a4:	f1cb 0b00 	rsblt	fp, fp, #0
    45a8:	f04f 0a00 	movlt.w	sl, #0
    45ac:	4688      	mov	r8, r1
    45ae:	1c50      	adds	r0, r2, #1
    45b0:	f5bb 7fff 	cmp.w	fp, #510	; 0x1fe
    45b4:	f2c0 8086 	blt.w	46c4 <__pformatter+0x6fc>
    45b8:	980c      	ldr	r0, [sp, #48]	; 0x30
    45ba:	f001 f9fc 	bl	59b6 <strlen>
    45be:	4602      	mov	r2, r0
    45c0:	1836      	adds	r6, r6, r0
    45c2:	2800      	cmp	r0, #0
    45c4:	f000 8117 	beq.w	47f6 <__pformatter+0x82e>
    45c8:	9809      	ldr	r0, [sp, #36]	; 0x24
    45ca:	990c      	ldr	r1, [sp, #48]	; 0x30
    45cc:	e51d      	b.n	400a <__pformatter+0x42>
    45ce:	2c78      	cmp	r4, #120	; 0x78
    45d0:	f43f adcb 	beq.w	416a <__pformatter+0x1a2>
    45d4:	2c73      	cmp	r4, #115	; 0x73
    45d6:	d1ef      	bne.n	45b8 <__pformatter+0x5f0>
    45d8:	f8d8 3000 	ldr.w	r3, [r8]
    45dc:	4a88      	ldr	r2, [pc, #544]	; (4800 <__pformatter+0x838>)
    45de:	9805      	ldr	r0, [sp, #20]
    45e0:	f108 0704 	add.w	r7, r8, #4
    45e4:	2b00      	cmp	r3, #0
    45e6:	bf14      	ite	ne
    45e8:	4699      	movne	r9, r3
    45ea:	4691      	moveq	r9, r2
    45ec:	2800      	cmp	r0, #0
    45ee:	f000 80cd 	beq.w	478c <__pformatter+0x7c4>
    45f2:	f819 8b01 	ldrb.w	r8, [r9], #1
    45f6:	b111      	cbz	r1, 45fe <__pformatter+0x636>
    45f8:	45a8      	cmp	r8, r5
    45fa:	bfa8      	it	ge
    45fc:	46a8      	movge	r8, r5
    45fe:	f1ba 0f00 	cmp.w	sl, #0
    4602:	d03d      	beq.n	4680 <__pformatter+0x6b8>
    4604:	f1ba 0f02 	cmp.w	sl, #2
    4608:	bf14      	ite	ne
    460a:	2120      	movne	r1, #32
    460c:	2130      	moveq	r1, #48	; 0x30
    460e:	f88d 103a 	strb.w	r1, [sp, #58]	; 0x3a
    4612:	f899 2000 	ldrb.w	r2, [r9]
    4616:	2a2b      	cmp	r2, #43	; 0x2b
    4618:	d003      	beq.n	4622 <__pformatter+0x65a>
    461a:	2a2d      	cmp	r2, #45	; 0x2d
    461c:	d001      	beq.n	4622 <__pformatter+0x65a>
    461e:	2a20      	cmp	r2, #32
    4620:	d10d      	bne.n	463e <__pformatter+0x676>
    4622:	2930      	cmp	r1, #48	; 0x30
    4624:	d10b      	bne.n	463e <__pformatter+0x676>
    4626:	9809      	ldr	r0, [sp, #36]	; 0x24
    4628:	9d08      	ldr	r5, [sp, #32]
    462a:	4649      	mov	r1, r9
    462c:	2201      	movs	r2, #1
    462e:	47a8      	blx	r5
    4630:	2800      	cmp	r0, #0
    4632:	d033      	beq.n	469c <__pformatter+0x6d4>
    4634:	f109 0901 	add.w	r9, r9, #1
    4638:	f108 35ff 	add.w	r5, r8, #4294967295
    463c:	e000      	b.n	4640 <__pformatter+0x678>
    463e:	4645      	mov	r5, r8
    4640:	f1ba 0f02 	cmp.w	sl, #2
    4644:	d10e      	bne.n	4664 <__pformatter+0x69c>
    4646:	2c61      	cmp	r4, #97	; 0x61
    4648:	d001      	beq.n	464e <__pformatter+0x686>
    464a:	2c41      	cmp	r4, #65	; 0x41
    464c:	d10a      	bne.n	4664 <__pformatter+0x69c>
    464e:	2d01      	cmp	r5, #1
    4650:	dd24      	ble.n	469c <__pformatter+0x6d4>
    4652:	9809      	ldr	r0, [sp, #36]	; 0x24
    4654:	9b08      	ldr	r3, [sp, #32]
    4656:	4649      	mov	r1, r9
    4658:	2202      	movs	r2, #2
    465a:	4798      	blx	r3
    465c:	b1f0      	cbz	r0, 469c <__pformatter+0x6d4>
    465e:	3d02      	subs	r5, #2
    4660:	f109 0902 	add.w	r9, r9, #2
    4664:	4644      	mov	r4, r8
    4666:	455c      	cmp	r4, fp
    4668:	da08      	bge.n	467c <__pformatter+0x6b4>
    466a:	9809      	ldr	r0, [sp, #36]	; 0x24
    466c:	9b08      	ldr	r3, [sp, #32]
    466e:	f10d 013a 	add.w	r1, sp, #58	; 0x3a
    4672:	2201      	movs	r2, #1
    4674:	4798      	blx	r3
    4676:	b188      	cbz	r0, 469c <__pformatter+0x6d4>
    4678:	3401      	adds	r4, #1
    467a:	e7f4      	b.n	4666 <__pformatter+0x69e>
    467c:	46a8      	mov	r8, r5
    467e:	e000      	b.n	4682 <__pformatter+0x6ba>
    4680:	4644      	mov	r4, r8
    4682:	f1b8 0f00 	cmp.w	r8, #0
    4686:	d005      	beq.n	4694 <__pformatter+0x6cc>
    4688:	9809      	ldr	r0, [sp, #36]	; 0x24
    468a:	9d08      	ldr	r5, [sp, #32]
    468c:	4649      	mov	r1, r9
    468e:	4642      	mov	r2, r8
    4690:	47a8      	blx	r5
    4692:	b118      	cbz	r0, 469c <__pformatter+0x6d4>
    4694:	f1ba 0f00 	cmp.w	sl, #0
    4698:	d111      	bne.n	46be <__pformatter+0x6f6>
    469a:	e00e      	b.n	46ba <__pformatter+0x6f2>
    469c:	f04f 36ff 	mov.w	r6, #4294967295
    46a0:	e0a9      	b.n	47f6 <__pformatter+0x82e>
    46a2:	2520      	movs	r5, #32
    46a4:	f88d 503b 	strb.w	r5, [sp, #59]	; 0x3b
    46a8:	9809      	ldr	r0, [sp, #36]	; 0x24
    46aa:	9d08      	ldr	r5, [sp, #32]
    46ac:	f10d 013b 	add.w	r1, sp, #59	; 0x3b
    46b0:	2201      	movs	r2, #1
    46b2:	47a8      	blx	r5
    46b4:	2800      	cmp	r0, #0
    46b6:	d0f1      	beq.n	469c <__pformatter+0x6d4>
    46b8:	3401      	adds	r4, #1
    46ba:	455c      	cmp	r4, fp
    46bc:	dbf1      	blt.n	46a2 <__pformatter+0x6da>
    46be:	1936      	adds	r6, r6, r4
    46c0:	46b8      	mov	r8, r7
    46c2:	e48d      	b.n	3fe0 <__pformatter+0x18>
    46c4:	2b2e      	cmp	r3, #46	; 0x2e
    46c6:	d112      	bne.n	46ee <__pformatter+0x726>
    46c8:	7843      	ldrb	r3, [r0, #1]
    46ca:	1c42      	adds	r2, r0, #1
    46cc:	2b2a      	cmp	r3, #42	; 0x2a
    46ce:	f43f acec 	beq.w	40aa <__pformatter+0xe2>
    46d2:	2500      	movs	r5, #0
    46d4:	f1a3 0430 	sub.w	r4, r3, #48	; 0x30
    46d8:	2c09      	cmp	r4, #9
    46da:	4610      	mov	r0, r2
    46dc:	d805      	bhi.n	46ea <__pformatter+0x722>
    46de:	200a      	movs	r0, #10
    46e0:	fb00 4505 	mla	r5, r0, r5, r4
    46e4:	f812 3f01 	ldrb.w	r3, [r2, #1]!
    46e8:	e7f4      	b.n	46d4 <__pformatter+0x70c>
    46ea:	2101      	movs	r1, #1
    46ec:	e4e5      	b.n	40ba <__pformatter+0xf2>
    46ee:	2500      	movs	r5, #0
    46f0:	4629      	mov	r1, r5
    46f2:	e4e2      	b.n	40ba <__pformatter+0xf2>
    46f4:	2200      	movs	r2, #0
    46f6:	e4ec      	b.n	40d2 <__pformatter+0x10a>
    46f8:	2b58      	cmp	r3, #88	; 0x58
    46fa:	d018      	beq.n	472e <__pformatter+0x766>
    46fc:	dc06      	bgt.n	470c <__pformatter+0x744>
    46fe:	2b46      	cmp	r3, #70	; 0x46
    4700:	d01e      	beq.n	4740 <__pformatter+0x778>
    4702:	2b47      	cmp	r3, #71	; 0x47
    4704:	d01f      	beq.n	4746 <__pformatter+0x77e>
    4706:	2b45      	cmp	r3, #69	; 0x45
    4708:	d132      	bne.n	4770 <__pformatter+0x7a8>
    470a:	e01f      	b.n	474c <__pformatter+0x784>
    470c:	2b64      	cmp	r3, #100	; 0x64
    470e:	d00e      	beq.n	472e <__pformatter+0x766>
    4710:	dc1c      	bgt.n	474c <__pformatter+0x784>
    4712:	2b63      	cmp	r3, #99	; 0x63
    4714:	d12c      	bne.n	4770 <__pformatter+0x7a8>
    4716:	e020      	b.n	475a <__pformatter+0x792>
    4718:	2b69      	cmp	r3, #105	; 0x69
    471a:	d008      	beq.n	472e <__pformatter+0x766>
    471c:	2b6e      	cmp	r3, #110	; 0x6e
    471e:	d021      	beq.n	4764 <__pformatter+0x79c>
    4720:	2b67      	cmp	r3, #103	; 0x67
    4722:	d125      	bne.n	4770 <__pformatter+0x7a8>
    4724:	e00f      	b.n	4746 <__pformatter+0x77e>
    4726:	2b75      	cmp	r3, #117	; 0x75
    4728:	d001      	beq.n	472e <__pformatter+0x766>
    472a:	2b78      	cmp	r3, #120	; 0x78
    472c:	d120      	bne.n	4770 <__pformatter+0x7a8>
    472e:	2a04      	cmp	r2, #4
    4730:	d01e      	beq.n	4770 <__pformatter+0x7a8>
    4732:	b1d9      	cbz	r1, 476c <__pformatter+0x7a4>
    4734:	f1ba 0f02 	cmp.w	sl, #2
    4738:	bf08      	it	eq
    473a:	f04f 0a01 	moveq.w	sl, #1
    473e:	e4e0      	b.n	4102 <__pformatter+0x13a>
    4740:	2a02      	cmp	r2, #2
    4742:	d106      	bne.n	4752 <__pformatter+0x78a>
    4744:	e014      	b.n	4770 <__pformatter+0x7a8>
    4746:	2d00      	cmp	r5, #0
    4748:	bf08      	it	eq
    474a:	2501      	moveq	r5, #1
    474c:	1e53      	subs	r3, r2, #1
    474e:	2b01      	cmp	r3, #1
    4750:	d90e      	bls.n	4770 <__pformatter+0x7a8>
    4752:	2900      	cmp	r1, #0
    4754:	bf08      	it	eq
    4756:	2506      	moveq	r5, #6
    4758:	e4d3      	b.n	4102 <__pformatter+0x13a>
    475a:	b949      	cbnz	r1, 4770 <__pformatter+0x7a8>
    475c:	2a00      	cmp	r2, #0
    475e:	bf18      	it	ne
    4760:	24ff      	movne	r4, #255	; 0xff
    4762:	e4ce      	b.n	4102 <__pformatter+0x13a>
    4764:	2a04      	cmp	r2, #4
    4766:	bf08      	it	eq
    4768:	24ff      	moveq	r4, #255	; 0xff
    476a:	e4ca      	b.n	4102 <__pformatter+0x13a>
    476c:	2501      	movs	r5, #1
    476e:	e4c8      	b.n	4102 <__pformatter+0x13a>
    4770:	24ff      	movs	r4, #255	; 0xff
    4772:	e4c6      	b.n	4102 <__pformatter+0x13a>
    4774:	2c6e      	cmp	r4, #110	; 0x6e
    4776:	f47f af1f 	bne.w	45b8 <__pformatter+0x5f0>
    477a:	e015      	b.n	47a8 <__pformatter+0x7e0>
    477c:	2a02      	cmp	r2, #2
    477e:	d101      	bne.n	4784 <__pformatter+0x7bc>
    4780:	b280      	uxth	r0, r0
    4782:	e4f9      	b.n	4178 <__pformatter+0x1b0>
    4784:	2a01      	cmp	r2, #1
    4786:	bf08      	it	eq
    4788:	b2c0      	uxtbeq	r0, r0
    478a:	e4f5      	b.n	4178 <__pformatter+0x1b0>
    478c:	4648      	mov	r0, r9
    478e:	b139      	cbz	r1, 47a0 <__pformatter+0x7d8>
    4790:	9905      	ldr	r1, [sp, #20]
    4792:	462a      	mov	r2, r5
    4794:	f001 f8ef 	bl	5976 <memchr>
    4798:	b1a8      	cbz	r0, 47c6 <__pformatter+0x7fe>
    479a:	ebc9 0800 	rsb	r8, r9, r0
    479e:	e72e      	b.n	45fe <__pformatter+0x636>
    47a0:	f001 f909 	bl	59b6 <strlen>
    47a4:	4680      	mov	r8, r0
    47a6:	e72a      	b.n	45fe <__pformatter+0x636>
    47a8:	2a02      	cmp	r2, #2
    47aa:	f108 0704 	add.w	r7, r8, #4
    47ae:	f8d8 5000 	ldr.w	r5, [r8]
    47b2:	d004      	beq.n	47be <__pformatter+0x7f6>
    47b4:	2a03      	cmp	r2, #3
    47b6:	d004      	beq.n	47c2 <__pformatter+0x7fa>
    47b8:	2a00      	cmp	r2, #0
    47ba:	d181      	bne.n	46c0 <__pformatter+0x6f8>
    47bc:	e001      	b.n	47c2 <__pformatter+0x7fa>
    47be:	802e      	strh	r6, [r5, #0]
    47c0:	e77e      	b.n	46c0 <__pformatter+0x6f8>
    47c2:	602e      	str	r6, [r5, #0]
    47c4:	e77c      	b.n	46c0 <__pformatter+0x6f8>
    47c6:	46a8      	mov	r8, r5
    47c8:	e719      	b.n	45fe <__pformatter+0x636>
    47ca:	f04f 0b00 	mov.w	fp, #0
    47ce:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
    47d2:	2909      	cmp	r1, #9
    47d4:	4610      	mov	r0, r2
    47d6:	f63f aeeb 	bhi.w	45b0 <__pformatter+0x5e8>
    47da:	230a      	movs	r3, #10
    47dc:	fb03 1b0b 	mla	fp, r3, fp, r1
    47e0:	3201      	adds	r2, #1
    47e2:	7843      	ldrb	r3, [r0, #1]
    47e4:	e7f3      	b.n	47ce <__pformatter+0x806>
    47e6:	f04f 0a00 	mov.w	sl, #0
    47ea:	e441      	b.n	4070 <__pformatter+0xa8>
    47ec:	f04f 0901 	mov.w	r9, #1
    47f0:	f8cd 9018 	str.w	r9, [sp, #24]
    47f4:	e43c      	b.n	4070 <__pformatter+0xa8>
    47f6:	4630      	mov	r0, r6
    47f8:	f50d 7d1b 	add.w	sp, sp, #620	; 0x26c
    47fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4800:	0000c270 	.word	0x0000c270

00004804 <__sformatter>:
    4804:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4808:	b0a5      	sub	sp, #148	; 0x94
    480a:	2400      	movs	r4, #0
    480c:	4607      	mov	r7, r0
    480e:	4688      	mov	r8, r1
    4810:	930b      	str	r3, [sp, #44]	; 0x2c
    4812:	4692      	mov	sl, r2
    4814:	940a      	str	r4, [sp, #40]	; 0x28
    4816:	9409      	str	r4, [sp, #36]	; 0x24
    4818:	46a3      	mov	fp, r4
    481a:	9406      	str	r4, [sp, #24]
    481c:	9407      	str	r4, [sp, #28]
    481e:	4626      	mov	r6, r4
    4820:	f89a 5000 	ldrb.w	r5, [sl]
    4824:	2d00      	cmp	r5, #0
    4826:	f000 8390 	beq.w	4f4a <__sformatter+0x746>
    482a:	4628      	mov	r0, r5
    482c:	f000 fbca 	bl	4fc4 <isspace>
    4830:	b308      	cbz	r0, 4876 <__sformatter+0x72>
    4832:	f10a 0501 	add.w	r5, sl, #1
    4836:	46aa      	mov	sl, r5
    4838:	f105 0501 	add.w	r5, r5, #1
    483c:	f89a 0000 	ldrb.w	r0, [sl]
    4840:	f000 fbc0 	bl	4fc4 <isspace>
    4844:	2800      	cmp	r0, #0
    4846:	d1f6      	bne.n	4836 <__sformatter+0x32>
    4848:	2c00      	cmp	r4, #0
    484a:	f040 837c 	bne.w	4f46 <__sformatter+0x742>
    484e:	2100      	movs	r1, #0
    4850:	4640      	mov	r0, r8
    4852:	460a      	mov	r2, r1
    4854:	47b8      	blx	r7
    4856:	4605      	mov	r5, r0
    4858:	f000 fbb4 	bl	4fc4 <isspace>
    485c:	b108      	cbz	r0, 4862 <__sformatter+0x5e>
    485e:	3601      	adds	r6, #1
    4860:	e7f5      	b.n	484e <__sformatter+0x4a>
    4862:	1c69      	adds	r1, r5, #1
    4864:	d104      	bne.n	4870 <__sformatter+0x6c>
    4866:	982e      	ldr	r0, [sp, #184]	; 0xb8
    4868:	2800      	cmp	r0, #0
    486a:	f000 836e 	beq.w	4f4a <__sformatter+0x746>
    486e:	2401      	movs	r4, #1
    4870:	4640      	mov	r0, r8
    4872:	4629      	mov	r1, r5
    4874:	e341      	b.n	4efa <__sformatter+0x6f6>
    4876:	2d25      	cmp	r5, #37	; 0x25
    4878:	d015      	beq.n	48a6 <__sformatter+0xa2>
    487a:	b9a4      	cbnz	r4, 48a6 <__sformatter+0xa2>
    487c:	4621      	mov	r1, r4
    487e:	4640      	mov	r0, r8
    4880:	4622      	mov	r2, r4
    4882:	47b8      	blx	r7
    4884:	b2c1      	uxtb	r1, r0
    4886:	42a9      	cmp	r1, r5
    4888:	d009      	beq.n	489e <__sformatter+0x9a>
    488a:	4640      	mov	r0, r8
    488c:	2201      	movs	r2, #1
    488e:	47b8      	blx	r7
    4890:	992e      	ldr	r1, [sp, #184]	; 0xb8
    4892:	2900      	cmp	r1, #0
    4894:	f000 8359 	beq.w	4f4a <__sformatter+0x746>
    4898:	f10a 0a01 	add.w	sl, sl, #1
    489c:	e353      	b.n	4f46 <__sformatter+0x742>
    489e:	3601      	adds	r6, #1
    48a0:	f10a 0a01 	add.w	sl, sl, #1
    48a4:	e7bc      	b.n	4820 <__sformatter+0x1c>
    48a6:	2100      	movs	r1, #0
    48a8:	2228      	movs	r2, #40	; 0x28
    48aa:	a81a      	add	r0, sp, #104	; 0x68
    48ac:	f7ff faba 	bl	3e24 <memset>
    48b0:	f89a 9001 	ldrb.w	r9, [sl, #1]
    48b4:	f06f 4c00 	mvn.w	ip, #2147483648	; 0x80000000
    48b8:	f1b9 0f25 	cmp.w	r9, #37	; 0x25
    48bc:	f8cd c06c 	str.w	ip, [sp, #108]	; 0x6c
    48c0:	464b      	mov	r3, r9
    48c2:	d115      	bne.n	48f0 <__sformatter+0xec>
    48c4:	f88d 906b 	strb.w	r9, [sp, #107]	; 0x6b
    48c8:	f10d 0e68 	add.w	lr, sp, #104	; 0x68
    48cc:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
    48d0:	ad10      	add	r5, sp, #64	; 0x40
    48d2:	c50f      	stmia	r5!, {r0, r1, r2, r3}
    48d4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
    48d8:	c50f      	stmia	r5!, {r0, r1, r2, r3}
    48da:	e89e 0003 	ldmia.w	lr, {r0, r1}
    48de:	e885 0003 	stmia.w	r5, {r0, r1}
    48e2:	2000      	movs	r0, #0
    48e4:	4663      	mov	r3, ip
    48e6:	f10a 0a02 	add.w	sl, sl, #2
    48ea:	9008      	str	r0, [sp, #32]
    48ec:	4684      	mov	ip, r0
    48ee:	e12b      	b.n	4b48 <__sformatter+0x344>
    48f0:	2b2a      	cmp	r3, #42	; 0x2a
    48f2:	d002      	beq.n	48fa <__sformatter+0xf6>
    48f4:	f10a 0501 	add.w	r5, sl, #1
    48f8:	e006      	b.n	4908 <__sformatter+0x104>
    48fa:	2301      	movs	r3, #1
    48fc:	f88d 3068 	strb.w	r3, [sp, #104]	; 0x68
    4900:	f89a 3002 	ldrb.w	r3, [sl, #2]
    4904:	f10a 0502 	add.w	r5, sl, #2
    4908:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    490c:	2a09      	cmp	r2, #9
    490e:	d831      	bhi.n	4974 <__sformatter+0x170>
    4910:	1c68      	adds	r0, r5, #1
    4912:	f04f 0c00 	mov.w	ip, #0
    4916:	3b30      	subs	r3, #48	; 0x30
    4918:	210a      	movs	r1, #10
    491a:	fb01 3c0c 	mla	ip, r1, ip, r3
    491e:	4605      	mov	r5, r0
    4920:	f810 3b01 	ldrb.w	r3, [r0], #1
    4924:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    4928:	2a09      	cmp	r2, #9
    492a:	d9f4      	bls.n	4916 <__sformatter+0x112>
    492c:	f8cd c06c 	str.w	ip, [sp, #108]	; 0x6c
    4930:	f1bc 0f00 	cmp.w	ip, #0
    4934:	d11b      	bne.n	496e <__sformatter+0x16a>
    4936:	f04f 09ff 	mov.w	r9, #255	; 0xff
    493a:	f88d 906b 	strb.w	r9, [sp, #107]	; 0x6b
    493e:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
    4942:	e8ba 000f 	ldmia.w	sl!, {r0, r1, r2, r3}
    4946:	f10d 0e40 	add.w	lr, sp, #64	; 0x40
    494a:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
    494e:	e8ba 000f 	ldmia.w	sl!, {r0, r1, r2, r3}
    4952:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
    4956:	e89a 0003 	ldmia.w	sl, {r0, r1}
    495a:	f89d 2068 	ldrb.w	r2, [sp, #104]	; 0x68
    495e:	f8cd c020 	str.w	ip, [sp, #32]
    4962:	e88e 0003 	stmia.w	lr, {r0, r1}
    4966:	f105 0a01 	add.w	sl, r5, #1
    496a:	4663      	mov	r3, ip
    496c:	e0de      	b.n	4b2c <__sformatter+0x328>
    496e:	2001      	movs	r0, #1
    4970:	f88d 0069 	strb.w	r0, [sp, #105]	; 0x69
    4974:	2b68      	cmp	r3, #104	; 0x68
    4976:	d005      	beq.n	4984 <__sformatter+0x180>
    4978:	2b6c      	cmp	r3, #108	; 0x6c
    497a:	d00e      	beq.n	499a <__sformatter+0x196>
    497c:	2b4c      	cmp	r3, #76	; 0x4c
    497e:	d111      	bne.n	49a4 <__sformatter+0x1a0>
    4980:	2305      	movs	r3, #5
    4982:	e00b      	b.n	499c <__sformatter+0x198>
    4984:	786a      	ldrb	r2, [r5, #1]
    4986:	2102      	movs	r1, #2
    4988:	2a68      	cmp	r2, #104	; 0x68
    498a:	f88d 106a 	strb.w	r1, [sp, #106]	; 0x6a
    498e:	d107      	bne.n	49a0 <__sformatter+0x19c>
    4990:	2001      	movs	r0, #1
    4992:	f88d 006a 	strb.w	r0, [sp, #106]	; 0x6a
    4996:	182d      	adds	r5, r5, r0
    4998:	e002      	b.n	49a0 <__sformatter+0x19c>
    499a:	2303      	movs	r3, #3
    499c:	f88d 306a 	strb.w	r3, [sp, #106]	; 0x6a
    49a0:	786b      	ldrb	r3, [r5, #1]
    49a2:	3501      	adds	r5, #1
    49a4:	2b67      	cmp	r3, #103	; 0x67
    49a6:	f88d 306b 	strb.w	r3, [sp, #107]	; 0x6b
    49aa:	dc10      	bgt.n	49ce <__sformatter+0x1ca>
    49ac:	2b65      	cmp	r3, #101	; 0x65
    49ae:	da25      	bge.n	49fc <__sformatter+0x1f8>
    49b0:	2b58      	cmp	r3, #88	; 0x58
    49b2:	d01e      	beq.n	49f2 <__sformatter+0x1ee>
    49b4:	dc04      	bgt.n	49c0 <__sformatter+0x1bc>
    49b6:	3b45      	subs	r3, #69	; 0x45
    49b8:	2b02      	cmp	r3, #2
    49ba:	f200 8098 	bhi.w	4aee <__sformatter+0x2ea>
    49be:	e01d      	b.n	49fc <__sformatter+0x1f8>
    49c0:	2b63      	cmp	r3, #99	; 0x63
    49c2:	d02b      	beq.n	4a1c <__sformatter+0x218>
    49c4:	dc15      	bgt.n	49f2 <__sformatter+0x1ee>
    49c6:	2b5b      	cmp	r3, #91	; 0x5b
    49c8:	f040 8091 	bne.w	4aee <__sformatter+0x2ea>
    49cc:	e043      	b.n	4a56 <__sformatter+0x252>
    49ce:	2b70      	cmp	r3, #112	; 0x70
    49d0:	d01f      	beq.n	4a12 <__sformatter+0x20e>
    49d2:	dc07      	bgt.n	49e4 <__sformatter+0x1e0>
    49d4:	2b6e      	cmp	r3, #110	; 0x6e
    49d6:	f000 808d 	beq.w	4af4 <__sformatter+0x2f0>
    49da:	dc0a      	bgt.n	49f2 <__sformatter+0x1ee>
    49dc:	2b69      	cmp	r3, #105	; 0x69
    49de:	f040 8086 	bne.w	4aee <__sformatter+0x2ea>
    49e2:	e006      	b.n	49f2 <__sformatter+0x1ee>
    49e4:	2b75      	cmp	r3, #117	; 0x75
    49e6:	d004      	beq.n	49f2 <__sformatter+0x1ee>
    49e8:	2b78      	cmp	r3, #120	; 0x78
    49ea:	d002      	beq.n	49f2 <__sformatter+0x1ee>
    49ec:	2b73      	cmp	r3, #115	; 0x73
    49ee:	d17e      	bne.n	4aee <__sformatter+0x2ea>
    49f0:	e019      	b.n	4a26 <__sformatter+0x222>
    49f2:	f89d 006a 	ldrb.w	r0, [sp, #106]	; 0x6a
    49f6:	2805      	cmp	r0, #5
    49f8:	d17c      	bne.n	4af4 <__sformatter+0x2f0>
    49fa:	e078      	b.n	4aee <__sformatter+0x2ea>
    49fc:	f89d 106a 	ldrb.w	r1, [sp, #106]	; 0x6a
    4a00:	1e4a      	subs	r2, r1, #1
    4a02:	2a01      	cmp	r2, #1
    4a04:	d973      	bls.n	4aee <__sformatter+0x2ea>
    4a06:	2903      	cmp	r1, #3
    4a08:	d174      	bne.n	4af4 <__sformatter+0x2f0>
    4a0a:	2004      	movs	r0, #4
    4a0c:	f88d 006a 	strb.w	r0, [sp, #106]	; 0x6a
    4a10:	e070      	b.n	4af4 <__sformatter+0x2f0>
    4a12:	2103      	movs	r1, #3
    4a14:	f88d 106a 	strb.w	r1, [sp, #106]	; 0x6a
    4a18:	2378      	movs	r3, #120	; 0x78
    4a1a:	e069      	b.n	4af0 <__sformatter+0x2ec>
    4a1c:	f89d 306a 	ldrb.w	r3, [sp, #106]	; 0x6a
    4a20:	2b00      	cmp	r3, #0
    4a22:	d067      	beq.n	4af4 <__sformatter+0x2f0>
    4a24:	e063      	b.n	4aee <__sformatter+0x2ea>
    4a26:	f89d 306a 	ldrb.w	r3, [sp, #106]	; 0x6a
    4a2a:	b113      	cbz	r3, 4a32 <__sformatter+0x22e>
    4a2c:	21ff      	movs	r1, #255	; 0xff
    4a2e:	f88d 106b 	strb.w	r1, [sp, #107]	; 0x6b
    4a32:	2300      	movs	r3, #0
    4a34:	f10d 0c90 	add.w	ip, sp, #144	; 0x90
    4a38:	eb0c 0203 	add.w	r2, ip, r3
    4a3c:	3301      	adds	r3, #1
    4a3e:	20ff      	movs	r0, #255	; 0xff
    4a40:	2b20      	cmp	r3, #32
    4a42:	f802 0c20 	strb.w	r0, [r2, #-32]
    4a46:	d1f5      	bne.n	4a34 <__sformatter+0x230>
    4a48:	21c1      	movs	r1, #193	; 0xc1
    4a4a:	22fe      	movs	r2, #254	; 0xfe
    4a4c:	f88d 1071 	strb.w	r1, [sp, #113]	; 0x71
    4a50:	f88d 2074 	strb.w	r2, [sp, #116]	; 0x74
    4a54:	e04e      	b.n	4af4 <__sformatter+0x2f0>
    4a56:	f89d 106a 	ldrb.w	r1, [sp, #106]	; 0x6a
    4a5a:	b111      	cbz	r1, 4a62 <__sformatter+0x25e>
    4a5c:	22ff      	movs	r2, #255	; 0xff
    4a5e:	f88d 206b 	strb.w	r2, [sp, #107]	; 0x6b
    4a62:	786b      	ldrb	r3, [r5, #1]
    4a64:	2b5e      	cmp	r3, #94	; 0x5e
    4a66:	d002      	beq.n	4a6e <__sformatter+0x26a>
    4a68:	3501      	adds	r5, #1
    4a6a:	2100      	movs	r1, #0
    4a6c:	e002      	b.n	4a74 <__sformatter+0x270>
    4a6e:	78ab      	ldrb	r3, [r5, #2]
    4a70:	2101      	movs	r1, #1
    4a72:	3502      	adds	r5, #2
    4a74:	2b5d      	cmp	r3, #93	; 0x5d
    4a76:	d107      	bne.n	4a88 <__sformatter+0x284>
    4a78:	2020      	movs	r0, #32
    4a7a:	786b      	ldrb	r3, [r5, #1]
    4a7c:	f88d 007b 	strb.w	r0, [sp, #123]	; 0x7b
    4a80:	3501      	adds	r5, #1
    4a82:	e001      	b.n	4a88 <__sformatter+0x284>
    4a84:	78eb      	ldrb	r3, [r5, #3]
    4a86:	3503      	adds	r5, #3
    4a88:	b38b      	cbz	r3, 4aee <__sformatter+0x2ea>
    4a8a:	2b5d      	cmp	r3, #93	; 0x5d
    4a8c:	f000 827b 	beq.w	4f86 <__sformatter+0x782>
    4a90:	a824      	add	r0, sp, #144	; 0x90
    4a92:	f3c3 02c4 	ubfx	r2, r3, #3, #5
    4a96:	1882      	adds	r2, r0, r2
    4a98:	f04f 0e01 	mov.w	lr, #1
    4a9c:	f812 9c20 	ldrb.w	r9, [r2, #-32]
    4aa0:	f003 0007 	and.w	r0, r3, #7
    4aa4:	fa0e f000 	lsl.w	r0, lr, r0
    4aa8:	ea49 0000 	orr.w	r0, r9, r0
    4aac:	f802 0c20 	strb.w	r0, [r2, #-32]
    4ab0:	7868      	ldrb	r0, [r5, #1]
    4ab2:	282d      	cmp	r0, #45	; 0x2d
    4ab4:	d118      	bne.n	4ae8 <__sformatter+0x2e4>
    4ab6:	78aa      	ldrb	r2, [r5, #2]
    4ab8:	b1b2      	cbz	r2, 4ae8 <__sformatter+0x2e4>
    4aba:	2a5d      	cmp	r2, #93	; 0x5d
    4abc:	d014      	beq.n	4ae8 <__sformatter+0x2e4>
    4abe:	3301      	adds	r3, #1
    4ac0:	4293      	cmp	r3, r2
    4ac2:	dcdf      	bgt.n	4a84 <__sformatter+0x280>
    4ac4:	f10d 0a90 	add.w	sl, sp, #144	; 0x90
    4ac8:	f3c3 00c4 	ubfx	r0, r3, #3, #5
    4acc:	4450      	add	r0, sl
    4ace:	f003 0e07 	and.w	lr, r3, #7
    4ad2:	f810 ac20 	ldrb.w	sl, [r0, #-32]
    4ad6:	f04f 0c01 	mov.w	ip, #1
    4ada:	fa0c f90e 	lsl.w	r9, ip, lr
    4ade:	ea4a 0e09 	orr.w	lr, sl, r9
    4ae2:	f800 ec20 	strb.w	lr, [r0, #-32]
    4ae6:	e7ea      	b.n	4abe <__sformatter+0x2ba>
    4ae8:	3501      	adds	r5, #1
    4aea:	4603      	mov	r3, r0
    4aec:	e7cc      	b.n	4a88 <__sformatter+0x284>
    4aee:	23ff      	movs	r3, #255	; 0xff
    4af0:	f88d 306b 	strb.w	r3, [sp, #107]	; 0x6b
    4af4:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
    4af8:	e8ba 000f 	ldmia.w	sl!, {r0, r1, r2, r3}
    4afc:	f10d 0940 	add.w	r9, sp, #64	; 0x40
    4b00:	e8a9 000f 	stmia.w	r9!, {r0, r1, r2, r3}
    4b04:	e8ba 000f 	ldmia.w	sl!, {r0, r1, r2, r3}
    4b08:	e8a9 000f 	stmia.w	r9!, {r0, r1, r2, r3}
    4b0c:	e89a 0003 	ldmia.w	sl, {r0, r1}
    4b10:	e889 0003 	stmia.w	r9, {r0, r1}
    4b14:	f89d 006a 	ldrb.w	r0, [sp, #106]	; 0x6a
    4b18:	f89d 2068 	ldrb.w	r2, [sp, #104]	; 0x68
    4b1c:	f89d c069 	ldrb.w	ip, [sp, #105]	; 0x69
    4b20:	f89d 906b 	ldrb.w	r9, [sp, #107]	; 0x6b
    4b24:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    4b26:	9008      	str	r0, [sp, #32]
    4b28:	f105 0a01 	add.w	sl, r5, #1
    4b2c:	b93a      	cbnz	r2, 4b3e <__sformatter+0x33a>
    4b2e:	f1b9 0f25 	cmp.w	r9, #37	; 0x25
    4b32:	d009      	beq.n	4b48 <__sformatter+0x344>
    4b34:	990b      	ldr	r1, [sp, #44]	; 0x2c
    4b36:	1d0a      	adds	r2, r1, #4
    4b38:	680d      	ldr	r5, [r1, #0]
    4b3a:	920b      	str	r2, [sp, #44]	; 0x2c
    4b3c:	e000      	b.n	4b40 <__sformatter+0x33c>
    4b3e:	2500      	movs	r5, #0
    4b40:	f1b9 0f6e 	cmp.w	r9, #110	; 0x6e
    4b44:	d101      	bne.n	4b4a <__sformatter+0x346>
    4b46:	e1e7      	b.n	4f18 <__sformatter+0x714>
    4b48:	2500      	movs	r5, #0
    4b4a:	b10c      	cbz	r4, 4b50 <__sformatter+0x34c>
    4b4c:	2401      	movs	r4, #1
    4b4e:	e00e      	b.n	4b6e <__sformatter+0x36a>
    4b50:	9304      	str	r3, [sp, #16]
    4b52:	f8cd c014 	str.w	ip, [sp, #20]
    4b56:	4640      	mov	r0, r8
    4b58:	4621      	mov	r1, r4
    4b5a:	2202      	movs	r2, #2
    4b5c:	47b8      	blx	r7
    4b5e:	9b04      	ldr	r3, [sp, #16]
    4b60:	f8dd c014 	ldr.w	ip, [sp, #20]
    4b64:	b118      	cbz	r0, 4b6e <__sformatter+0x36a>
    4b66:	992e      	ldr	r1, [sp, #184]	; 0xb8
    4b68:	2900      	cmp	r1, #0
    4b6a:	d1ef      	bne.n	4b4c <__sformatter+0x348>
    4b6c:	e1ed      	b.n	4f4a <__sformatter+0x746>
    4b6e:	f1b9 0f67 	cmp.w	r9, #103	; 0x67
    4b72:	d81e      	bhi.n	4bb2 <__sformatter+0x3ae>
    4b74:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
    4b78:	f080 809c 	bcs.w	4cb4 <__sformatter+0x4b0>
    4b7c:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
    4b80:	d062      	beq.n	4c48 <__sformatter+0x444>
    4b82:	d80c      	bhi.n	4b9e <__sformatter+0x39a>
    4b84:	f1b9 0f25 	cmp.w	r9, #37	; 0x25
    4b88:	f000 810e 	beq.w	4da8 <__sformatter+0x5a4>
    4b8c:	f0c0 81dd 	bcc.w	4f4a <__sformatter+0x746>
    4b90:	f1a9 0945 	sub.w	r9, r9, #69	; 0x45
    4b94:	f1b9 0f02 	cmp.w	r9, #2
    4b98:	f200 81d7 	bhi.w	4f4a <__sformatter+0x746>
    4b9c:	e08a      	b.n	4cb4 <__sformatter+0x4b0>
    4b9e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
    4ba2:	f000 80b3 	beq.w	4d0c <__sformatter+0x508>
    4ba6:	d81d      	bhi.n	4be4 <__sformatter+0x3e0>
    4ba8:	f1b9 0f5b 	cmp.w	r9, #91	; 0x5b
    4bac:	f040 81cd 	bne.w	4f4a <__sformatter+0x746>
    4bb0:	e132      	b.n	4e18 <__sformatter+0x614>
    4bb2:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
    4bb6:	d013      	beq.n	4be0 <__sformatter+0x3dc>
    4bb8:	d807      	bhi.n	4bca <__sformatter+0x3c6>
    4bba:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
    4bbe:	d013      	beq.n	4be8 <__sformatter+0x3e4>
    4bc0:	f1b9 0f6e 	cmp.w	r9, #110	; 0x6e
    4bc4:	f040 81c1 	bne.w	4f4a <__sformatter+0x746>
    4bc8:	e1a6      	b.n	4f18 <__sformatter+0x714>
    4bca:	f1b9 0f75 	cmp.w	r9, #117	; 0x75
    4bce:	d03d      	beq.n	4c4c <__sformatter+0x448>
    4bd0:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
    4bd4:	d038      	beq.n	4c48 <__sformatter+0x444>
    4bd6:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
    4bda:	f040 81b6 	bne.w	4f4a <__sformatter+0x746>
    4bde:	e0ff      	b.n	4de0 <__sformatter+0x5dc>
    4be0:	2008      	movs	r0, #8
    4be2:	e034      	b.n	4c4e <__sformatter+0x44a>
    4be4:	200a      	movs	r0, #10
    4be6:	e000      	b.n	4bea <__sformatter+0x3e6>
    4be8:	2000      	movs	r0, #0
    4bea:	b9cc      	cbnz	r4, 4c20 <__sformatter+0x41c>
    4bec:	aa0d      	add	r2, sp, #52	; 0x34
    4bee:	9200      	str	r2, [sp, #0]
    4bf0:	a90e      	add	r1, sp, #56	; 0x38
    4bf2:	aa0f      	add	r2, sp, #60	; 0x3c
    4bf4:	9101      	str	r1, [sp, #4]
    4bf6:	9202      	str	r2, [sp, #8]
    4bf8:	4619      	mov	r1, r3
    4bfa:	463a      	mov	r2, r7
    4bfc:	4643      	mov	r3, r8
    4bfe:	f000 fd75 	bl	56ec <__strtoul>
    4c02:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    4c04:	b923      	cbnz	r3, 4c10 <__sformatter+0x40c>
    4c06:	982e      	ldr	r0, [sp, #184]	; 0xb8
    4c08:	b968      	cbnz	r0, 4c26 <__sformatter+0x422>
    4c0a:	2201      	movs	r2, #1
    4c0c:	9209      	str	r2, [sp, #36]	; 0x24
    4c0e:	e19c      	b.n	4f4a <__sformatter+0x746>
    4c10:	990e      	ldr	r1, [sp, #56]	; 0x38
    4c12:	18f6      	adds	r6, r6, r3
    4c14:	b149      	cbz	r1, 4c2a <__sformatter+0x426>
    4c16:	f1b0 4f00 	cmp.w	r0, #2147483648	; 0x80000000
    4c1a:	d006      	beq.n	4c2a <__sformatter+0x426>
    4c1c:	4240      	negs	r0, r0
    4c1e:	e004      	b.n	4c2a <__sformatter+0x426>
    4c20:	2401      	movs	r4, #1
    4c22:	2000      	movs	r0, #0
    4c24:	e001      	b.n	4c2a <__sformatter+0x426>
    4c26:	2401      	movs	r4, #1
    4c28:	4618      	mov	r0, r3
    4c2a:	2d00      	cmp	r5, #0
    4c2c:	d068      	beq.n	4d00 <__sformatter+0x4fc>
    4c2e:	9a08      	ldr	r2, [sp, #32]
    4c30:	2a03      	cmp	r2, #3
    4c32:	d861      	bhi.n	4cf8 <__sformatter+0x4f4>
    4c34:	e8df f002 	tbb	[pc, r2]
    4c38:	06040206 	.word	0x06040206
    4c3c:	7028      	strb	r0, [r5, #0]
    4c3e:	e05b      	b.n	4cf8 <__sformatter+0x4f4>
    4c40:	8028      	strh	r0, [r5, #0]
    4c42:	e059      	b.n	4cf8 <__sformatter+0x4f4>
    4c44:	6028      	str	r0, [r5, #0]
    4c46:	e057      	b.n	4cf8 <__sformatter+0x4f4>
    4c48:	2010      	movs	r0, #16
    4c4a:	e000      	b.n	4c4e <__sformatter+0x44a>
    4c4c:	200a      	movs	r0, #10
    4c4e:	b9d4      	cbnz	r4, 4c86 <__sformatter+0x482>
    4c50:	aa0d      	add	r2, sp, #52	; 0x34
    4c52:	9200      	str	r2, [sp, #0]
    4c54:	a90e      	add	r1, sp, #56	; 0x38
    4c56:	aa0f      	add	r2, sp, #60	; 0x3c
    4c58:	9101      	str	r1, [sp, #4]
    4c5a:	9202      	str	r2, [sp, #8]
    4c5c:	4619      	mov	r1, r3
    4c5e:	463a      	mov	r2, r7
    4c60:	4643      	mov	r3, r8
    4c62:	f000 fd43 	bl	56ec <__strtoul>
    4c66:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    4c68:	b92b      	cbnz	r3, 4c76 <__sformatter+0x472>
    4c6a:	982e      	ldr	r0, [sp, #184]	; 0xb8
    4c6c:	2800      	cmp	r0, #0
    4c6e:	d0cc      	beq.n	4c0a <__sformatter+0x406>
    4c70:	2401      	movs	r4, #1
    4c72:	4618      	mov	r0, r3
    4c74:	e009      	b.n	4c8a <__sformatter+0x486>
    4c76:	990e      	ldr	r1, [sp, #56]	; 0x38
    4c78:	18f6      	adds	r6, r6, r3
    4c7a:	b131      	cbz	r1, 4c8a <__sformatter+0x486>
    4c7c:	f1b0 4f00 	cmp.w	r0, #2147483648	; 0x80000000
    4c80:	d003      	beq.n	4c8a <__sformatter+0x486>
    4c82:	4240      	negs	r0, r0
    4c84:	e001      	b.n	4c8a <__sformatter+0x486>
    4c86:	2401      	movs	r4, #1
    4c88:	2000      	movs	r0, #0
    4c8a:	b17d      	cbz	r5, 4cac <__sformatter+0x4a8>
    4c8c:	9b08      	ldr	r3, [sp, #32]
    4c8e:	2b03      	cmp	r3, #3
    4c90:	d808      	bhi.n	4ca4 <__sformatter+0x4a0>
    4c92:	e8df f003 	tbb	[pc, r3]
    4c96:	0206      	.short	0x0206
    4c98:	0604      	.short	0x0604
    4c9a:	7028      	strb	r0, [r5, #0]
    4c9c:	e002      	b.n	4ca4 <__sformatter+0x4a0>
    4c9e:	8028      	strh	r0, [r5, #0]
    4ca0:	e000      	b.n	4ca4 <__sformatter+0x4a0>
    4ca2:	6028      	str	r0, [r5, #0]
    4ca4:	b914      	cbnz	r4, 4cac <__sformatter+0x4a8>
    4ca6:	9d07      	ldr	r5, [sp, #28]
    4ca8:	1c69      	adds	r1, r5, #1
    4caa:	9107      	str	r1, [sp, #28]
    4cac:	9806      	ldr	r0, [sp, #24]
    4cae:	1c42      	adds	r2, r0, #1
    4cb0:	9206      	str	r2, [sp, #24]
    4cb2:	e092      	b.n	4dda <__sformatter+0x5d6>
    4cb4:	b964      	cbnz	r4, 4cd0 <__sformatter+0x4cc>
    4cb6:	aa0f      	add	r2, sp, #60	; 0x3c
    4cb8:	9200      	str	r2, [sp, #0]
    4cba:	4618      	mov	r0, r3
    4cbc:	4639      	mov	r1, r7
    4cbe:	ab0d      	add	r3, sp, #52	; 0x34
    4cc0:	4642      	mov	r2, r8
    4cc2:	f000 f9af 	bl	5024 <__strtold>
    4cc6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    4cc8:	b943      	cbnz	r3, 4cdc <__sformatter+0x4d8>
    4cca:	982e      	ldr	r0, [sp, #184]	; 0xb8
    4ccc:	2800      	cmp	r0, #0
    4cce:	d09c      	beq.n	4c0a <__sformatter+0x406>
    4cd0:	4c97      	ldr	r4, [pc, #604]	; (4f30 <__sformatter+0x72c>)
    4cd2:	6820      	ldr	r0, [r4, #0]
    4cd4:	f7fb fef8 	bl	ac8 <__aeabi_f2d>
    4cd8:	2401      	movs	r4, #1
    4cda:	e000      	b.n	4cde <__sformatter+0x4da>
    4cdc:	18f6      	adds	r6, r6, r3
    4cde:	b17d      	cbz	r5, 4d00 <__sformatter+0x4fc>
    4ce0:	9a08      	ldr	r2, [sp, #32]
    4ce2:	2a04      	cmp	r2, #4
    4ce4:	d006      	beq.n	4cf4 <__sformatter+0x4f0>
    4ce6:	2a05      	cmp	r2, #5
    4ce8:	d004      	beq.n	4cf4 <__sformatter+0x4f0>
    4cea:	b92a      	cbnz	r2, 4cf8 <__sformatter+0x4f4>
    4cec:	f7fc fa02 	bl	10f4 <__aeabi_d2f>
    4cf0:	6028      	str	r0, [r5, #0]
    4cf2:	e001      	b.n	4cf8 <__sformatter+0x4f4>
    4cf4:	e9c5 0100 	strd	r0, r1, [r5]
    4cf8:	b914      	cbnz	r4, 4d00 <__sformatter+0x4fc>
    4cfa:	9d07      	ldr	r5, [sp, #28]
    4cfc:	1c6b      	adds	r3, r5, #1
    4cfe:	9307      	str	r3, [sp, #28]
    4d00:	9906      	ldr	r1, [sp, #24]
    4d02:	2201      	movs	r2, #1
    4d04:	1c48      	adds	r0, r1, #1
    4d06:	9006      	str	r0, [sp, #24]
    4d08:	9209      	str	r2, [sp, #36]	; 0x24
    4d0a:	e589      	b.n	4820 <__sformatter+0x1c>
    4d0c:	f1bc 0f00 	cmp.w	ip, #0
    4d10:	bf08      	it	eq
    4d12:	2301      	moveq	r3, #1
    4d14:	2d00      	cmp	r5, #0
    4d16:	d02e      	beq.n	4d76 <__sformatter+0x572>
    4d18:	2200      	movs	r2, #0
    4d1a:	920d      	str	r2, [sp, #52]	; 0x34
    4d1c:	2c00      	cmp	r4, #0
    4d1e:	f040 8112 	bne.w	4f46 <__sformatter+0x742>
    4d22:	eb05 0903 	add.w	r9, r5, r3
    4d26:	454d      	cmp	r5, r9
    4d28:	d016      	beq.n	4d58 <__sformatter+0x554>
    4d2a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
    4d2c:	b123      	cbz	r3, 4d38 <__sformatter+0x534>
    4d2e:	980d      	ldr	r0, [sp, #52]	; 0x34
    4d30:	2800      	cmp	r0, #0
    4d32:	da0f      	bge.n	4d54 <__sformatter+0x550>
    4d34:	2201      	movs	r2, #1
    4d36:	920a      	str	r2, [sp, #40]	; 0x28
    4d38:	2100      	movs	r1, #0
    4d3a:	4640      	mov	r0, r8
    4d3c:	460a      	mov	r2, r1
    4d3e:	47b8      	blx	r7
    4d40:	f1b0 3fff 	cmp.w	r0, #4294967295
    4d44:	4683      	mov	fp, r0
    4d46:	d007      	beq.n	4d58 <__sformatter+0x554>
    4d48:	f805 bb01 	strb.w	fp, [r5], #1
    4d4c:	980d      	ldr	r0, [sp, #52]	; 0x34
    4d4e:	1c41      	adds	r1, r0, #1
    4d50:	910d      	str	r1, [sp, #52]	; 0x34
    4d52:	e7e8      	b.n	4d26 <__sformatter+0x522>
    4d54:	2100      	movs	r1, #0
    4d56:	910a      	str	r1, [sp, #40]	; 0x28
    4d58:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    4d5a:	2b00      	cmp	r3, #0
    4d5c:	f000 809f 	beq.w	4e9e <__sformatter+0x69a>
    4d60:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
    4d62:	b11d      	cbz	r5, 4d6c <__sformatter+0x568>
    4d64:	980a      	ldr	r0, [sp, #40]	; 0x28
    4d66:	2800      	cmp	r0, #0
    4d68:	f000 80ed 	beq.w	4f46 <__sformatter+0x742>
    4d6c:	9907      	ldr	r1, [sp, #28]
    4d6e:	1c4a      	adds	r2, r1, #1
    4d70:	18f6      	adds	r6, r6, r3
    4d72:	9207      	str	r2, [sp, #28]
    4d74:	e014      	b.n	4da0 <__sformatter+0x59c>
    4d76:	950d      	str	r5, [sp, #52]	; 0x34
    4d78:	1e5d      	subs	r5, r3, #1
    4d7a:	1c6a      	adds	r2, r5, #1
    4d7c:	d00c      	beq.n	4d98 <__sformatter+0x594>
    4d7e:	2100      	movs	r1, #0
    4d80:	4640      	mov	r0, r8
    4d82:	460a      	mov	r2, r1
    4d84:	47b8      	blx	r7
    4d86:	3d01      	subs	r5, #1
    4d88:	f1b0 3fff 	cmp.w	r0, #4294967295
    4d8c:	4683      	mov	fp, r0
    4d8e:	d003      	beq.n	4d98 <__sformatter+0x594>
    4d90:	980d      	ldr	r0, [sp, #52]	; 0x34
    4d92:	1c41      	adds	r1, r0, #1
    4d94:	910d      	str	r1, [sp, #52]	; 0x34
    4d96:	e7f0      	b.n	4d7a <__sformatter+0x576>
    4d98:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    4d9a:	2a00      	cmp	r2, #0
    4d9c:	f000 80d5 	beq.w	4f4a <__sformatter+0x746>
    4da0:	9b06      	ldr	r3, [sp, #24]
    4da2:	1c5d      	adds	r5, r3, #1
    4da4:	9506      	str	r5, [sp, #24]
    4da6:	e53b      	b.n	4820 <__sformatter+0x1c>
    4da8:	2c00      	cmp	r4, #0
    4daa:	f040 80c9 	bne.w	4f40 <__sformatter+0x73c>
    4dae:	2100      	movs	r1, #0
    4db0:	4640      	mov	r0, r8
    4db2:	460a      	mov	r2, r1
    4db4:	47b8      	blx	r7
    4db6:	4605      	mov	r5, r0
    4db8:	f000 f904 	bl	4fc4 <isspace>
    4dbc:	b108      	cbz	r0, 4dc2 <__sformatter+0x5be>
    4dbe:	3601      	adds	r6, #1
    4dc0:	e7f5      	b.n	4dae <__sformatter+0x5aa>
    4dc2:	2d25      	cmp	r5, #37	; 0x25
    4dc4:	d008      	beq.n	4dd8 <__sformatter+0x5d4>
    4dc6:	4640      	mov	r0, r8
    4dc8:	4629      	mov	r1, r5
    4dca:	2201      	movs	r2, #1
    4dcc:	47b8      	blx	r7
    4dce:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
    4dd0:	2b00      	cmp	r3, #0
    4dd2:	f43f af1a 	beq.w	4c0a <__sformatter+0x406>
    4dd6:	e0b3      	b.n	4f40 <__sformatter+0x73c>
    4dd8:	3601      	adds	r6, #1
    4dda:	2301      	movs	r3, #1
    4ddc:	9309      	str	r3, [sp, #36]	; 0x24
    4dde:	e51f      	b.n	4820 <__sformatter+0x1c>
    4de0:	b9c4      	cbnz	r4, 4e14 <__sformatter+0x610>
    4de2:	4640      	mov	r0, r8
    4de4:	4621      	mov	r1, r4
    4de6:	4622      	mov	r2, r4
    4de8:	9304      	str	r3, [sp, #16]
    4dea:	47b8      	blx	r7
    4dec:	9b04      	ldr	r3, [sp, #16]
    4dee:	4681      	mov	r9, r0
    4df0:	9304      	str	r3, [sp, #16]
    4df2:	f000 f8e7 	bl	4fc4 <isspace>
    4df6:	9b04      	ldr	r3, [sp, #16]
    4df8:	b120      	cbz	r0, 4e04 <__sformatter+0x600>
    4dfa:	2100      	movs	r1, #0
    4dfc:	3601      	adds	r6, #1
    4dfe:	4640      	mov	r0, r8
    4e00:	460a      	mov	r2, r1
    4e02:	e7f1      	b.n	4de8 <__sformatter+0x5e4>
    4e04:	4640      	mov	r0, r8
    4e06:	4649      	mov	r1, r9
    4e08:	2201      	movs	r2, #1
    4e0a:	47b8      	blx	r7
    4e0c:	2001      	movs	r0, #1
    4e0e:	9009      	str	r0, [sp, #36]	; 0x24
    4e10:	9b04      	ldr	r3, [sp, #16]
    4e12:	e001      	b.n	4e18 <__sformatter+0x614>
    4e14:	2101      	movs	r1, #1
    4e16:	9109      	str	r1, [sp, #36]	; 0x24
    4e18:	2d00      	cmp	r5, #0
    4e1a:	d04b      	beq.n	4eb4 <__sformatter+0x6b0>
    4e1c:	2200      	movs	r2, #0
    4e1e:	920d      	str	r2, [sp, #52]	; 0x34
    4e20:	2c00      	cmp	r4, #0
    4e22:	f040 8090 	bne.w	4f46 <__sformatter+0x742>
    4e26:	f103 3eff 	add.w	lr, r3, #4294967295
    4e2a:	f1be 3fff 	cmp.w	lr, #4294967295
    4e2e:	46f1      	mov	r9, lr
    4e30:	d02a      	beq.n	4e88 <__sformatter+0x684>
    4e32:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
    4e34:	b123      	cbz	r3, 4e40 <__sformatter+0x63c>
    4e36:	980d      	ldr	r0, [sp, #52]	; 0x34
    4e38:	2800      	cmp	r0, #0
    4e3a:	dc23      	bgt.n	4e84 <__sformatter+0x680>
    4e3c:	2201      	movs	r2, #1
    4e3e:	920a      	str	r2, [sp, #40]	; 0x28
    4e40:	2100      	movs	r1, #0
    4e42:	4640      	mov	r0, r8
    4e44:	460a      	mov	r2, r1
    4e46:	f8cd e014 	str.w	lr, [sp, #20]
    4e4a:	47b8      	blx	r7
    4e4c:	f1b0 3fff 	cmp.w	r0, #4294967295
    4e50:	4683      	mov	fp, r0
    4e52:	f8dd c014 	ldr.w	ip, [sp, #20]
    4e56:	d017      	beq.n	4e88 <__sformatter+0x684>
    4e58:	a824      	add	r0, sp, #144	; 0x90
    4e5a:	fa5f f38b 	uxtb.w	r3, fp
    4e5e:	eb00 01d3 	add.w	r1, r0, r3, lsr #3
    4e62:	f00b 0207 	and.w	r2, fp, #7
    4e66:	2001      	movs	r0, #1
    4e68:	f811 1c48 	ldrb.w	r1, [r1, #-72]
    4e6c:	fa00 f202 	lsl.w	r2, r0, r2
    4e70:	4211      	tst	r1, r2
    4e72:	f10c 3eff 	add.w	lr, ip, #4294967295
    4e76:	d007      	beq.n	4e88 <__sformatter+0x684>
    4e78:	f805 3b01 	strb.w	r3, [r5], #1
    4e7c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    4e7e:	1818      	adds	r0, r3, r0
    4e80:	900d      	str	r0, [sp, #52]	; 0x34
    4e82:	e7d2      	b.n	4e2a <__sformatter+0x626>
    4e84:	2100      	movs	r1, #0
    4e86:	910a      	str	r1, [sp, #40]	; 0x28
    4e88:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    4e8a:	fa5f f18b 	uxtb.w	r1, fp
    4e8e:	b11b      	cbz	r3, 4e98 <__sformatter+0x694>
    4e90:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
    4e92:	b142      	cbz	r2, 4ea6 <__sformatter+0x6a2>
    4e94:	980a      	ldr	r0, [sp, #40]	; 0x28
    4e96:	b930      	cbnz	r0, 4ea6 <__sformatter+0x6a2>
    4e98:	4640      	mov	r0, r8
    4e9a:	2201      	movs	r2, #1
    4e9c:	47b8      	blx	r7
    4e9e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
    4ea0:	2b00      	cmp	r3, #0
    4ea2:	d052      	beq.n	4f4a <__sformatter+0x746>
    4ea4:	e04f      	b.n	4f46 <__sformatter+0x742>
    4ea6:	18f6      	adds	r6, r6, r3
    4ea8:	2300      	movs	r3, #0
    4eaa:	702b      	strb	r3, [r5, #0]
    4eac:	9d07      	ldr	r5, [sp, #28]
    4eae:	1c6a      	adds	r2, r5, #1
    4eb0:	9207      	str	r2, [sp, #28]
    4eb2:	e027      	b.n	4f04 <__sformatter+0x700>
    4eb4:	950d      	str	r5, [sp, #52]	; 0x34
    4eb6:	1e5d      	subs	r5, r3, #1
    4eb8:	1c6b      	adds	r3, r5, #1
    4eba:	46a9      	mov	r9, r5
    4ebc:	d019      	beq.n	4ef2 <__sformatter+0x6ee>
    4ebe:	2100      	movs	r1, #0
    4ec0:	4640      	mov	r0, r8
    4ec2:	460a      	mov	r2, r1
    4ec4:	47b8      	blx	r7
    4ec6:	f1b0 3fff 	cmp.w	r0, #4294967295
    4eca:	4683      	mov	fp, r0
    4ecc:	d011      	beq.n	4ef2 <__sformatter+0x6ee>
    4ece:	f3cb 02c4 	ubfx	r2, fp, #3, #5
    4ed2:	a924      	add	r1, sp, #144	; 0x90
    4ed4:	1888      	adds	r0, r1, r2
    4ed6:	f00b 0307 	and.w	r3, fp, #7
    4eda:	2101      	movs	r1, #1
    4edc:	f810 2c48 	ldrb.w	r2, [r0, #-72]
    4ee0:	fa01 f303 	lsl.w	r3, r1, r3
    4ee4:	3d01      	subs	r5, #1
    4ee6:	421a      	tst	r2, r3
    4ee8:	d003      	beq.n	4ef2 <__sformatter+0x6ee>
    4eea:	980d      	ldr	r0, [sp, #52]	; 0x34
    4eec:	1841      	adds	r1, r0, r1
    4eee:	910d      	str	r1, [sp, #52]	; 0x34
    4ef0:	e7e2      	b.n	4eb8 <__sformatter+0x6b4>
    4ef2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    4ef4:	b925      	cbnz	r5, 4f00 <__sformatter+0x6fc>
    4ef6:	4640      	mov	r0, r8
    4ef8:	4659      	mov	r1, fp
    4efa:	2201      	movs	r2, #1
    4efc:	47b8      	blx	r7
    4efe:	e48f      	b.n	4820 <__sformatter+0x1c>
    4f00:	1976      	adds	r6, r6, r5
    4f02:	4659      	mov	r1, fp
    4f04:	f1b9 0f00 	cmp.w	r9, #0
    4f08:	db02      	blt.n	4f10 <__sformatter+0x70c>
    4f0a:	4640      	mov	r0, r8
    4f0c:	2201      	movs	r2, #1
    4f0e:	47b8      	blx	r7
    4f10:	9906      	ldr	r1, [sp, #24]
    4f12:	1c48      	adds	r0, r1, #1
    4f14:	9006      	str	r0, [sp, #24]
    4f16:	e483      	b.n	4820 <__sformatter+0x1c>
    4f18:	2d00      	cmp	r5, #0
    4f1a:	f43f ac81 	beq.w	4820 <__sformatter+0x1c>
    4f1e:	9908      	ldr	r1, [sp, #32]
    4f20:	2903      	cmp	r1, #3
    4f22:	f63f ac7d 	bhi.w	4820 <__sformatter+0x1c>
    4f26:	e8df f001 	tbb	[pc, r1]
    4f2a:	0907      	.short	0x0907
    4f2c:	0705      	.short	0x0705
    4f2e:	bf00      	nop
    4f30:	1fffe020 	.word	0x1fffe020
    4f34:	802e      	strh	r6, [r5, #0]
    4f36:	e473      	b.n	4820 <__sformatter+0x1c>
    4f38:	602e      	str	r6, [r5, #0]
    4f3a:	e471      	b.n	4820 <__sformatter+0x1c>
    4f3c:	702e      	strb	r6, [r5, #0]
    4f3e:	e46f      	b.n	4820 <__sformatter+0x1c>
    4f40:	2401      	movs	r4, #1
    4f42:	9409      	str	r4, [sp, #36]	; 0x24
    4f44:	e46c      	b.n	4820 <__sformatter+0x1c>
    4f46:	2401      	movs	r4, #1
    4f48:	e46a      	b.n	4820 <__sformatter+0x1c>
    4f4a:	4640      	mov	r0, r8
    4f4c:	2100      	movs	r1, #0
    4f4e:	2202      	movs	r2, #2
    4f50:	47b8      	blx	r7
    4f52:	b128      	cbz	r0, 4f60 <__sformatter+0x75c>
    4f54:	9b06      	ldr	r3, [sp, #24]
    4f56:	bb1b      	cbnz	r3, 4fa0 <__sformatter+0x79c>
    4f58:	f04f 31ff 	mov.w	r1, #4294967295
    4f5c:	9107      	str	r1, [sp, #28]
    4f5e:	e01f      	b.n	4fa0 <__sformatter+0x79c>
    4f60:	9906      	ldr	r1, [sp, #24]
    4f62:	b9e9      	cbnz	r1, 4fa0 <__sformatter+0x79c>
    4f64:	9a09      	ldr	r2, [sp, #36]	; 0x24
    4f66:	b1da      	cbz	r2, 4fa0 <__sformatter+0x79c>
    4f68:	460a      	mov	r2, r1
    4f6a:	4640      	mov	r0, r8
    4f6c:	47b8      	blx	r7
    4f6e:	9906      	ldr	r1, [sp, #24]
    4f70:	4604      	mov	r4, r0
    4f72:	2202      	movs	r2, #2
    4f74:	4640      	mov	r0, r8
    4f76:	47b8      	blx	r7
    4f78:	2800      	cmp	r0, #0
    4f7a:	d1ed      	bne.n	4f58 <__sformatter+0x754>
    4f7c:	4640      	mov	r0, r8
    4f7e:	4621      	mov	r1, r4
    4f80:	2201      	movs	r2, #1
    4f82:	47b8      	blx	r7
    4f84:	e00c      	b.n	4fa0 <__sformatter+0x79c>
    4f86:	2900      	cmp	r1, #0
    4f88:	f43f adb4 	beq.w	4af4 <__sformatter+0x2f0>
    4f8c:	2300      	movs	r3, #0
    4f8e:	a91a      	add	r1, sp, #104	; 0x68
    4f90:	18ca      	adds	r2, r1, r3
    4f92:	3301      	adds	r3, #1
    4f94:	7a10      	ldrb	r0, [r2, #8]
    4f96:	43c1      	mvns	r1, r0
    4f98:	2b20      	cmp	r3, #32
    4f9a:	7211      	strb	r1, [r2, #8]
    4f9c:	d1f7      	bne.n	4f8e <__sformatter+0x78a>
    4f9e:	e5a9      	b.n	4af4 <__sformatter+0x2f0>
    4fa0:	9807      	ldr	r0, [sp, #28]
    4fa2:	b025      	add	sp, #148	; 0x94
    4fa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00004fa8 <isalpha>:
    4fa8:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
    4fac:	d805      	bhi.n	4fba <isalpha+0x12>
    4fae:	4b04      	ldr	r3, [pc, #16]	; (4fc0 <isalpha+0x18>)
    4fb0:	1818      	adds	r0, r3, r0
    4fb2:	7841      	ldrb	r1, [r0, #1]
    4fb4:	f001 0001 	and.w	r0, r1, #1
    4fb8:	4770      	bx	lr
    4fba:	2000      	movs	r0, #0
    4fbc:	4770      	bx	lr
    4fbe:	bf00      	nop
    4fc0:	0000c2c2 	.word	0x0000c2c2

00004fc4 <isspace>:
    4fc4:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
    4fc8:	d806      	bhi.n	4fd8 <isspace+0x14>
    4fca:	4b04      	ldr	r3, [pc, #16]	; (4fdc <isspace+0x18>)
    4fcc:	1818      	adds	r0, r3, r0
    4fce:	7841      	ldrb	r1, [r0, #1]
    4fd0:	f001 0210 	and.w	r2, r1, #16
    4fd4:	b2d0      	uxtb	r0, r2
    4fd6:	4770      	bx	lr
    4fd8:	2000      	movs	r0, #0
    4fda:	4770      	bx	lr
    4fdc:	0000c2c2 	.word	0x0000c2c2

00004fe0 <isupper>:
    4fe0:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
    4fe4:	d806      	bhi.n	4ff4 <isupper+0x14>
    4fe6:	4b04      	ldr	r3, [pc, #16]	; (4ff8 <isupper+0x18>)
    4fe8:	1818      	adds	r0, r3, r0
    4fea:	7841      	ldrb	r1, [r0, #1]
    4fec:	f001 0240 	and.w	r2, r1, #64	; 0x40
    4ff0:	b2d0      	uxtb	r0, r2
    4ff2:	4770      	bx	lr
    4ff4:	2000      	movs	r0, #0
    4ff6:	4770      	bx	lr
    4ff8:	0000c2c2 	.word	0x0000c2c2

00004ffc <isxdigit>:
    4ffc:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
    5000:	d806      	bhi.n	5010 <isxdigit+0x14>
    5002:	4b04      	ldr	r3, [pc, #16]	; (5014 <isxdigit+0x18>)
    5004:	1818      	adds	r0, r3, r0
    5006:	7841      	ldrb	r1, [r0, #1]
    5008:	f001 0202 	and.w	r2, r1, #2
    500c:	b2d0      	uxtb	r0, r2
    500e:	4770      	bx	lr
    5010:	2000      	movs	r0, #0
    5012:	4770      	bx	lr
    5014:	0000c2c2 	.word	0x0000c2c2

00005018 <toupper>:
    5018:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
    501c:	2b19      	cmp	r3, #25
    501e:	bf98      	it	ls
    5020:	3820      	subls	r0, #32
    5022:	4770      	bx	lr

00005024 <__strtold>:
    5024:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5028:	b09d      	sub	sp, #116	; 0x74
    502a:	2400      	movs	r4, #0
    502c:	930c      	str	r3, [sp, #48]	; 0x30
    502e:	4bb6      	ldr	r3, [pc, #728]	; (5308 <__strtold+0x2e4>)
    5030:	900d      	str	r0, [sp, #52]	; 0x34
    5032:	7818      	ldrb	r0, [r3, #0]
    5034:	f88d 4048 	strb.w	r4, [sp, #72]	; 0x48
    5038:	460e      	mov	r6, r1
    503a:	4617      	mov	r7, r2
    503c:	4621      	mov	r1, r4
    503e:	f88d 004d 	strb.w	r0, [sp, #77]	; 0x4d
    5042:	221f      	movs	r2, #31
    5044:	f10d 004e 	add.w	r0, sp, #78	; 0x4e
    5048:	f88d 4049 	strb.w	r4, [sp, #73]	; 0x49
    504c:	f8ad 404a 	strh.w	r4, [sp, #74]	; 0x4a
    5050:	f88d 404c 	strb.w	r4, [sp, #76]	; 0x4c
    5054:	f7fe fee6 	bl	3e24 <memset>
    5058:	9d26      	ldr	r5, [sp, #152]	; 0x98
    505a:	f88d 406d 	strb.w	r4, [sp, #109]	; 0x6d
    505e:	602c      	str	r4, [r5, #0]
    5060:	4621      	mov	r1, r4
    5062:	4622      	mov	r2, r4
    5064:	4638      	mov	r0, r7
    5066:	47b0      	blx	r6
    5068:	46a1      	mov	r9, r4
    506a:	940b      	str	r4, [sp, #44]	; 0x2c
    506c:	46a3      	mov	fp, r4
    506e:	9406      	str	r4, [sp, #24]
    5070:	940a      	str	r4, [sp, #40]	; 0x28
    5072:	9405      	str	r4, [sp, #20]
    5074:	9404      	str	r4, [sp, #16]
    5076:	9409      	str	r4, [sp, #36]	; 0x24
    5078:	9407      	str	r4, [sp, #28]
    507a:	9408      	str	r4, [sp, #32]
    507c:	2401      	movs	r4, #1
    507e:	4682      	mov	sl, r0
    5080:	46c8      	mov	r8, r9
    5082:	4625      	mov	r5, r4
    5084:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    5086:	4294      	cmp	r4, r2
    5088:	f300 81ed 	bgt.w	5466 <__strtold+0x442>
    508c:	f1ba 3fff 	cmp.w	sl, #4294967295
    5090:	f000 81e9 	beq.w	5466 <__strtold+0x442>
    5094:	f415 51c0 	ands.w	r1, r5, #6144	; 0x1800
    5098:	f040 81e5 	bne.w	5466 <__strtold+0x442>
    509c:	2d20      	cmp	r5, #32
    509e:	f000 8095 	beq.w	51cc <__strtold+0x1a8>
    50a2:	d813      	bhi.n	50cc <__strtold+0xa8>
    50a4:	2d04      	cmp	r5, #4
    50a6:	d067      	beq.n	5178 <__strtold+0x154>
    50a8:	d804      	bhi.n	50b4 <__strtold+0x90>
    50aa:	2d01      	cmp	r5, #1
    50ac:	d025      	beq.n	50fa <__strtold+0xd6>
    50ae:	2d02      	cmp	r5, #2
    50b0:	d1e8      	bne.n	5084 <__strtold+0x60>
    50b2:	e03c      	b.n	512e <__strtold+0x10a>
    50b4:	2d08      	cmp	r5, #8
    50b6:	d069      	beq.n	518c <__strtold+0x168>
    50b8:	2d10      	cmp	r5, #16
    50ba:	d1e3      	bne.n	5084 <__strtold+0x60>
    50bc:	f1aa 0130 	sub.w	r1, sl, #48	; 0x30
    50c0:	2909      	cmp	r1, #9
    50c2:	bf94      	ite	ls
    50c4:	2520      	movls	r5, #32
    50c6:	f44f 5580 	movhi.w	r5, #4096	; 0x1000
    50ca:	e7db      	b.n	5084 <__strtold+0x60>
    50cc:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
    50d0:	f000 80bb 	beq.w	524a <__strtold+0x226>
    50d4:	d805      	bhi.n	50e2 <__strtold+0xbe>
    50d6:	2d40      	cmp	r5, #64	; 0x40
    50d8:	f000 8090 	beq.w	51fc <__strtold+0x1d8>
    50dc:	2d80      	cmp	r5, #128	; 0x80
    50de:	d1d1      	bne.n	5084 <__strtold+0x60>
    50e0:	e09b      	b.n	521a <__strtold+0x1f6>
    50e2:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
    50e6:	f000 80c6 	beq.w	5276 <__strtold+0x252>
    50ea:	f5b5 4f00 	cmp.w	r5, #32768	; 0x8000
    50ee:	f000 80d3 	beq.w	5298 <__strtold+0x274>
    50f2:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
    50f6:	d1c5      	bne.n	5084 <__strtold+0x60>
    50f8:	e0b8      	b.n	526c <__strtold+0x248>
    50fa:	4650      	mov	r0, sl
    50fc:	9101      	str	r1, [sp, #4]
    50fe:	f7ff ff61 	bl	4fc4 <isspace>
    5102:	9901      	ldr	r1, [sp, #4]
    5104:	b138      	cbz	r0, 5116 <__strtold+0xf2>
    5106:	460a      	mov	r2, r1
    5108:	4638      	mov	r0, r7
    510a:	47b0      	blx	r6
    510c:	9a08      	ldr	r2, [sp, #32]
    510e:	4682      	mov	sl, r0
    5110:	1c50      	adds	r0, r2, #1
    5112:	9008      	str	r0, [sp, #32]
    5114:	e7b6      	b.n	5084 <__strtold+0x60>
    5116:	4650      	mov	r0, sl
    5118:	f7ff ff7e 	bl	5018 <toupper>
    511c:	282b      	cmp	r0, #43	; 0x2b
    511e:	f000 8186 	beq.w	542e <__strtold+0x40a>
    5122:	282d      	cmp	r0, #45	; 0x2d
    5124:	f040 8187 	bne.w	5436 <__strtold+0x412>
    5128:	2301      	movs	r3, #1
    512a:	9307      	str	r3, [sp, #28]
    512c:	e17f      	b.n	542e <__strtold+0x40a>
    512e:	f1ba 0f2e 	cmp.w	sl, #46	; 0x2e
    5132:	d107      	bne.n	5144 <__strtold+0x120>
    5134:	2100      	movs	r1, #0
    5136:	4638      	mov	r0, r7
    5138:	460a      	mov	r2, r1
    513a:	47b0      	blx	r6
    513c:	3401      	adds	r4, #1
    513e:	4682      	mov	sl, r0
    5140:	2510      	movs	r5, #16
    5142:	e79f      	b.n	5084 <__strtold+0x60>
    5144:	f1aa 0530 	sub.w	r5, sl, #48	; 0x30
    5148:	2d09      	cmp	r5, #9
    514a:	f200 8183 	bhi.w	5454 <__strtold+0x430>
    514e:	f1ba 0f30 	cmp.w	sl, #48	; 0x30
    5152:	f040 8172 	bne.w	543a <__strtold+0x416>
    5156:	2100      	movs	r1, #0
    5158:	460a      	mov	r2, r1
    515a:	4638      	mov	r0, r7
    515c:	47b0      	blx	r6
    515e:	4682      	mov	sl, r0
    5160:	f7ff ff5a 	bl	5018 <toupper>
    5164:	3401      	adds	r4, #1
    5166:	2858      	cmp	r0, #88	; 0x58
    5168:	bf08      	it	eq
    516a:	f04f 0801 	moveq.w	r8, #1
    516e:	bf14      	ite	ne
    5170:	2504      	movne	r5, #4
    5172:	f44f 4500 	moveq.w	r5, #32768	; 0x8000
    5176:	e785      	b.n	5084 <__strtold+0x60>
    5178:	f1ba 0f30 	cmp.w	sl, #48	; 0x30
    517c:	f040 815d 	bne.w	543a <__strtold+0x416>
    5180:	3401      	adds	r4, #1
    5182:	4638      	mov	r0, r7
    5184:	460a      	mov	r2, r1
    5186:	47b0      	blx	r6
    5188:	4682      	mov	sl, r0
    518a:	e77b      	b.n	5084 <__strtold+0x60>
    518c:	f1aa 0330 	sub.w	r3, sl, #48	; 0x30
    5190:	2b09      	cmp	r3, #9
    5192:	d90b      	bls.n	51ac <__strtold+0x188>
    5194:	f1ba 0f2e 	cmp.w	sl, #46	; 0x2e
    5198:	f040 8151 	bne.w	543e <__strtold+0x41a>
    519c:	2100      	movs	r1, #0
    519e:	4638      	mov	r0, r7
    51a0:	460a      	mov	r2, r1
    51a2:	47b0      	blx	r6
    51a4:	3401      	adds	r4, #1
    51a6:	4682      	mov	sl, r0
    51a8:	2520      	movs	r5, #32
    51aa:	e76b      	b.n	5084 <__strtold+0x60>
    51ac:	f89d 204c 	ldrb.w	r2, [sp, #76]	; 0x4c
    51b0:	2a13      	cmp	r2, #19
    51b2:	d807      	bhi.n	51c4 <__strtold+0x1a0>
    51b4:	a91c      	add	r1, sp, #112	; 0x70
    51b6:	188b      	adds	r3, r1, r2
    51b8:	3201      	adds	r2, #1
    51ba:	f803 ac23 	strb.w	sl, [r3, #-35]
    51be:	f88d 204c 	strb.w	r2, [sp, #76]	; 0x4c
    51c2:	e134      	b.n	542e <__strtold+0x40a>
    51c4:	9805      	ldr	r0, [sp, #20]
    51c6:	3001      	adds	r0, #1
    51c8:	9005      	str	r0, [sp, #20]
    51ca:	e130      	b.n	542e <__strtold+0x40a>
    51cc:	f1aa 0130 	sub.w	r1, sl, #48	; 0x30
    51d0:	2909      	cmp	r1, #9
    51d2:	f200 8134 	bhi.w	543e <__strtold+0x41a>
    51d6:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
    51da:	2b13      	cmp	r3, #19
    51dc:	f200 8127 	bhi.w	542e <__strtold+0x40a>
    51e0:	f1ba 0f30 	cmp.w	sl, #48	; 0x30
    51e4:	d100      	bne.n	51e8 <__strtold+0x1c4>
    51e6:	b133      	cbz	r3, 51f6 <__strtold+0x1d2>
    51e8:	a81c      	add	r0, sp, #112	; 0x70
    51ea:	18c2      	adds	r2, r0, r3
    51ec:	1c59      	adds	r1, r3, #1
    51ee:	f802 ac23 	strb.w	sl, [r2, #-35]
    51f2:	f88d 104c 	strb.w	r1, [sp, #76]	; 0x4c
    51f6:	9b05      	ldr	r3, [sp, #20]
    51f8:	1e58      	subs	r0, r3, #1
    51fa:	e7e5      	b.n	51c8 <__strtold+0x1a4>
    51fc:	4650      	mov	r0, sl
    51fe:	9101      	str	r1, [sp, #4]
    5200:	f7ff ff0a 	bl	5018 <toupper>
    5204:	2845      	cmp	r0, #69	; 0x45
    5206:	9901      	ldr	r1, [sp, #4]
    5208:	f040 812a 	bne.w	5460 <__strtold+0x43c>
    520c:	4638      	mov	r0, r7
    520e:	460a      	mov	r2, r1
    5210:	47b0      	blx	r6
    5212:	3401      	adds	r4, #1
    5214:	4682      	mov	sl, r0
    5216:	2580      	movs	r5, #128	; 0x80
    5218:	e734      	b.n	5084 <__strtold+0x60>
    521a:	f1ba 0f2b 	cmp.w	sl, #43	; 0x2b
    521e:	d106      	bne.n	522e <__strtold+0x20a>
    5220:	2100      	movs	r1, #0
    5222:	4638      	mov	r0, r7
    5224:	460a      	mov	r2, r1
    5226:	47b0      	blx	r6
    5228:	3401      	adds	r4, #1
    522a:	4682      	mov	sl, r0
    522c:	e00a      	b.n	5244 <__strtold+0x220>
    522e:	f1ba 0f2d 	cmp.w	sl, #45	; 0x2d
    5232:	d107      	bne.n	5244 <__strtold+0x220>
    5234:	2100      	movs	r1, #0
    5236:	4638      	mov	r0, r7
    5238:	460a      	mov	r2, r1
    523a:	47b0      	blx	r6
    523c:	2501      	movs	r5, #1
    523e:	3401      	adds	r4, #1
    5240:	4682      	mov	sl, r0
    5242:	9509      	str	r5, [sp, #36]	; 0x24
    5244:	f44f 7580 	mov.w	r5, #256	; 0x100
    5248:	e71c      	b.n	5084 <__strtold+0x60>
    524a:	f1aa 0530 	sub.w	r5, sl, #48	; 0x30
    524e:	2d09      	cmp	r5, #9
    5250:	f200 8100 	bhi.w	5454 <__strtold+0x430>
    5254:	f1ba 0f30 	cmp.w	sl, #48	; 0x30
    5258:	f040 80f3 	bne.w	5442 <__strtold+0x41e>
    525c:	4638      	mov	r0, r7
    525e:	460a      	mov	r2, r1
    5260:	47b0      	blx	r6
    5262:	3401      	adds	r4, #1
    5264:	4682      	mov	sl, r0
    5266:	f44f 7500 	mov.w	r5, #512	; 0x200
    526a:	e70b      	b.n	5084 <__strtold+0x60>
    526c:	f1ba 0f30 	cmp.w	sl, #48	; 0x30
    5270:	f040 80e7 	bne.w	5442 <__strtold+0x41e>
    5274:	e0db      	b.n	542e <__strtold+0x40a>
    5276:	f1aa 0230 	sub.w	r2, sl, #48	; 0x30
    527a:	2a09      	cmp	r2, #9
    527c:	f200 80f0 	bhi.w	5460 <__strtold+0x43c>
    5280:	9804      	ldr	r0, [sp, #16]
    5282:	230a      	movs	r3, #10
    5284:	fb03 2a00 	mla	sl, r3, r0, r2
    5288:	f647 72ff 	movw	r2, #32767	; 0x7fff
    528c:	4592      	cmp	sl, r2
    528e:	bfa8      	it	ge
    5290:	4692      	movge	sl, r2
    5292:	f8cd a010 	str.w	sl, [sp, #16]
    5296:	e773      	b.n	5180 <__strtold+0x15c>
    5298:	f1b8 0f10 	cmp.w	r8, #16
    529c:	d07d      	beq.n	539a <__strtold+0x376>
    529e:	d821      	bhi.n	52e4 <__strtold+0x2c0>
    52a0:	f1b8 0f02 	cmp.w	r8, #2
    52a4:	d032      	beq.n	530c <__strtold+0x2e8>
    52a6:	d815      	bhi.n	52d4 <__strtold+0x2b0>
    52a8:	f1b8 0f01 	cmp.w	r8, #1
    52ac:	f47f aeea 	bne.w	5084 <__strtold+0x60>
    52b0:	f04f 0900 	mov.w	r9, #0
    52b4:	4638      	mov	r0, r7
    52b6:	4649      	mov	r1, r9
    52b8:	464a      	mov	r2, r9
    52ba:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
    52be:	f8cd 9044 	str.w	r9, [sp, #68]	; 0x44
    52c2:	47b0      	blx	r6
    52c4:	4682      	mov	sl, r0
    52c6:	200e      	movs	r0, #14
    52c8:	3401      	adds	r4, #1
    52ca:	46cb      	mov	fp, r9
    52cc:	900a      	str	r0, [sp, #40]	; 0x28
    52ce:	f04f 0802 	mov.w	r8, #2
    52d2:	e6d7      	b.n	5084 <__strtold+0x60>
    52d4:	f1b8 0f04 	cmp.w	r8, #4
    52d8:	d01d      	beq.n	5316 <__strtold+0x2f2>
    52da:	f1b8 0f08 	cmp.w	r8, #8
    52de:	f47f aed1 	bne.w	5084 <__strtold+0x60>
    52e2:	e02f      	b.n	5344 <__strtold+0x320>
    52e4:	f1b8 0f40 	cmp.w	r8, #64	; 0x40
    52e8:	d07c      	beq.n	53e4 <__strtold+0x3c0>
    52ea:	d804      	bhi.n	52f6 <__strtold+0x2d2>
    52ec:	f1b8 0f20 	cmp.w	r8, #32
    52f0:	f47f aec8 	bne.w	5084 <__strtold+0x60>
    52f4:	e05f      	b.n	53b6 <__strtold+0x392>
    52f6:	f1b8 0f80 	cmp.w	r8, #128	; 0x80
    52fa:	f000 8083 	beq.w	5404 <__strtold+0x3e0>
    52fe:	f5b8 7f80 	cmp.w	r8, #256	; 0x100
    5302:	f47f aebf 	bne.w	5084 <__strtold+0x60>
    5306:	e081      	b.n	540c <__strtold+0x3e8>
    5308:	00007e4c 	.word	0x00007e4c
    530c:	f1ba 0f30 	cmp.w	sl, #48	; 0x30
    5310:	f040 809a 	bne.w	5448 <__strtold+0x424>
    5314:	e08b      	b.n	542e <__strtold+0x40a>
    5316:	4650      	mov	r0, sl
    5318:	f7ff fe70 	bl	4ffc <isxdigit>
    531c:	4601      	mov	r1, r0
    531e:	b958      	cbnz	r0, 5338 <__strtold+0x314>
    5320:	f1ba 0f2e 	cmp.w	sl, #46	; 0x2e
    5324:	f040 8093 	bne.w	544e <__strtold+0x42a>
    5328:	4638      	mov	r0, r7
    532a:	460a      	mov	r2, r1
    532c:	47b0      	blx	r6
    532e:	3401      	adds	r4, #1
    5330:	4682      	mov	sl, r0
    5332:	f04f 0808 	mov.w	r8, #8
    5336:	e6a5      	b.n	5084 <__strtold+0x60>
    5338:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    533a:	4599      	cmp	r9, r3
    533c:	d277      	bcs.n	542e <__strtold+0x40a>
    533e:	f109 0901 	add.w	r9, r9, #1
    5342:	e007      	b.n	5354 <__strtold+0x330>
    5344:	4650      	mov	r0, sl
    5346:	f7ff fe59 	bl	4ffc <isxdigit>
    534a:	2800      	cmp	r0, #0
    534c:	d07f      	beq.n	544e <__strtold+0x42a>
    534e:	990a      	ldr	r1, [sp, #40]	; 0x28
    5350:	4589      	cmp	r9, r1
    5352:	d26c      	bcs.n	542e <__strtold+0x40a>
    5354:	a910      	add	r1, sp, #64	; 0x40
    5356:	ea4f 026b 	mov.w	r2, fp, asr #1
    535a:	4650      	mov	r0, sl
    535c:	f811 c002 	ldrb.w	ip, [r1, r2]
    5360:	9101      	str	r1, [sp, #4]
    5362:	9202      	str	r2, [sp, #8]
    5364:	f8cd c00c 	str.w	ip, [sp, #12]
    5368:	f7ff fe56 	bl	5018 <toupper>
    536c:	ab01      	add	r3, sp, #4
    536e:	2840      	cmp	r0, #64	; 0x40
    5370:	e893 1006 	ldmia.w	r3, {r1, r2, ip}
    5374:	dd01      	ble.n	537a <__strtold+0x356>
    5376:	3837      	subs	r0, #55	; 0x37
    5378:	e000      	b.n	537c <__strtold+0x358>
    537a:	3830      	subs	r0, #48	; 0x30
    537c:	f01b 0f01 	tst.w	fp, #1
    5380:	b2c0      	uxtb	r0, r0
    5382:	bf0a      	itet	eq
    5384:	ea4c 1c00 	orreq.w	ip, ip, r0, lsl #4
    5388:	ea40 0c0c 	orrne.w	ip, r0, ip
    538c:	fa5f fc8c 	uxtbeq.w	ip, ip
    5390:	f801 c002 	strb.w	ip, [r1, r2]
    5394:	f10b 0b01 	add.w	fp, fp, #1
    5398:	e049      	b.n	542e <__strtold+0x40a>
    539a:	4650      	mov	r0, sl
    539c:	f7ff fe3c 	bl	5018 <toupper>
    53a0:	2850      	cmp	r0, #80	; 0x50
    53a2:	d15d      	bne.n	5460 <__strtold+0x43c>
    53a4:	2100      	movs	r1, #0
    53a6:	4638      	mov	r0, r7
    53a8:	460a      	mov	r2, r1
    53aa:	47b0      	blx	r6
    53ac:	3401      	adds	r4, #1
    53ae:	4682      	mov	sl, r0
    53b0:	f04f 0820 	mov.w	r8, #32
    53b4:	e666      	b.n	5084 <__strtold+0x60>
    53b6:	f1ba 0f2d 	cmp.w	sl, #45	; 0x2d
    53ba:	d008      	beq.n	53ce <__strtold+0x3aa>
    53bc:	f1ba 0f2b 	cmp.w	sl, #43	; 0x2b
    53c0:	d007      	beq.n	53d2 <__strtold+0x3ae>
    53c2:	4638      	mov	r0, r7
    53c4:	4651      	mov	r1, sl
    53c6:	2201      	movs	r2, #1
    53c8:	47b0      	blx	r6
    53ca:	3c01      	subs	r4, #1
    53cc:	e001      	b.n	53d2 <__strtold+0x3ae>
    53ce:	2101      	movs	r1, #1
    53d0:	910b      	str	r1, [sp, #44]	; 0x2c
    53d2:	2100      	movs	r1, #0
    53d4:	4638      	mov	r0, r7
    53d6:	460a      	mov	r2, r1
    53d8:	47b0      	blx	r6
    53da:	3401      	adds	r4, #1
    53dc:	4682      	mov	sl, r0
    53de:	f04f 0840 	mov.w	r8, #64	; 0x40
    53e2:	e64f      	b.n	5084 <__strtold+0x60>
    53e4:	f1aa 0030 	sub.w	r0, sl, #48	; 0x30
    53e8:	2809      	cmp	r0, #9
    53ea:	d833      	bhi.n	5454 <__strtold+0x430>
    53ec:	f1ba 0f30 	cmp.w	sl, #48	; 0x30
    53f0:	d133      	bne.n	545a <__strtold+0x436>
    53f2:	2100      	movs	r1, #0
    53f4:	4638      	mov	r0, r7
    53f6:	460a      	mov	r2, r1
    53f8:	47b0      	blx	r6
    53fa:	3401      	adds	r4, #1
    53fc:	4682      	mov	sl, r0
    53fe:	f04f 0880 	mov.w	r8, #128	; 0x80
    5402:	e63f      	b.n	5084 <__strtold+0x60>
    5404:	f1ba 0f30 	cmp.w	sl, #48	; 0x30
    5408:	d127      	bne.n	545a <__strtold+0x436>
    540a:	e010      	b.n	542e <__strtold+0x40a>
    540c:	f1aa 0230 	sub.w	r2, sl, #48	; 0x30
    5410:	2a09      	cmp	r2, #9
    5412:	d825      	bhi.n	5460 <__strtold+0x43c>
    5414:	9806      	ldr	r0, [sp, #24]
    5416:	230a      	movs	r3, #10
    5418:	fb03 a100 	mla	r1, r3, r0, sl
    541c:	9b04      	ldr	r3, [sp, #16]
    541e:	f647 72ff 	movw	r2, #32767	; 0x7fff
    5422:	3930      	subs	r1, #48	; 0x30
    5424:	4293      	cmp	r3, r2
    5426:	bfa8      	it	ge
    5428:	4613      	movge	r3, r2
    542a:	9106      	str	r1, [sp, #24]
    542c:	9304      	str	r3, [sp, #16]
    542e:	3401      	adds	r4, #1
    5430:	4638      	mov	r0, r7
    5432:	2100      	movs	r1, #0
    5434:	e6a6      	b.n	5184 <__strtold+0x160>
    5436:	2502      	movs	r5, #2
    5438:	e624      	b.n	5084 <__strtold+0x60>
    543a:	2508      	movs	r5, #8
    543c:	e622      	b.n	5084 <__strtold+0x60>
    543e:	2540      	movs	r5, #64	; 0x40
    5440:	e620      	b.n	5084 <__strtold+0x60>
    5442:	f44f 6580 	mov.w	r5, #1024	; 0x400
    5446:	e61d      	b.n	5084 <__strtold+0x60>
    5448:	f04f 0804 	mov.w	r8, #4
    544c:	e61a      	b.n	5084 <__strtold+0x60>
    544e:	f04f 0810 	mov.w	r8, #16
    5452:	e617      	b.n	5084 <__strtold+0x60>
    5454:	f44f 5580 	mov.w	r5, #4096	; 0x1000
    5458:	e614      	b.n	5084 <__strtold+0x60>
    545a:	f44f 7880 	mov.w	r8, #256	; 0x100
    545e:	e611      	b.n	5084 <__strtold+0x60>
    5460:	f44f 6500 	mov.w	r5, #2048	; 0x800
    5464:	e60e      	b.n	5084 <__strtold+0x60>
    5466:	f5b5 4f00 	cmp.w	r5, #32768	; 0x8000
    546a:	d007      	beq.n	547c <__strtold+0x458>
    546c:	f640 632c 	movw	r3, #3628	; 0xe2c
    5470:	402b      	ands	r3, r5
    5472:	f1d3 0101 	rsbs	r1, r3, #1
    5476:	bf38      	it	cc
    5478:	2100      	movcc	r1, #0
    547a:	e008      	b.n	548e <__strtold+0x46a>
    547c:	2c03      	cmp	r4, #3
    547e:	dd05      	ble.n	548c <__strtold+0x468>
    5480:	f418 7fc7 	tst.w	r8, #398	; 0x18e
    5484:	bf14      	ite	ne
    5486:	2100      	movne	r1, #0
    5488:	2101      	moveq	r1, #1
    548a:	e000      	b.n	548e <__strtold+0x46a>
    548c:	2101      	movs	r1, #1
    548e:	b119      	cbz	r1, 5498 <__strtold+0x474>
    5490:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    5492:	2400      	movs	r4, #0
    5494:	601c      	str	r4, [r3, #0]
    5496:	e004      	b.n	54a2 <__strtold+0x47e>
    5498:	9808      	ldr	r0, [sp, #32]
    549a:	990c      	ldr	r1, [sp, #48]	; 0x30
    549c:	3c01      	subs	r4, #1
    549e:	1822      	adds	r2, r4, r0
    54a0:	600a      	str	r2, [r1, #0]
    54a2:	4638      	mov	r0, r7
    54a4:	4651      	mov	r1, sl
    54a6:	2201      	movs	r2, #1
    54a8:	47b0      	blx	r6
    54aa:	f1b8 0f00 	cmp.w	r8, #0
    54ae:	d17b      	bne.n	55a8 <__strtold+0x584>
    54b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
    54b2:	b113      	cbz	r3, 54ba <__strtold+0x496>
    54b4:	9a04      	ldr	r2, [sp, #16]
    54b6:	4251      	negs	r1, r2
    54b8:	9104      	str	r1, [sp, #16]
    54ba:	f89d 104c 	ldrb.w	r1, [sp, #76]	; 0x4c
    54be:	a81c      	add	r0, sp, #112	; 0x70
    54c0:	1842      	adds	r2, r0, r1
    54c2:	3a23      	subs	r2, #35	; 0x23
    54c4:	4613      	mov	r3, r2
    54c6:	9e05      	ldr	r6, [sp, #20]
    54c8:	18b4      	adds	r4, r6, r2
    54ca:	1e4e      	subs	r6, r1, #1
    54cc:	1ae0      	subs	r0, r4, r3
    54ce:	1ab4      	subs	r4, r6, r2
    54d0:	1a8e      	subs	r6, r1, r2
    54d2:	18f6      	adds	r6, r6, r3
    54d4:	18e4      	adds	r4, r4, r3
    54d6:	b966      	cbnz	r6, 54f2 <__strtold+0x4ce>
    54d8:	b2e1      	uxtb	r1, r4
    54da:	1c4a      	adds	r2, r1, #1
    54dc:	b2d3      	uxtb	r3, r2
    54de:	f88d 304c 	strb.w	r3, [sp, #76]	; 0x4c
    54e2:	b95b      	cbnz	r3, 54fc <__strtold+0x4d8>
    54e4:	2430      	movs	r4, #48	; 0x30
    54e6:	1c8e      	adds	r6, r1, #2
    54e8:	f88d 404d 	strb.w	r4, [sp, #77]	; 0x4d
    54ec:	f88d 604c 	strb.w	r6, [sp, #76]	; 0x4c
    54f0:	e004      	b.n	54fc <__strtold+0x4d8>
    54f2:	f813 6d01 	ldrb.w	r6, [r3, #-1]!
    54f6:	2e30      	cmp	r6, #48	; 0x30
    54f8:	d0e5      	beq.n	54c6 <__strtold+0x4a2>
    54fa:	e7ed      	b.n	54d8 <__strtold+0x4b4>
    54fc:	9904      	ldr	r1, [sp, #16]
    54fe:	f501 729a 	add.w	r2, r1, #308	; 0x134
    5502:	f5b2 7f1a 	cmp.w	r2, #616	; 0x268
    5506:	d90b      	bls.n	5520 <__strtold+0x4fc>
    5508:	f89d 304d 	ldrb.w	r3, [sp, #77]	; 0x4d
    550c:	2b30      	cmp	r3, #48	; 0x30
    550e:	d104      	bne.n	551a <__strtold+0x4f6>
    5510:	f89d 404e 	ldrb.w	r4, [sp, #78]	; 0x4e
    5514:	2c00      	cmp	r4, #0
    5516:	f000 80a5 	beq.w	5664 <__strtold+0x640>
    551a:	9926      	ldr	r1, [sp, #152]	; 0x98
    551c:	2601      	movs	r6, #1
    551e:	600e      	str	r6, [r1, #0]
    5520:	9a26      	ldr	r2, [sp, #152]	; 0x98
    5522:	6813      	ldr	r3, [r2, #0]
    5524:	b153      	cbz	r3, 553c <__strtold+0x518>
    5526:	9d09      	ldr	r5, [sp, #36]	; 0x24
    5528:	2d00      	cmp	r5, #0
    552a:	f040 809b 	bne.w	5664 <__strtold+0x640>
    552e:	9c07      	ldr	r4, [sp, #28]
    5530:	4e6b      	ldr	r6, [pc, #428]	; (56e0 <__strtold+0x6bc>)
    5532:	b10c      	cbz	r4, 5538 <__strtold+0x514>
    5534:	ce50      	ldmia	r6, {r4, r6}
    5536:	e034      	b.n	55a2 <__strtold+0x57e>
    5538:	ce50      	ldmia	r6, {r4, r6}
    553a:	e0cb      	b.n	56d4 <__strtold+0x6b0>
    553c:	9b04      	ldr	r3, [sp, #16]
    553e:	4f69      	ldr	r7, [pc, #420]	; (56e4 <__strtold+0x6c0>)
    5540:	eb03 0a00 	add.w	sl, r3, r0
    5544:	a812      	add	r0, sp, #72	; 0x48
    5546:	f8d7 8000 	ldr.w	r8, [r7]
    554a:	f8ad a04a 	strh.w	sl, [sp, #74]	; 0x4a
    554e:	f000 fb53 	bl	5bf8 <__dec2num>
    5552:	f8c7 8000 	str.w	r8, [r7]
    5556:	2200      	movs	r2, #0
    5558:	2300      	movs	r3, #0
    555a:	4604      	mov	r4, r0
    555c:	460e      	mov	r6, r1
    555e:	f7fb fd6f 	bl	1040 <__aeabi_dcmpeq>
    5562:	b138      	cbz	r0, 5574 <__strtold+0x550>
    5564:	f89d 104d 	ldrb.w	r1, [sp, #77]	; 0x4d
    5568:	2930      	cmp	r1, #48	; 0x30
    556a:	d010      	beq.n	558e <__strtold+0x56a>
    556c:	9a26      	ldr	r2, [sp, #152]	; 0x98
    556e:	2301      	movs	r3, #1
    5570:	6013      	str	r3, [r2, #0]
    5572:	e00c      	b.n	558e <__strtold+0x56a>
    5574:	4a5c      	ldr	r2, [pc, #368]	; (56e8 <__strtold+0x6c4>)
    5576:	4620      	mov	r0, r4
    5578:	4631      	mov	r1, r6
    557a:	e9d2 2300 	ldrd	r2, r3, [r2]
    557e:	f7fb fd87 	bl	1090 <__aeabi_dcmpgt>
    5582:	b120      	cbz	r0, 558e <__strtold+0x56a>
    5584:	9c26      	ldr	r4, [sp, #152]	; 0x98
    5586:	4e56      	ldr	r6, [pc, #344]	; (56e0 <__strtold+0x6bc>)
    5588:	2001      	movs	r0, #1
    558a:	6020      	str	r0, [r4, #0]
    558c:	ce50      	ldmia	r6, {r4, r6}
    558e:	9807      	ldr	r0, [sp, #28]
    5590:	2800      	cmp	r0, #0
    5592:	f000 809f 	beq.w	56d4 <__strtold+0x6b0>
    5596:	f640 612c 	movw	r1, #3628	; 0xe2c
    559a:	4029      	ands	r1, r5
    559c:	2900      	cmp	r1, #0
    559e:	f000 8099 	beq.w	56d4 <__strtold+0x6b0>
    55a2:	f106 4600 	add.w	r6, r6, #2147483648	; 0x80000000
    55a6:	e095      	b.n	56d4 <__strtold+0x6b0>
    55a8:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    55aa:	b116      	cbz	r6, 55b2 <__strtold+0x58e>
    55ac:	9d06      	ldr	r5, [sp, #24]
    55ae:	4268      	negs	r0, r5
    55b0:	9006      	str	r0, [sp, #24]
    55b2:	9d06      	ldr	r5, [sp, #24]
    55b4:	f89d 2040 	ldrb.w	r2, [sp, #64]	; 0x40
    55b8:	eb05 0989 	add.w	r9, r5, r9, lsl #2
    55bc:	2300      	movs	r3, #0
    55be:	2180      	movs	r1, #128	; 0x80
    55c0:	fa21 f103 	lsr.w	r1, r1, r3
    55c4:	4211      	tst	r1, r2
    55c6:	d104      	bne.n	55d2 <__strtold+0x5ae>
    55c8:	3301      	adds	r3, #1
    55ca:	2b04      	cmp	r3, #4
    55cc:	f109 39ff 	add.w	r9, r9, #4294967295
    55d0:	d1f5      	bne.n	55be <__strtold+0x59a>
    55d2:	2000      	movs	r0, #0
    55d4:	ae10      	add	r6, sp, #64	; 0x40
    55d6:	5d84      	ldrb	r4, [r0, r6]
    55d8:	b91c      	cbnz	r4, 55e2 <__strtold+0x5be>
    55da:	3001      	adds	r0, #1
    55dc:	2808      	cmp	r0, #8
    55de:	d1f9      	bne.n	55d4 <__strtold+0x5b0>
    55e0:	e077      	b.n	56d2 <__strtold+0x6ae>
    55e2:	1c5d      	adds	r5, r3, #1
    55e4:	1db2      	adds	r2, r6, #6
    55e6:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
    55ea:	2100      	movs	r1, #0
    55ec:	7850      	ldrb	r0, [r2, #1]
    55ee:	fa00 f605 	lsl.w	r6, r0, r5
    55f2:	4331      	orrs	r1, r6
    55f4:	7051      	strb	r1, [r2, #1]
    55f6:	f1c3 0107 	rsb	r1, r3, #7
    55fa:	3a01      	subs	r2, #1
    55fc:	fa40 f001 	asr.w	r0, r0, r1
    5600:	42a2      	cmp	r2, r4
    5602:	b2c1      	uxtb	r1, r0
    5604:	d1f2      	bne.n	55ec <__strtold+0x5c8>
    5606:	2300      	movs	r3, #0
    5608:	930e      	str	r3, [sp, #56]	; 0x38
    560a:	930f      	str	r3, [sp, #60]	; 0x3c
    560c:	ad1c      	add	r5, sp, #112	; 0x70
    560e:	eb05 04d3 	add.w	r4, r5, r3, lsr #3
    5612:	f103 0108 	add.w	r1, r3, #8
    5616:	2934      	cmp	r1, #52	; 0x34
    5618:	f103 060c 	add.w	r6, r3, #12
    561c:	f814 2c30 	ldrb.w	r2, [r4, #-48]
    5620:	d905      	bls.n	562e <__strtold+0x60a>
    5622:	f1c3 0034 	rsb	r0, r3, #52	; 0x34
    5626:	25ff      	movs	r5, #255	; 0xff
    5628:	fa05 f400 	lsl.w	r4, r5, r0
    562c:	4022      	ands	r2, r4
    562e:	08f6      	lsrs	r6, r6, #3
    5630:	ad0e      	add	r5, sp, #56	; 0x38
    5632:	3314      	adds	r3, #20
    5634:	5da8      	ldrb	r0, [r5, r6]
    5636:	ea40 1412 	orr.w	r4, r0, r2, lsr #4
    563a:	08db      	lsrs	r3, r3, #3
    563c:	55ac      	strb	r4, [r5, r6]
    563e:	5cee      	ldrb	r6, [r5, r3]
    5640:	2938      	cmp	r1, #56	; 0x38
    5642:	ea46 1202 	orr.w	r2, r6, r2, lsl #4
    5646:	54ea      	strb	r2, [r5, r3]
    5648:	460b      	mov	r3, r1
    564a:	d1df      	bne.n	560c <__strtold+0x5e8>
    564c:	9904      	ldr	r1, [sp, #16]
    564e:	f201 3afe 	addw	sl, r1, #1022	; 0x3fe
    5652:	44d1      	add	r9, sl
    5654:	f429 60ff 	bic.w	r0, r9, #2040	; 0x7f8
    5658:	f020 0407 	bic.w	r4, r0, #7
    565c:	b124      	cbz	r4, 5668 <__strtold+0x644>
    565e:	9c26      	ldr	r4, [sp, #152]	; 0x98
    5660:	2601      	movs	r6, #1
    5662:	6026      	str	r6, [r4, #0]
    5664:	2400      	movs	r4, #0
    5666:	e034      	b.n	56d2 <__strtold+0x6ae>
    5668:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
    566c:	f89d 2039 	ldrb.w	r2, [sp, #57]	; 0x39
    5670:	ea4f 5949 	mov.w	r9, r9, lsl #21
    5674:	ea45 6659 	orr.w	r6, r5, r9, lsr #25
    5678:	9d07      	ldr	r5, [sp, #28]
    567a:	f88d 6038 	strb.w	r6, [sp, #56]	; 0x38
    567e:	ea42 4359 	orr.w	r3, r2, r9, lsr #17
    5682:	fa5f f983 	uxtb.w	r9, r3
    5686:	b11d      	cbz	r5, 5690 <__strtold+0x66c>
    5688:	f066 017f 	orn	r1, r6, #127	; 0x7f
    568c:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
    5690:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
    5694:	f89d 403f 	ldrb.w	r4, [sp, #63]	; 0x3f
    5698:	f89d 603e 	ldrb.w	r6, [sp, #62]	; 0x3e
    569c:	f88d 003f 	strb.w	r0, [sp, #63]	; 0x3f
    56a0:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
    56a4:	f89d 203d 	ldrb.w	r2, [sp, #61]	; 0x3d
    56a8:	f89d 103b 	ldrb.w	r1, [sp, #59]	; 0x3b
    56ac:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
    56b0:	f88d 6039 	strb.w	r6, [sp, #57]	; 0x39
    56b4:	f88d 4038 	strb.w	r4, [sp, #56]	; 0x38
    56b8:	f88d 903e 	strb.w	r9, [sp, #62]	; 0x3e
    56bc:	f88d 203a 	strb.w	r2, [sp, #58]	; 0x3a
    56c0:	f88d 303d 	strb.w	r3, [sp, #61]	; 0x3d
    56c4:	f88d 003b 	strb.w	r0, [sp, #59]	; 0x3b
    56c8:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
    56cc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
    56ce:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
    56d0:	e000      	b.n	56d4 <__strtold+0x6b0>
    56d2:	4626      	mov	r6, r4
    56d4:	4620      	mov	r0, r4
    56d6:	4631      	mov	r1, r6
    56d8:	b01d      	add	sp, #116	; 0x74
    56da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    56de:	bf00      	nop
    56e0:	1fffe018 	.word	0x1fffe018
    56e4:	1fffea4c 	.word	0x1fffea4c
    56e8:	1fffe024 	.word	0x1fffe024

000056ec <__strtoul>:
    56ec:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    56f0:	4615      	mov	r5, r2
    56f2:	461e      	mov	r6, r3
    56f4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    56f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    56f8:	9101      	str	r1, [sp, #4]
    56fa:	2100      	movs	r1, #0
    56fc:	f1b0 0900 	subs.w	r9, r0, #0
    5700:	6019      	str	r1, [r3, #0]
    5702:	6011      	str	r1, [r2, #0]
    5704:	db18      	blt.n	5738 <__strtoul+0x4c>
    5706:	f1b9 0f01 	cmp.w	r9, #1
    570a:	d015      	beq.n	5738 <__strtoul+0x4c>
    570c:	f1b9 0f24 	cmp.w	r9, #36	; 0x24
    5710:	dc12      	bgt.n	5738 <__strtoul+0x4c>
    5712:	9801      	ldr	r0, [sp, #4]
    5714:	4288      	cmp	r0, r1
    5716:	dd07      	ble.n	5728 <__strtoul+0x3c>
    5718:	4630      	mov	r0, r6
    571a:	460a      	mov	r2, r1
    571c:	47a8      	blx	r5
    571e:	f04f 0b01 	mov.w	fp, #1
    5722:	4682      	mov	sl, r0
    5724:	465c      	mov	r4, fp
    5726:	e002      	b.n	572e <__strtoul+0x42>
    5728:	468a      	mov	sl, r1
    572a:	468b      	mov	fp, r1
    572c:	2440      	movs	r4, #64	; 0x40
    572e:	46c8      	mov	r8, r9
    5730:	f1b9 0f00 	cmp.w	r9, #0
    5734:	d007      	beq.n	5746 <__strtoul+0x5a>
    5736:	e002      	b.n	573e <__strtoul+0x52>
    5738:	468a      	mov	sl, r1
    573a:	468b      	mov	fp, r1
    573c:	2440      	movs	r4, #64	; 0x40
    573e:	f04f 38ff 	mov.w	r8, #4294967295
    5742:	fbb8 f8f9 	udiv	r8, r8, r9
    5746:	2700      	movs	r7, #0
    5748:	9700      	str	r7, [sp, #0]
    574a:	9b01      	ldr	r3, [sp, #4]
    574c:	459b      	cmp	fp, r3
    574e:	f300 80c1 	bgt.w	58d4 <__strtoul+0x1e8>
    5752:	f1ba 3fff 	cmp.w	sl, #4294967295
    5756:	f000 80bd 	beq.w	58d4 <__strtoul+0x1e8>
    575a:	f014 0f60 	tst.w	r4, #96	; 0x60
    575e:	f040 80b9 	bne.w	58d4 <__strtoul+0x1e8>
    5762:	1e60      	subs	r0, r4, #1
    5764:	280f      	cmp	r0, #15
    5766:	d8f0      	bhi.n	574a <__strtoul+0x5e>
    5768:	a301      	add	r3, pc, #4	; (adr r3, 5770 <__strtoul+0x84>)
    576a:	f853 f020 	ldr.w	pc, [r3, r0, lsl #2]
    576e:	bf00      	nop
    5770:	000057b1 	.word	0x000057b1
    5774:	000057fd 	.word	0x000057fd
    5778:	0000574b 	.word	0x0000574b
    577c:	00005821 	.word	0x00005821
    5780:	0000574b 	.word	0x0000574b
    5784:	0000574b 	.word	0x0000574b
    5788:	0000574b 	.word	0x0000574b
    578c:	00005853 	.word	0x00005853
    5790:	0000574b 	.word	0x0000574b
    5794:	0000574b 	.word	0x0000574b
    5798:	0000574b 	.word	0x0000574b
    579c:	0000574b 	.word	0x0000574b
    57a0:	0000574b 	.word	0x0000574b
    57a4:	0000574b 	.word	0x0000574b
    57a8:	0000574b 	.word	0x0000574b
    57ac:	00005853 	.word	0x00005853
    57b0:	4650      	mov	r0, sl
    57b2:	f7ff fc07 	bl	4fc4 <isspace>
    57b6:	4601      	mov	r1, r0
    57b8:	b140      	cbz	r0, 57cc <__strtoul+0xe0>
    57ba:	2100      	movs	r1, #0
    57bc:	4630      	mov	r0, r6
    57be:	460a      	mov	r2, r1
    57c0:	47a8      	blx	r5
    57c2:	9b00      	ldr	r3, [sp, #0]
    57c4:	4682      	mov	sl, r0
    57c6:	1c58      	adds	r0, r3, #1
    57c8:	9000      	str	r0, [sp, #0]
    57ca:	e7be      	b.n	574a <__strtoul+0x5e>
    57cc:	f1ba 0f2b 	cmp.w	sl, #43	; 0x2b
    57d0:	d106      	bne.n	57e0 <__strtoul+0xf4>
    57d2:	4630      	mov	r0, r6
    57d4:	460a      	mov	r2, r1
    57d6:	47a8      	blx	r5
    57d8:	f10b 0b01 	add.w	fp, fp, #1
    57dc:	4682      	mov	sl, r0
    57de:	e00b      	b.n	57f8 <__strtoul+0x10c>
    57e0:	f1ba 0f2d 	cmp.w	sl, #45	; 0x2d
    57e4:	d108      	bne.n	57f8 <__strtoul+0x10c>
    57e6:	460a      	mov	r2, r1
    57e8:	4630      	mov	r0, r6
    57ea:	47a8      	blx	r5
    57ec:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    57ee:	2101      	movs	r1, #1
    57f0:	f10b 0b01 	add.w	fp, fp, #1
    57f4:	4682      	mov	sl, r0
    57f6:	6011      	str	r1, [r2, #0]
    57f8:	2402      	movs	r4, #2
    57fa:	e7a6      	b.n	574a <__strtoul+0x5e>
    57fc:	f1b9 0f00 	cmp.w	r9, #0
    5800:	d002      	beq.n	5808 <__strtoul+0x11c>
    5802:	f1b9 0f10 	cmp.w	r9, #16
    5806:	d163      	bne.n	58d0 <__strtoul+0x1e4>
    5808:	f1ba 0f30 	cmp.w	sl, #48	; 0x30
    580c:	d160      	bne.n	58d0 <__strtoul+0x1e4>
    580e:	2100      	movs	r1, #0
    5810:	4630      	mov	r0, r6
    5812:	460a      	mov	r2, r1
    5814:	47a8      	blx	r5
    5816:	f10b 0b01 	add.w	fp, fp, #1
    581a:	4682      	mov	sl, r0
    581c:	2404      	movs	r4, #4
    581e:	e794      	b.n	574a <__strtoul+0x5e>
    5820:	f1ba 0f58 	cmp.w	sl, #88	; 0x58
    5824:	d002      	beq.n	582c <__strtoul+0x140>
    5826:	f1ba 0f78 	cmp.w	sl, #120	; 0x78
    582a:	d10a      	bne.n	5842 <__strtoul+0x156>
    582c:	2100      	movs	r1, #0
    582e:	4630      	mov	r0, r6
    5830:	460a      	mov	r2, r1
    5832:	47a8      	blx	r5
    5834:	f10b 0b01 	add.w	fp, fp, #1
    5838:	4682      	mov	sl, r0
    583a:	2408      	movs	r4, #8
    583c:	f04f 0910 	mov.w	r9, #16
    5840:	e783      	b.n	574a <__strtoul+0x5e>
    5842:	2410      	movs	r4, #16
    5844:	f1b9 0f00 	cmp.w	r9, #0
    5848:	f47f af7f 	bne.w	574a <__strtoul+0x5e>
    584c:	f04f 0908 	mov.w	r9, #8
    5850:	e77b      	b.n	574a <__strtoul+0x5e>
    5852:	f1b9 0f00 	cmp.w	r9, #0
    5856:	bf08      	it	eq
    5858:	f04f 090a 	moveq.w	r9, #10
    585c:	f1b8 0f00 	cmp.w	r8, #0
    5860:	d103      	bne.n	586a <__strtoul+0x17e>
    5862:	f04f 3eff 	mov.w	lr, #4294967295
    5866:	fbbe f8f9 	udiv	r8, lr, r9
    586a:	f1aa 0230 	sub.w	r2, sl, #48	; 0x30
    586e:	2a09      	cmp	r2, #9
    5870:	d802      	bhi.n	5878 <__strtoul+0x18c>
    5872:	454a      	cmp	r2, r9
    5874:	db12      	blt.n	589c <__strtoul+0x1b0>
    5876:	e00a      	b.n	588e <__strtoul+0x1a2>
    5878:	4650      	mov	r0, sl
    587a:	f7ff fb95 	bl	4fa8 <isalpha>
    587e:	b130      	cbz	r0, 588e <__strtoul+0x1a2>
    5880:	4650      	mov	r0, sl
    5882:	f7ff fbc9 	bl	5018 <toupper>
    5886:	f1a0 0336 	sub.w	r3, r0, #54	; 0x36
    588a:	454b      	cmp	r3, r9
    588c:	dd04      	ble.n	5898 <__strtoul+0x1ac>
    588e:	2c10      	cmp	r4, #16
    5890:	bf14      	ite	ne
    5892:	2440      	movne	r4, #64	; 0x40
    5894:	2420      	moveq	r4, #32
    5896:	e758      	b.n	574a <__strtoul+0x5e>
    5898:	f1a0 0237 	sub.w	r2, r0, #55	; 0x37
    589c:	4547      	cmp	r7, r8
    589e:	bf98      	it	ls
    58a0:	9c0e      	ldrls	r4, [sp, #56]	; 0x38
    58a2:	fb07 f709 	mul.w	r7, r7, r9
    58a6:	bf98      	it	ls
    58a8:	6821      	ldrls	r1, [r4, #0]
    58aa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
    58ac:	bf88      	it	hi
    58ae:	2101      	movhi	r1, #1
    58b0:	b2d3      	uxtb	r3, r2
    58b2:	43f8      	mvns	r0, r7
    58b4:	4283      	cmp	r3, r0
    58b6:	bf88      	it	hi
    58b8:	2101      	movhi	r1, #1
    58ba:	6021      	str	r1, [r4, #0]
    58bc:	2100      	movs	r1, #0
    58be:	19d7      	adds	r7, r2, r7
    58c0:	4630      	mov	r0, r6
    58c2:	460a      	mov	r2, r1
    58c4:	47a8      	blx	r5
    58c6:	f10b 0b01 	add.w	fp, fp, #1
    58ca:	4682      	mov	sl, r0
    58cc:	2410      	movs	r4, #16
    58ce:	e73c      	b.n	574a <__strtoul+0x5e>
    58d0:	2408      	movs	r4, #8
    58d2:	e73a      	b.n	574a <__strtoul+0x5e>
    58d4:	f014 0434 	ands.w	r4, r4, #52	; 0x34
    58d8:	d103      	bne.n	58e2 <__strtoul+0x1f6>
    58da:	9f0c      	ldr	r7, [sp, #48]	; 0x30
    58dc:	603c      	str	r4, [r7, #0]
    58de:	4627      	mov	r7, r4
    58e0:	e006      	b.n	58f0 <__strtoul+0x204>
    58e2:	9900      	ldr	r1, [sp, #0]
    58e4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    58e6:	f10b 3cff 	add.w	ip, fp, #4294967295
    58ea:	eb0c 0001 	add.w	r0, ip, r1
    58ee:	6010      	str	r0, [r2, #0]
    58f0:	4630      	mov	r0, r6
    58f2:	4651      	mov	r1, sl
    58f4:	2201      	movs	r2, #1
    58f6:	47a8      	blx	r5
    58f8:	4638      	mov	r0, r7
    58fa:	e8bd 8ffe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    58fe:	bf00      	nop

00005900 <__fill_mem>:
    5900:	2a1f      	cmp	r2, #31
    5902:	b530      	push	{r4, r5, lr}
    5904:	b2c9      	uxtb	r1, r1
    5906:	d92f      	bls.n	5968 <__fill_mem+0x68>
    5908:	4244      	negs	r4, r0
    590a:	f014 0403 	ands.w	r4, r4, #3
    590e:	d006      	beq.n	591e <__fill_mem+0x1e>
    5910:	1b12      	subs	r2, r2, r4
    5912:	2300      	movs	r3, #0
    5914:	54c1      	strb	r1, [r0, r3]
    5916:	3301      	adds	r3, #1
    5918:	42a3      	cmp	r3, r4
    591a:	d1fb      	bne.n	5914 <__fill_mem+0x14>
    591c:	18c0      	adds	r0, r0, r3
    591e:	b129      	cbz	r1, 592c <__fill_mem+0x2c>
    5920:	040d      	lsls	r5, r1, #16
    5922:	ea45 6301 	orr.w	r3, r5, r1, lsl #24
    5926:	430b      	orrs	r3, r1
    5928:	ea43 2101 	orr.w	r1, r3, r1, lsl #8
    592c:	0955      	lsrs	r5, r2, #5
    592e:	d00e      	beq.n	594e <__fill_mem+0x4e>
    5930:	462c      	mov	r4, r5
    5932:	4603      	mov	r3, r0
    5934:	6019      	str	r1, [r3, #0]
    5936:	6059      	str	r1, [r3, #4]
    5938:	6099      	str	r1, [r3, #8]
    593a:	60d9      	str	r1, [r3, #12]
    593c:	6119      	str	r1, [r3, #16]
    593e:	6159      	str	r1, [r3, #20]
    5940:	6199      	str	r1, [r3, #24]
    5942:	61d9      	str	r1, [r3, #28]
    5944:	3320      	adds	r3, #32
    5946:	3c01      	subs	r4, #1
    5948:	d1f4      	bne.n	5934 <__fill_mem+0x34>
    594a:	eb00 1045 	add.w	r0, r0, r5, lsl #5
    594e:	f3c2 0382 	ubfx	r3, r2, #2, #3
    5952:	b13b      	cbz	r3, 5964 <__fill_mem+0x64>
    5954:	461c      	mov	r4, r3
    5956:	4605      	mov	r5, r0
    5958:	3c01      	subs	r4, #1
    595a:	f845 1b04 	str.w	r1, [r5], #4
    595e:	d1fb      	bne.n	5958 <__fill_mem+0x58>
    5960:	eb00 0083 	add.w	r0, r0, r3, lsl #2
    5964:	f002 0203 	and.w	r2, r2, #3
    5968:	b122      	cbz	r2, 5974 <__fill_mem+0x74>
    596a:	1882      	adds	r2, r0, r2
    596c:	f800 1b01 	strb.w	r1, [r0], #1
    5970:	4290      	cmp	r0, r2
    5972:	d1fb      	bne.n	596c <__fill_mem+0x6c>
    5974:	bd30      	pop	{r4, r5, pc}

00005976 <memchr>:
    5976:	b2c9      	uxtb	r1, r1
    5978:	1882      	adds	r2, r0, r2
    597a:	4290      	cmp	r0, r2
    597c:	d005      	beq.n	598a <memchr+0x14>
    597e:	f810 3b01 	ldrb.w	r3, [r0], #1
    5982:	428b      	cmp	r3, r1
    5984:	d1f9      	bne.n	597a <memchr+0x4>
    5986:	3801      	subs	r0, #1
    5988:	4770      	bx	lr
    598a:	2000      	movs	r0, #0
    598c:	4770      	bx	lr

0000598e <strchr>:
    598e:	b2c9      	uxtb	r1, r1
    5990:	4603      	mov	r3, r0
    5992:	f813 2b01 	ldrb.w	r2, [r3], #1
    5996:	b11a      	cbz	r2, 59a0 <strchr+0x12>
    5998:	428a      	cmp	r2, r1
    599a:	d004      	beq.n	59a6 <strchr+0x18>
    599c:	4618      	mov	r0, r3
    599e:	e7f7      	b.n	5990 <strchr+0x2>
    59a0:	2900      	cmp	r1, #0
    59a2:	bf18      	it	ne
    59a4:	2000      	movne	r0, #0
    59a6:	4770      	bx	lr

000059a8 <strcpy>:
    59a8:	2300      	movs	r3, #0
    59aa:	5cca      	ldrb	r2, [r1, r3]
    59ac:	54c2      	strb	r2, [r0, r3]
    59ae:	3301      	adds	r3, #1
    59b0:	2a00      	cmp	r2, #0
    59b2:	d1fa      	bne.n	59aa <strcpy+0x2>
    59b4:	4770      	bx	lr

000059b6 <strlen>:
    59b6:	4603      	mov	r3, r0
    59b8:	461a      	mov	r2, r3
    59ba:	3301      	adds	r3, #1
    59bc:	7811      	ldrb	r1, [r2, #0]
    59be:	2900      	cmp	r1, #0
    59c0:	d1fa      	bne.n	59b8 <strlen+0x2>
    59c2:	1a10      	subs	r0, r2, r0
    59c4:	4770      	bx	lr
	...

000059c8 <__num2dec>:
    59c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    59cc:	b085      	sub	sp, #20
    59ce:	4619      	mov	r1, r3
    59d0:	f8b0 9002 	ldrh.w	r9, [r0, #2]
    59d4:	9e0e      	ldr	r6, [sp, #56]	; 0x38
    59d6:	4683      	mov	fp, r0
    59d8:	4610      	mov	r0, r2
    59da:	4615      	mov	r5, r2
    59dc:	461c      	mov	r4, r3
    59de:	f000 fa07 	bl	5df0 <__signbitd>
    59e2:	2701      	movs	r7, #1
    59e4:	2300      	movs	r3, #0
    59e6:	4682      	mov	sl, r0
    59e8:	7033      	strb	r3, [r6, #0]
    59ea:	4698      	mov	r8, r3
    59ec:	8073      	strh	r3, [r6, #2]
    59ee:	7137      	strb	r7, [r6, #4]
    59f0:	4628      	mov	r0, r5
    59f2:	4621      	mov	r1, r4
    59f4:	2200      	movs	r2, #0
    59f6:	2300      	movs	r3, #0
    59f8:	f7fb fb22 	bl	1040 <__aeabi_dcmpeq>
    59fc:	b110      	cbz	r0, 5a04 <__num2dec+0x3c>
    59fe:	2230      	movs	r2, #48	; 0x30
    5a00:	7172      	strb	r2, [r6, #5]
    5a02:	e0e6      	b.n	5bd2 <__num2dec+0x20a>
    5a04:	4628      	mov	r0, r5
    5a06:	4621      	mov	r1, r4
    5a08:	f000 f9f4 	bl	5df4 <__fpclassifyd>
    5a0c:	2802      	cmp	r0, #2
    5a0e:	dc10      	bgt.n	5a32 <__num2dec+0x6a>
    5a10:	f11a 0a00 	adds.w	sl, sl, #0
    5a14:	bf18      	it	ne
    5a16:	f04f 0a01 	movne.w	sl, #1
    5a1a:	f886 a000 	strb.w	sl, [r6]
    5a1e:	4628      	mov	r0, r5
    5a20:	4621      	mov	r1, r4
    5a22:	f000 f9e7 	bl	5df4 <__fpclassifyd>
    5a26:	2801      	cmp	r0, #1
    5a28:	bf14      	ite	ne
    5a2a:	2349      	movne	r3, #73	; 0x49
    5a2c:	234e      	moveq	r3, #78	; 0x4e
    5a2e:	7173      	strb	r3, [r6, #5]
    5a30:	e0cf      	b.n	5bd2 <__num2dec+0x20a>
    5a32:	f886 8004 	strb.w	r8, [r6, #4]
    5a36:	4628      	mov	r0, r5
    5a38:	4621      	mov	r1, r4
    5a3a:	2200      	movs	r2, #0
    5a3c:	2300      	movs	r3, #0
    5a3e:	f7fb fb09 	bl	1054 <__aeabi_dcmplt>
    5a42:	b110      	cbz	r0, 5a4a <__num2dec+0x82>
    5a44:	7037      	strb	r7, [r6, #0]
    5a46:	f104 4400 	add.w	r4, r4, #2147483648	; 0x80000000
    5a4a:	aa03      	add	r2, sp, #12
    5a4c:	4628      	mov	r0, r5
    5a4e:	4621      	mov	r1, r4
    5a50:	f000 fa36 	bl	5ec0 <frexp>
    5a54:	4f62      	ldr	r7, [pc, #392]	; (5be0 <__num2dec+0x218>)
    5a56:	9803      	ldr	r0, [sp, #12]
    5a58:	4a62      	ldr	r2, [pc, #392]	; (5be4 <__num2dec+0x21c>)
    5a5a:	4347      	muls	r7, r0
    5a5c:	fb97 f7f2 	sdiv	r7, r7, r2
    5a60:	2f00      	cmp	r7, #0
    5a62:	da14      	bge.n	5a8e <__num2dec+0xc6>
    5a64:	f8df a18c 	ldr.w	sl, [pc, #396]	; 5bf4 <__num2dec+0x22c>
    5a68:	f1c7 0800 	rsb	r8, r7, #0
    5a6c:	f018 0f01 	tst.w	r8, #1
    5a70:	d007      	beq.n	5a82 <__num2dec+0xba>
    5a72:	4628      	mov	r0, r5
    5a74:	4621      	mov	r1, r4
    5a76:	e95a 2302 	ldrd	r2, r3, [sl, #-8]
    5a7a:	f7fb f879 	bl	b70 <__aeabi_dmul>
    5a7e:	4605      	mov	r5, r0
    5a80:	460c      	mov	r4, r1
    5a82:	ea5f 0868 	movs.w	r8, r8, asr #1
    5a86:	f10a 0a08 	add.w	sl, sl, #8
    5a8a:	d1ef      	bne.n	5a6c <__num2dec+0xa4>
    5a8c:	e01b      	b.n	5ac6 <__num2dec+0xfe>
    5a8e:	d01a      	beq.n	5ac6 <__num2dec+0xfe>
    5a90:	f8df a160 	ldr.w	sl, [pc, #352]	; 5bf4 <__num2dec+0x22c>
    5a94:	4b54      	ldr	r3, [pc, #336]	; (5be8 <__num2dec+0x220>)
    5a96:	46b8      	mov	r8, r7
    5a98:	2200      	movs	r2, #0
    5a9a:	f018 0f01 	tst.w	r8, #1
    5a9e:	d007      	beq.n	5ab0 <__num2dec+0xe8>
    5aa0:	4610      	mov	r0, r2
    5aa2:	4619      	mov	r1, r3
    5aa4:	e95a 2302 	ldrd	r2, r3, [sl, #-8]
    5aa8:	f7fb f862 	bl	b70 <__aeabi_dmul>
    5aac:	4602      	mov	r2, r0
    5aae:	460b      	mov	r3, r1
    5ab0:	ea5f 0868 	movs.w	r8, r8, asr #1
    5ab4:	f10a 0a08 	add.w	sl, sl, #8
    5ab8:	d1ef      	bne.n	5a9a <__num2dec+0xd2>
    5aba:	4628      	mov	r0, r5
    5abc:	4621      	mov	r1, r4
    5abe:	f7fb f981 	bl	dc4 <__aeabi_ddiv>
    5ac2:	4605      	mov	r5, r0
    5ac4:	460c      	mov	r4, r1
    5ac6:	4628      	mov	r0, r5
    5ac8:	4621      	mov	r1, r4
    5aca:	2200      	movs	r2, #0
    5acc:	4b46      	ldr	r3, [pc, #280]	; (5be8 <__num2dec+0x220>)
    5ace:	f7fb fad5 	bl	107c <__aeabi_dcmpge>
    5ad2:	b150      	cbz	r0, 5aea <__num2dec+0x122>
    5ad4:	4628      	mov	r0, r5
    5ad6:	4621      	mov	r1, r4
    5ad8:	a33f      	add	r3, pc, #252	; (adr r3, 5bd8 <__num2dec+0x210>)
    5ada:	e9d3 2300 	ldrd	r2, r3, [r3]
    5ade:	f7fb f847 	bl	b70 <__aeabi_dmul>
    5ae2:	3701      	adds	r7, #1
    5ae4:	4605      	mov	r5, r0
    5ae6:	460c      	mov	r4, r1
    5ae8:	e7ed      	b.n	5ac6 <__num2dec+0xfe>
    5aea:	4628      	mov	r0, r5
    5aec:	4621      	mov	r1, r4
    5aee:	a33a      	add	r3, pc, #232	; (adr r3, 5bd8 <__num2dec+0x210>)
    5af0:	e9d3 2300 	ldrd	r2, r3, [r3]
    5af4:	f7fb faae 	bl	1054 <__aeabi_dcmplt>
    5af8:	b148      	cbz	r0, 5b0e <__num2dec+0x146>
    5afa:	4628      	mov	r0, r5
    5afc:	4621      	mov	r1, r4
    5afe:	2200      	movs	r2, #0
    5b00:	4b3a      	ldr	r3, [pc, #232]	; (5bec <__num2dec+0x224>)
    5b02:	f7fb f835 	bl	b70 <__aeabi_dmul>
    5b06:	3f01      	subs	r7, #1
    5b08:	4605      	mov	r5, r0
    5b0a:	460c      	mov	r4, r1
    5b0c:	e7ed      	b.n	5aea <__num2dec+0x122>
    5b0e:	fa0f f989 	sxth.w	r9, r9
    5b12:	f1b9 0f10 	cmp.w	r9, #16
    5b16:	bfa8      	it	ge
    5b18:	f04f 0910 	movge.w	r9, #16
    5b1c:	f106 0e05 	add.w	lr, r6, #5
    5b20:	7931      	ldrb	r1, [r6, #4]
    5b22:	f1b9 0f00 	cmp.w	r9, #0
    5b26:	d03c      	beq.n	5ba2 <__num2dec+0x1da>
    5b28:	4831      	ldr	r0, [pc, #196]	; (5bf0 <__num2dec+0x228>)
    5b2a:	f1b9 0f08 	cmp.w	r9, #8
    5b2e:	bfb4      	ite	lt
    5b30:	46c8      	movlt	r8, r9
    5b32:	f04f 0808 	movge.w	r8, #8
    5b36:	eb08 0301 	add.w	r3, r8, r1
    5b3a:	eb00 02c8 	add.w	r2, r0, r8, lsl #3
    5b3e:	eb0e 0c08 	add.w	ip, lr, r8
    5b42:	7133      	strb	r3, [r6, #4]
    5b44:	4628      	mov	r0, r5
    5b46:	e952 2302 	ldrd	r2, r3, [r2, #-8]
    5b4a:	4621      	mov	r1, r4
    5b4c:	f8cd c004 	str.w	ip, [sp, #4]
    5b50:	f7fb f80e 	bl	b70 <__aeabi_dmul>
    5b54:	460d      	mov	r5, r1
    5b56:	4604      	mov	r4, r0
    5b58:	f7fb faa4 	bl	10a4 <__aeabi_d2iz>
    5b5c:	4682      	mov	sl, r0
    5b5e:	f7fa ffa1 	bl	aa4 <__aeabi_i2d>
    5b62:	460b      	mov	r3, r1
    5b64:	4602      	mov	r2, r0
    5b66:	4629      	mov	r1, r5
    5b68:	4620      	mov	r0, r4
    5b6a:	f7fa fe4d 	bl	808 <__aeabi_dsub>
    5b6e:	f8dd c004 	ldr.w	ip, [sp, #4]
    5b72:	ebc8 0909 	rsb	r9, r8, r9
    5b76:	ebc8 0707 	rsb	r7, r8, r7
    5b7a:	4605      	mov	r5, r0
    5b7c:	460c      	mov	r4, r1
    5b7e:	4643      	mov	r3, r8
    5b80:	3b01      	subs	r3, #1
    5b82:	1c5a      	adds	r2, r3, #1
    5b84:	ebc8 020c 	rsb	r2, r8, ip
    5b88:	d008      	beq.n	5b9c <__num2dec+0x1d4>
    5b8a:	200a      	movs	r0, #10
    5b8c:	fb9a f1f0 	sdiv	r1, sl, r0
    5b90:	fb00 a011 	mls	r0, r0, r1, sl
    5b94:	3030      	adds	r0, #48	; 0x30
    5b96:	54d0      	strb	r0, [r2, r3]
    5b98:	468a      	mov	sl, r1
    5b9a:	e7f1      	b.n	5b80 <__num2dec+0x1b8>
    5b9c:	eb02 0e08 	add.w	lr, r2, r8
    5ba0:	e7be      	b.n	5b20 <__num2dec+0x158>
    5ba2:	f9bb 3002 	ldrsh.w	r3, [fp, #2]
    5ba6:	2b20      	cmp	r3, #32
    5ba8:	bfd4      	ite	le
    5baa:	ebc1 0103 	rsble	r1, r1, r3
    5bae:	f1c1 0120 	rsbgt	r1, r1, #32
    5bb2:	2900      	cmp	r1, #0
    5bb4:	dd0c      	ble.n	5bd0 <__num2dec+0x208>
    5bb6:	2030      	movs	r0, #48	; 0x30
    5bb8:	f80e 0009 	strb.w	r0, [lr, r9]
    5bbc:	f109 0901 	add.w	r9, r9, #1
    5bc0:	4589      	cmp	r9, r1
    5bc2:	d1f8      	bne.n	5bb6 <__num2dec+0x1ee>
    5bc4:	7932      	ldrb	r2, [r6, #4]
    5bc6:	eb09 0102 	add.w	r1, r9, r2
    5bca:	7131      	strb	r1, [r6, #4]
    5bcc:	ebc9 0707 	rsb	r7, r9, r7
    5bd0:	8077      	strh	r7, [r6, #2]
    5bd2:	b005      	add	sp, #20
    5bd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5bd8:	9999999a 	.word	0x9999999a
    5bdc:	3fb99999 	.word	0x3fb99999
    5be0:	000497e5 	.word	0x000497e5
    5be4:	000f4240 	.word	0x000f4240
    5be8:	3ff00000 	.word	0x3ff00000
    5bec:	40240000 	.word	0x40240000
    5bf0:	0000c3c8 	.word	0x0000c3c8
    5bf4:	0000c410 	.word	0x0000c410

00005bf8 <__dec2num>:
    5bf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5bfc:	7907      	ldrb	r7, [r0, #4]
    5bfe:	f890 8000 	ldrb.w	r8, [r0]
    5c02:	8842      	ldrh	r2, [r0, #2]
    5c04:	7943      	ldrb	r3, [r0, #5]
    5c06:	b085      	sub	sp, #20
    5c08:	b917      	cbnz	r7, 5c10 <__dec2num+0x18>
    5c0a:	2200      	movs	r2, #0
    5c0c:	4613      	mov	r3, r2
    5c0e:	e08b      	b.n	5d28 <__dec2num+0x130>
    5c10:	b259      	sxtb	r1, r3
    5c12:	2930      	cmp	r1, #48	; 0x30
    5c14:	d0f9      	beq.n	5c0a <__dec2num+0x12>
    5c16:	2949      	cmp	r1, #73	; 0x49
    5c18:	fa4f f888 	sxtb.w	r8, r8
    5c1c:	d057      	beq.n	5cce <__dec2num+0xd6>
    5c1e:	294e      	cmp	r1, #78	; 0x4e
    5c20:	d102      	bne.n	5c28 <__dec2num+0x30>
    5c22:	4b47      	ldr	r3, [pc, #284]	; (5d40 <__dec2num+0x148>)
    5c24:	cb0c      	ldmia	r3, {r2, r3}
    5c26:	e07f      	b.n	5d28 <__dec2num+0x130>
    5c28:	f017 0c07 	ands.w	ip, r7, #7
    5c2c:	bf08      	it	eq
    5c2e:	f04f 0c08 	moveq.w	ip, #8
    5c32:	f100 0b05 	add.w	fp, r0, #5
    5c36:	f107 39ff 	add.w	r9, r7, #4294967295
    5c3a:	4638      	mov	r0, r7
    5c3c:	f8cd c004 	str.w	ip, [sp, #4]
    5c40:	fa09 f982 	sxtah	r9, r9, r2
    5c44:	f7fa ff2e 	bl	aa4 <__aeabi_i2d>
    5c48:	2200      	movs	r2, #0
    5c4a:	4b3e      	ldr	r3, [pc, #248]	; (5d44 <__dec2num+0x14c>)
    5c4c:	f7fa fddc 	bl	808 <__aeabi_dsub>
    5c50:	4602      	mov	r2, r0
    5c52:	460b      	mov	r3, r1
    5c54:	2000      	movs	r0, #0
    5c56:	493c      	ldr	r1, [pc, #240]	; (5d48 <__dec2num+0x150>)
    5c58:	f000 f9b0 	bl	5fbc <pow>
    5c5c:	e9cd 0102 	strd	r0, r1, [sp, #8]
    5c60:	f8dd c004 	ldr.w	ip, [sp, #4]
    5c64:	2400      	movs	r4, #0
    5c66:	2500      	movs	r5, #0
    5c68:	2600      	movs	r6, #0
    5c6a:	46b2      	mov	sl, r6
    5c6c:	f81b 0006 	ldrb.w	r0, [fp, r6]
    5c70:	3601      	adds	r6, #1
    5c72:	3830      	subs	r0, #48	; 0x30
    5c74:	220a      	movs	r2, #10
    5c76:	4566      	cmp	r6, ip
    5c78:	fb02 0a0a 	mla	sl, r2, sl, r0
    5c7c:	d1f6      	bne.n	5c6c <__dec2num+0x74>
    5c7e:	a32e      	add	r3, pc, #184	; (adr r3, 5d38 <__dec2num+0x140>)
    5c80:	e9d3 2300 	ldrd	r2, r3, [r3]
    5c84:	4620      	mov	r0, r4
    5c86:	4629      	mov	r1, r5
    5c88:	f7fa ff72 	bl	b70 <__aeabi_dmul>
    5c8c:	4604      	mov	r4, r0
    5c8e:	4650      	mov	r0, sl
    5c90:	460d      	mov	r5, r1
    5c92:	f7fa ff07 	bl	aa4 <__aeabi_i2d>
    5c96:	4602      	mov	r2, r0
    5c98:	460b      	mov	r3, r1
    5c9a:	4620      	mov	r0, r4
    5c9c:	4629      	mov	r1, r5
    5c9e:	f7fa fdb5 	bl	80c <__adddf3>
    5ca2:	1bbf      	subs	r7, r7, r6
    5ca4:	44b3      	add	fp, r6
    5ca6:	4604      	mov	r4, r0
    5ca8:	460d      	mov	r5, r1
    5caa:	f04f 0c08 	mov.w	ip, #8
    5cae:	d1db      	bne.n	5c68 <__dec2num+0x70>
    5cb0:	ea89 7ae9 	eor.w	sl, r9, r9, asr #31
    5cb4:	ebaa 7ae9 	sub.w	sl, sl, r9, asr #31
    5cb8:	f5ba 7f00 	cmp.w	sl, #512	; 0x200
    5cbc:	da04      	bge.n	5cc8 <__dec2num+0xd0>
    5cbe:	f8df b090 	ldr.w	fp, [pc, #144]	; 5d50 <__dec2num+0x158>
    5cc2:	4f20      	ldr	r7, [pc, #128]	; (5d44 <__dec2num+0x14c>)
    5cc4:	2600      	movs	r6, #0
    5cc6:	e015      	b.n	5cf4 <__dec2num+0xfc>
    5cc8:	f1b9 0f00 	cmp.w	r9, #0
    5ccc:	db9d      	blt.n	5c0a <__dec2num+0x12>
    5cce:	491f      	ldr	r1, [pc, #124]	; (5d4c <__dec2num+0x154>)
    5cd0:	e891 000c 	ldmia.w	r1, {r2, r3}
    5cd4:	e023      	b.n	5d1e <__dec2num+0x126>
    5cd6:	f01a 0f01 	tst.w	sl, #1
    5cda:	d007      	beq.n	5cec <__dec2num+0xf4>
    5cdc:	4630      	mov	r0, r6
    5cde:	4639      	mov	r1, r7
    5ce0:	e95b 2302 	ldrd	r2, r3, [fp, #-8]
    5ce4:	f7fa ff44 	bl	b70 <__aeabi_dmul>
    5ce8:	4606      	mov	r6, r0
    5cea:	460f      	mov	r7, r1
    5cec:	ea4f 0a6a 	mov.w	sl, sl, asr #1
    5cf0:	f10b 0b08 	add.w	fp, fp, #8
    5cf4:	f1ba 0f00 	cmp.w	sl, #0
    5cf8:	d1ed      	bne.n	5cd6 <__dec2num+0xde>
    5cfa:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    5cfe:	4620      	mov	r0, r4
    5d00:	4629      	mov	r1, r5
    5d02:	f7fb f85f 	bl	dc4 <__aeabi_ddiv>
    5d06:	f1b9 0f00 	cmp.w	r9, #0
    5d0a:	4632      	mov	r2, r6
    5d0c:	463b      	mov	r3, r7
    5d0e:	da02      	bge.n	5d16 <__dec2num+0x11e>
    5d10:	f7fb f858 	bl	dc4 <__aeabi_ddiv>
    5d14:	e001      	b.n	5d1a <__dec2num+0x122>
    5d16:	f7fa ff2b 	bl	b70 <__aeabi_dmul>
    5d1a:	4602      	mov	r2, r0
    5d1c:	460b      	mov	r3, r1
    5d1e:	f1b8 0f00 	cmp.w	r8, #0
    5d22:	d001      	beq.n	5d28 <__dec2num+0x130>
    5d24:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
    5d28:	4610      	mov	r0, r2
    5d2a:	4619      	mov	r1, r3
    5d2c:	b005      	add	sp, #20
    5d2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5d32:	bf00      	nop
    5d34:	f3af 8000 	nop.w
    5d38:	00000000 	.word	0x00000000
    5d3c:	4197d784 	.word	0x4197d784
    5d40:	1fffe010 	.word	0x1fffe010
    5d44:	3ff00000 	.word	0x3ff00000
    5d48:	40240000 	.word	0x40240000
    5d4c:	1fffe018 	.word	0x1fffe018
    5d50:	0000c410 	.word	0x0000c410
    5d54:	f3af 8000 	nop.w

00005d58 <__round_decimal>:
    5d58:	2900      	cmp	r1, #0
    5d5a:	b570      	push	{r4, r5, r6, lr}
    5d5c:	da04      	bge.n	5d68 <__round_decimal+0x10>
    5d5e:	2100      	movs	r1, #0
    5d60:	2301      	movs	r3, #1
    5d62:	8041      	strh	r1, [r0, #2]
    5d64:	7103      	strb	r3, [r0, #4]
    5d66:	e036      	b.n	5dd6 <__round_decimal+0x7e>
    5d68:	7903      	ldrb	r3, [r0, #4]
    5d6a:	4299      	cmp	r1, r3
    5d6c:	da3f      	bge.n	5dee <__round_decimal+0x96>
    5d6e:	1c4a      	adds	r2, r1, #1
    5d70:	1885      	adds	r5, r0, r2
    5d72:	1d6c      	adds	r4, r5, #5
    5d74:	1d2a      	adds	r2, r5, #4
    5d76:	f814 5c01 	ldrb.w	r5, [r4, #-1]
    5d7a:	3d30      	subs	r5, #48	; 0x30
    5d7c:	2d05      	cmp	r5, #5
    5d7e:	d112      	bne.n	5da6 <__round_decimal+0x4e>
    5d80:	18c3      	adds	r3, r0, r3
    5d82:	3304      	adds	r3, #4
    5d84:	4293      	cmp	r3, r2
    5d86:	461d      	mov	r5, r3
    5d88:	d803      	bhi.n	5d92 <__round_decimal+0x3a>
    5d8a:	4295      	cmp	r5, r2
    5d8c:	d006      	beq.n	5d9c <__round_decimal+0x44>
    5d8e:	2301      	movs	r3, #1
    5d90:	e00c      	b.n	5dac <__round_decimal+0x54>
    5d92:	782e      	ldrb	r6, [r5, #0]
    5d94:	3b01      	subs	r3, #1
    5d96:	2e30      	cmp	r6, #48	; 0x30
    5d98:	d0f4      	beq.n	5d84 <__round_decimal+0x2c>
    5d9a:	e7f6      	b.n	5d8a <__round_decimal+0x32>
    5d9c:	f814 3c02 	ldrb.w	r3, [r4, #-2]
    5da0:	f003 0301 	and.w	r3, r3, #1
    5da4:	e002      	b.n	5dac <__round_decimal+0x54>
    5da6:	bfd4      	ite	le
    5da8:	2300      	movle	r3, #0
    5daa:	2301      	movgt	r3, #1
    5dac:	3a01      	subs	r2, #1
    5dae:	b1a9      	cbz	r1, 5ddc <__round_decimal+0x84>
    5db0:	4615      	mov	r5, r2
    5db2:	3a01      	subs	r2, #1
    5db4:	782c      	ldrb	r4, [r5, #0]
    5db6:	3c30      	subs	r4, #48	; 0x30
    5db8:	18e4      	adds	r4, r4, r3
    5dba:	2c09      	cmp	r4, #9
    5dbc:	bfd4      	ite	le
    5dbe:	2300      	movle	r3, #0
    5dc0:	2301      	movgt	r3, #1
    5dc2:	b903      	cbnz	r3, 5dc6 <__round_decimal+0x6e>
    5dc4:	b90c      	cbnz	r4, 5dca <__round_decimal+0x72>
    5dc6:	3901      	subs	r1, #1
    5dc8:	e7f1      	b.n	5dae <__round_decimal+0x56>
    5dca:	3430      	adds	r4, #48	; 0x30
    5dcc:	702c      	strb	r4, [r5, #0]
    5dce:	7101      	strb	r1, [r0, #4]
    5dd0:	bd70      	pop	{r4, r5, r6, pc}
    5dd2:	8043      	strh	r3, [r0, #2]
    5dd4:	7101      	strb	r1, [r0, #4]
    5dd6:	2230      	movs	r2, #48	; 0x30
    5dd8:	7142      	strb	r2, [r0, #5]
    5dda:	bd70      	pop	{r4, r5, r6, pc}
    5ddc:	2101      	movs	r1, #1
    5dde:	2b00      	cmp	r3, #0
    5de0:	d0f7      	beq.n	5dd2 <__round_decimal+0x7a>
    5de2:	8842      	ldrh	r2, [r0, #2]
    5de4:	7101      	strb	r1, [r0, #4]
    5de6:	1c53      	adds	r3, r2, #1
    5de8:	8043      	strh	r3, [r0, #2]
    5dea:	2231      	movs	r2, #49	; 0x31
    5dec:	e7f4      	b.n	5dd8 <__round_decimal+0x80>
    5dee:	bd70      	pop	{r4, r5, r6, pc}

00005df0 <__signbitd>:
    5df0:	0fc8      	lsrs	r0, r1, #31
    5df2:	4770      	bx	lr

00005df4 <__fpclassifyd>:
    5df4:	4b0c      	ldr	r3, [pc, #48]	; (5e28 <__fpclassifyd+0x34>)
    5df6:	400b      	ands	r3, r1
    5df8:	b15b      	cbz	r3, 5e12 <__fpclassifyd+0x1e>
    5dfa:	4a0b      	ldr	r2, [pc, #44]	; (5e28 <__fpclassifyd+0x34>)
    5dfc:	4293      	cmp	r3, r2
    5dfe:	d111      	bne.n	5e24 <__fpclassifyd+0x30>
    5e00:	f3c1 0113 	ubfx	r1, r1, #0, #20
    5e04:	b109      	cbz	r1, 5e0a <__fpclassifyd+0x16>
    5e06:	2001      	movs	r0, #1
    5e08:	4770      	bx	lr
    5e0a:	2800      	cmp	r0, #0
    5e0c:	d1fb      	bne.n	5e06 <__fpclassifyd+0x12>
    5e0e:	2002      	movs	r0, #2
    5e10:	4770      	bx	lr
    5e12:	f3c1 0313 	ubfx	r3, r1, #0, #20
    5e16:	b10b      	cbz	r3, 5e1c <__fpclassifyd+0x28>
    5e18:	2005      	movs	r0, #5
    5e1a:	4770      	bx	lr
    5e1c:	2800      	cmp	r0, #0
    5e1e:	d1fb      	bne.n	5e18 <__fpclassifyd+0x24>
    5e20:	2003      	movs	r0, #3
    5e22:	4770      	bx	lr
    5e24:	2004      	movs	r0, #4
    5e26:	4770      	bx	lr
    5e28:	7ff00000 	.word	0x7ff00000

00005e2c <cos>:
    5e2c:	b570      	push	{r4, r5, r6, lr}
    5e2e:	4a21      	ldr	r2, [pc, #132]	; (5eb4 <cos+0x88>)
    5e30:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
    5e34:	4293      	cmp	r3, r2
    5e36:	b086      	sub	sp, #24
    5e38:	d804      	bhi.n	5e44 <cos+0x18>
    5e3a:	2200      	movs	r2, #0
    5e3c:	2300      	movs	r3, #0
    5e3e:	f001 f93b 	bl	70b8 <__kernel_cos>
    5e42:	e006      	b.n	5e52 <cos+0x26>
    5e44:	4a1c      	ldr	r2, [pc, #112]	; (5eb8 <cos+0x8c>)
    5e46:	4293      	cmp	r3, r2
    5e48:	d906      	bls.n	5e58 <cos+0x2c>
    5e4a:	4602      	mov	r2, r0
    5e4c:	460b      	mov	r3, r1
    5e4e:	f7fa fcdb 	bl	808 <__aeabi_dsub>
    5e52:	4605      	mov	r5, r0
    5e54:	460c      	mov	r4, r1
    5e56:	e028      	b.n	5eaa <cos+0x7e>
    5e58:	aa02      	add	r2, sp, #8
    5e5a:	f000 fe61 	bl	6b20 <__ieee754_rem_pio2>
    5e5e:	f010 0f01 	tst.w	r0, #1
    5e62:	4606      	mov	r6, r0
    5e64:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    5e68:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    5e6c:	d008      	beq.n	5e80 <cos+0x54>
    5e6e:	2501      	movs	r5, #1
    5e70:	9500      	str	r5, [sp, #0]
    5e72:	f001 fd65 	bl	7940 <__kernel_sin>
    5e76:	07b2      	lsls	r2, r6, #30
    5e78:	4605      	mov	r5, r0
    5e7a:	460c      	mov	r4, r1
    5e7c:	d409      	bmi.n	5e92 <cos+0x66>
    5e7e:	e005      	b.n	5e8c <cos+0x60>
    5e80:	f001 f91a 	bl	70b8 <__kernel_cos>
    5e84:	07b3      	lsls	r3, r6, #30
    5e86:	4605      	mov	r5, r0
    5e88:	460c      	mov	r4, r1
    5e8a:	d502      	bpl.n	5e92 <cos+0x66>
    5e8c:	f104 4000 	add.w	r0, r4, #2147483648	; 0x80000000
    5e90:	4604      	mov	r4, r0
    5e92:	4b0a      	ldr	r3, [pc, #40]	; (5ebc <cos+0x90>)
    5e94:	f024 4200 	bic.w	r2, r4, #2147483648	; 0x80000000
    5e98:	429a      	cmp	r2, r3
    5e9a:	d806      	bhi.n	5eaa <cos+0x7e>
    5e9c:	4628      	mov	r0, r5
    5e9e:	4621      	mov	r1, r4
    5ea0:	f7fb f900 	bl	10a4 <__aeabi_d2iz>
    5ea4:	b908      	cbnz	r0, 5eaa <cos+0x7e>
    5ea6:	2500      	movs	r5, #0
    5ea8:	462c      	mov	r4, r5
    5eaa:	4628      	mov	r0, r5
    5eac:	4621      	mov	r1, r4
    5eae:	b006      	add	sp, #24
    5eb0:	bd70      	pop	{r4, r5, r6, pc}
    5eb2:	bf00      	nop
    5eb4:	3fe921fb 	.word	0x3fe921fb
    5eb8:	7fefffff 	.word	0x7fefffff
    5ebc:	3e6fffff 	.word	0x3e6fffff

00005ec0 <frexp>:
    5ec0:	b537      	push	{r0, r1, r2, r4, r5, lr}
    5ec2:	4614      	mov	r4, r2
    5ec4:	e9cd 0100 	strd	r0, r1, [sp]
    5ec8:	2500      	movs	r5, #0
    5eca:	9a01      	ldr	r2, [sp, #4]
    5ecc:	6025      	str	r5, [r4, #0]
    5ece:	4d15      	ldr	r5, [pc, #84]	; (5f24 <frexp+0x64>)
    5ed0:	f022 4300 	bic.w	r3, r2, #2147483648	; 0x80000000
    5ed4:	42ab      	cmp	r3, r5
    5ed6:	d820      	bhi.n	5f1a <frexp+0x5a>
    5ed8:	9d00      	ldr	r5, [sp, #0]
    5eda:	431d      	orrs	r5, r3
    5edc:	d01d      	beq.n	5f1a <frexp+0x5a>
    5ede:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
    5ee2:	d20b      	bcs.n	5efc <frexp+0x3c>
    5ee4:	2200      	movs	r2, #0
    5ee6:	4b10      	ldr	r3, [pc, #64]	; (5f28 <frexp+0x68>)
    5ee8:	f7fa fe42 	bl	b70 <__aeabi_dmul>
    5eec:	e9cd 0100 	strd	r0, r1, [sp]
    5ef0:	9a01      	ldr	r2, [sp, #4]
    5ef2:	f06f 0135 	mvn.w	r1, #53	; 0x35
    5ef6:	f022 4300 	bic.w	r3, r2, #2147483648	; 0x80000000
    5efa:	6021      	str	r1, [r4, #0]
    5efc:	6821      	ldr	r1, [r4, #0]
    5efe:	0d18      	lsrs	r0, r3, #20
    5f00:	f2a0 33fe 	subw	r3, r0, #1022	; 0x3fe
    5f04:	f022 42ff 	bic.w	r2, r2, #2139095040	; 0x7f800000
    5f08:	18c8      	adds	r0, r1, r3
    5f0a:	f422 03e0 	bic.w	r3, r2, #7340032	; 0x700000
    5f0e:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
    5f12:	6020      	str	r0, [r4, #0]
    5f14:	f441 1000 	orr.w	r0, r1, #2097152	; 0x200000
    5f18:	9001      	str	r0, [sp, #4]
    5f1a:	e9dd 0100 	ldrd	r0, r1, [sp]
    5f1e:	b003      	add	sp, #12
    5f20:	bd30      	pop	{r4, r5, pc}
    5f22:	bf00      	nop
    5f24:	7fefffff 	.word	0x7fefffff
    5f28:	43500000 	.word	0x43500000

00005f2c <sin>:
    5f2c:	b570      	push	{r4, r5, r6, lr}
    5f2e:	4a20      	ldr	r2, [pc, #128]	; (5fb0 <sin+0x84>)
    5f30:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
    5f34:	4293      	cmp	r3, r2
    5f36:	b086      	sub	sp, #24
    5f38:	d806      	bhi.n	5f48 <sin+0x1c>
    5f3a:	2400      	movs	r4, #0
    5f3c:	9400      	str	r4, [sp, #0]
    5f3e:	2200      	movs	r2, #0
    5f40:	2300      	movs	r3, #0
    5f42:	f001 fcfd 	bl	7940 <__kernel_sin>
    5f46:	e006      	b.n	5f56 <sin+0x2a>
    5f48:	4a1a      	ldr	r2, [pc, #104]	; (5fb4 <sin+0x88>)
    5f4a:	4293      	cmp	r3, r2
    5f4c:	d906      	bls.n	5f5c <sin+0x30>
    5f4e:	4602      	mov	r2, r0
    5f50:	460b      	mov	r3, r1
    5f52:	f7fa fc59 	bl	808 <__aeabi_dsub>
    5f56:	4605      	mov	r5, r0
    5f58:	460c      	mov	r4, r1
    5f5a:	e025      	b.n	5fa8 <sin+0x7c>
    5f5c:	aa02      	add	r2, sp, #8
    5f5e:	f000 fddf 	bl	6b20 <__ieee754_rem_pio2>
    5f62:	f010 0f01 	tst.w	r0, #1
    5f66:	4606      	mov	r6, r0
    5f68:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    5f6c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    5f70:	d002      	beq.n	5f78 <sin+0x4c>
    5f72:	f001 f8a1 	bl	70b8 <__kernel_cos>
    5f76:	e003      	b.n	5f80 <sin+0x54>
    5f78:	2501      	movs	r5, #1
    5f7a:	9500      	str	r5, [sp, #0]
    5f7c:	f001 fce0 	bl	7940 <__kernel_sin>
    5f80:	07b3      	lsls	r3, r6, #30
    5f82:	4605      	mov	r5, r0
    5f84:	460c      	mov	r4, r1
    5f86:	d503      	bpl.n	5f90 <sin+0x64>
    5f88:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
    5f8c:	4605      	mov	r5, r0
    5f8e:	460c      	mov	r4, r1
    5f90:	4809      	ldr	r0, [pc, #36]	; (5fb8 <sin+0x8c>)
    5f92:	f024 4200 	bic.w	r2, r4, #2147483648	; 0x80000000
    5f96:	4282      	cmp	r2, r0
    5f98:	d806      	bhi.n	5fa8 <sin+0x7c>
    5f9a:	4628      	mov	r0, r5
    5f9c:	4621      	mov	r1, r4
    5f9e:	f7fb f881 	bl	10a4 <__aeabi_d2iz>
    5fa2:	b908      	cbnz	r0, 5fa8 <sin+0x7c>
    5fa4:	2500      	movs	r5, #0
    5fa6:	462c      	mov	r4, r5
    5fa8:	4628      	mov	r0, r5
    5faa:	4621      	mov	r1, r4
    5fac:	b006      	add	sp, #24
    5fae:	bd70      	pop	{r4, r5, r6, pc}
    5fb0:	3fe921fb 	.word	0x3fe921fb
    5fb4:	7fefffff 	.word	0x7fefffff
    5fb8:	3e6fffff 	.word	0x3e6fffff

00005fbc <pow>:
    5fbc:	f000 b804 	b.w	5fc8 <__ieee754_pow>

00005fc0 <sqrt>:
    5fc0:	f000 bfc6 	b.w	6f50 <__ieee754_sqrt>
    5fc4:	0000      	movs	r0, r0
	...

00005fc8 <__ieee754_pow>:
    5fc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5fcc:	4693      	mov	fp, r2
    5fce:	b09b      	sub	sp, #108	; 0x6c
    5fd0:	469a      	mov	sl, r3
    5fd2:	2200      	movs	r2, #0
    5fd4:	4ba0      	ldr	r3, [pc, #640]	; (6258 <__ieee754_pow+0x290>)
    5fd6:	4606      	mov	r6, r0
    5fd8:	460f      	mov	r7, r1
    5fda:	f7fb f831 	bl	1040 <__aeabi_dcmpeq>
    5fde:	b128      	cbz	r0, 5fec <__ieee754_pow+0x24>
    5fe0:	f04f 0b00 	mov.w	fp, #0
    5fe4:	f8df a270 	ldr.w	sl, [pc, #624]	; 6258 <__ieee754_pow+0x290>
    5fe8:	f000 bd71 	b.w	6ace <__ieee754_pow+0xb06>
    5fec:	4630      	mov	r0, r6
    5fee:	4639      	mov	r1, r7
    5ff0:	2200      	movs	r2, #0
    5ff2:	4b9a      	ldr	r3, [pc, #616]	; (625c <__ieee754_pow+0x294>)
    5ff4:	f7fb f824 	bl	1040 <__aeabi_dcmpeq>
    5ff8:	b968      	cbnz	r0, 6016 <__ieee754_pow+0x4e>
    5ffa:	f02a 4100 	bic.w	r1, sl, #2147483648	; 0x80000000
    5ffe:	f027 4400 	bic.w	r4, r7, #2147483648	; 0x80000000
    6002:	ea51 080b 	orrs.w	r8, r1, fp
    6006:	9704      	str	r7, [sp, #16]
    6008:	4630      	mov	r0, r6
    600a:	4655      	mov	r5, sl
    600c:	465b      	mov	r3, fp
    600e:	ea44 0206 	orr.w	r2, r4, r6
    6012:	d007      	beq.n	6024 <__ieee754_pow+0x5c>
    6014:	e00d      	b.n	6032 <__ieee754_pow+0x6a>
    6016:	4658      	mov	r0, fp
    6018:	4651      	mov	r1, sl
    601a:	f7ff feeb 	bl	5df4 <__fpclassifyd>
    601e:	2802      	cmp	r0, #2
    6020:	d1eb      	bne.n	5ffa <__ieee754_pow+0x32>
    6022:	e7dd      	b.n	5fe0 <__ieee754_pow+0x18>
    6024:	b92a      	cbnz	r2, 6032 <__ieee754_pow+0x6a>
    6026:	4a8e      	ldr	r2, [pc, #568]	; (6260 <__ieee754_pow+0x298>)
    6028:	f04f 0921 	mov.w	r9, #33	; 0x21
    602c:	f8c2 9000 	str.w	r9, [r2]
    6030:	e000      	b.n	6034 <__ieee754_pow+0x6c>
    6032:	b932      	cbnz	r2, 6042 <__ieee754_pow+0x7a>
    6034:	2d00      	cmp	r5, #0
    6036:	da04      	bge.n	6042 <__ieee754_pow+0x7a>
    6038:	4a89      	ldr	r2, [pc, #548]	; (6260 <__ieee754_pow+0x298>)
    603a:	f04f 0921 	mov.w	r9, #33	; 0x21
    603e:	f8c2 9000 	str.w	r9, [r2]
    6042:	f1b8 0f00 	cmp.w	r8, #0
    6046:	d0cb      	beq.n	5fe0 <__ieee754_pow+0x18>
    6048:	4a86      	ldr	r2, [pc, #536]	; (6264 <__ieee754_pow+0x29c>)
    604a:	4294      	cmp	r4, r2
    604c:	d805      	bhi.n	605a <__ieee754_pow+0x92>
    604e:	d100      	bne.n	6052 <__ieee754_pow+0x8a>
    6050:	b918      	cbnz	r0, 605a <__ieee754_pow+0x92>
    6052:	4291      	cmp	r1, r2
    6054:	d801      	bhi.n	605a <__ieee754_pow+0x92>
    6056:	d10b      	bne.n	6070 <__ieee754_pow+0xa8>
    6058:	b153      	cbz	r3, 6070 <__ieee754_pow+0xa8>
    605a:	4b81      	ldr	r3, [pc, #516]	; (6260 <__ieee754_pow+0x298>)
    605c:	2022      	movs	r0, #34	; 0x22
    605e:	6018      	str	r0, [r3, #0]
    6060:	4651      	mov	r1, sl
    6062:	4658      	mov	r0, fp
    6064:	4632      	mov	r2, r6
    6066:	463b      	mov	r3, r7
    6068:	f7fa fbd0 	bl	80c <__adddf3>
    606c:	f000 bd2a 	b.w	6ac4 <__ieee754_pow+0xafc>
    6070:	9a04      	ldr	r2, [sp, #16]
    6072:	2a00      	cmp	r2, #0
    6074:	da2c      	bge.n	60d0 <__ieee754_pow+0x108>
    6076:	4a7c      	ldr	r2, [pc, #496]	; (6268 <__ieee754_pow+0x2a0>)
    6078:	4291      	cmp	r1, r2
    607a:	d826      	bhi.n	60ca <__ieee754_pow+0x102>
    607c:	f1a2 7254 	sub.w	r2, r2, #55574528	; 0x3500000
    6080:	4291      	cmp	r1, r2
    6082:	d925      	bls.n	60d0 <__ieee754_pow+0x108>
    6084:	0d0a      	lsrs	r2, r1, #20
    6086:	f240 4813 	movw	r8, #1043	; 0x413
    608a:	4542      	cmp	r2, r8
    608c:	dd0d      	ble.n	60aa <__ieee754_pow+0xe2>
    608e:	f5c2 6286 	rsb	r2, r2, #1072	; 0x430
    6092:	3203      	adds	r2, #3
    6094:	fa23 f802 	lsr.w	r8, r3, r2
    6098:	fa08 f202 	lsl.w	r2, r8, r2
    609c:	429a      	cmp	r2, r3
    609e:	d117      	bne.n	60d0 <__ieee754_pow+0x108>
    60a0:	f008 0801 	and.w	r8, r8, #1
    60a4:	f1c8 0c02 	rsb	ip, r8, #2
    60a8:	e014      	b.n	60d4 <__ieee754_pow+0x10c>
    60aa:	2b00      	cmp	r3, #0
    60ac:	d158      	bne.n	6160 <__ieee754_pow+0x198>
    60ae:	f5c2 6282 	rsb	r2, r2, #1040	; 0x410
    60b2:	3203      	adds	r2, #3
    60b4:	fa21 f802 	lsr.w	r8, r1, r2
    60b8:	fa08 f202 	lsl.w	r2, r8, r2
    60bc:	428a      	cmp	r2, r1
    60be:	d12e      	bne.n	611e <__ieee754_pow+0x156>
    60c0:	f008 0801 	and.w	r8, r8, #1
    60c4:	f1c8 0c02 	rsb	ip, r8, #2
    60c8:	e02a      	b.n	6120 <__ieee754_pow+0x158>
    60ca:	f04f 0c02 	mov.w	ip, #2
    60ce:	e001      	b.n	60d4 <__ieee754_pow+0x10c>
    60d0:	f04f 0c00 	mov.w	ip, #0
    60d4:	2b00      	cmp	r3, #0
    60d6:	d145      	bne.n	6164 <__ieee754_pow+0x19c>
    60d8:	4b62      	ldr	r3, [pc, #392]	; (6264 <__ieee754_pow+0x29c>)
    60da:	4299      	cmp	r1, r3
    60dc:	d120      	bne.n	6120 <__ieee754_pow+0x158>
    60de:	f104 4140 	add.w	r1, r4, #3221225472	; 0xc0000000
    60e2:	f501 1380 	add.w	r3, r1, #1048576	; 0x100000
    60e6:	4303      	orrs	r3, r0
    60e8:	d107      	bne.n	60fa <__ieee754_pow+0x132>
    60ea:	4658      	mov	r0, fp
    60ec:	4651      	mov	r1, sl
    60ee:	465a      	mov	r2, fp
    60f0:	4653      	mov	r3, sl
    60f2:	f7fa fb89 	bl	808 <__aeabi_dsub>
    60f6:	f000 bce5 	b.w	6ac4 <__ieee754_pow+0xafc>
    60fa:	485c      	ldr	r0, [pc, #368]	; (626c <__ieee754_pow+0x2a4>)
    60fc:	4284      	cmp	r4, r0
    60fe:	d907      	bls.n	6110 <__ieee754_pow+0x148>
    6100:	2d00      	cmp	r5, #0
    6102:	f280 84e4 	bge.w	6ace <__ieee754_pow+0xb06>
    6106:	f04f 0b00 	mov.w	fp, #0
    610a:	46da      	mov	sl, fp
    610c:	f000 bcdf 	b.w	6ace <__ieee754_pow+0xb06>
    6110:	2d00      	cmp	r5, #0
    6112:	daf8      	bge.n	6106 <__ieee754_pow+0x13e>
    6114:	f10a 4100 	add.w	r1, sl, #2147483648	; 0x80000000
    6118:	468a      	mov	sl, r1
    611a:	f000 bcd8 	b.w	6ace <__ieee754_pow+0xb06>
    611e:	469c      	mov	ip, r3
    6120:	4a4d      	ldr	r2, [pc, #308]	; (6258 <__ieee754_pow+0x290>)
    6122:	4291      	cmp	r1, r2
    6124:	d10a      	bne.n	613c <__ieee754_pow+0x174>
    6126:	2d00      	cmp	r5, #0
    6128:	f280 84cf 	bge.w	6aca <__ieee754_pow+0xb02>
    612c:	2000      	movs	r0, #0
    612e:	4632      	mov	r2, r6
    6130:	463b      	mov	r3, r7
    6132:	4949      	ldr	r1, [pc, #292]	; (6258 <__ieee754_pow+0x290>)
    6134:	f7fa fe46 	bl	dc4 <__aeabi_ddiv>
    6138:	f000 bcc4 	b.w	6ac4 <__ieee754_pow+0xafc>
    613c:	f1b5 4f80 	cmp.w	r5, #1073741824	; 0x40000000
    6140:	d102      	bne.n	6148 <__ieee754_pow+0x180>
    6142:	4630      	mov	r0, r6
    6144:	4639      	mov	r1, r7
    6146:	e076      	b.n	6236 <__ieee754_pow+0x26e>
    6148:	4b49      	ldr	r3, [pc, #292]	; (6270 <__ieee754_pow+0x2a8>)
    614a:	429d      	cmp	r5, r3
    614c:	d10a      	bne.n	6164 <__ieee754_pow+0x19c>
    614e:	9a04      	ldr	r2, [sp, #16]
    6150:	2a00      	cmp	r2, #0
    6152:	db07      	blt.n	6164 <__ieee754_pow+0x19c>
    6154:	4630      	mov	r0, r6
    6156:	4639      	mov	r1, r7
    6158:	f7ff ff32 	bl	5fc0 <sqrt>
    615c:	f000 bcb2 	b.w	6ac4 <__ieee754_pow+0xafc>
    6160:	f04f 0c00 	mov.w	ip, #0
    6164:	f027 4800 	bic.w	r8, r7, #2147483648	; 0x80000000
    6168:	4632      	mov	r2, r6
    616a:	4643      	mov	r3, r8
    616c:	46b1      	mov	r9, r6
    616e:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
    6172:	2800      	cmp	r0, #0
    6174:	d13e      	bne.n	61f4 <__ieee754_pow+0x22c>
    6176:	483b      	ldr	r0, [pc, #236]	; (6264 <__ieee754_pow+0x29c>)
    6178:	4284      	cmp	r4, r0
    617a:	d004      	beq.n	6186 <__ieee754_pow+0x1be>
    617c:	b11c      	cbz	r4, 6186 <__ieee754_pow+0x1be>
    617e:	f100 4340 	add.w	r3, r0, #3221225472	; 0xc0000000
    6182:	429c      	cmp	r4, r3
    6184:	d136      	bne.n	61f4 <__ieee754_pow+0x22c>
    6186:	2d00      	cmp	r5, #0
    6188:	db04      	blt.n	6194 <__ieee754_pow+0x1cc>
    618a:	464a      	mov	r2, r9
    618c:	4643      	mov	r3, r8
    618e:	e9cd 2316 	strd	r2, r3, [sp, #88]	; 0x58
    6192:	e00b      	b.n	61ac <__ieee754_pow+0x1e4>
    6194:	2000      	movs	r0, #0
    6196:	4930      	ldr	r1, [pc, #192]	; (6258 <__ieee754_pow+0x290>)
    6198:	f8cd c004 	str.w	ip, [sp, #4]
    619c:	464a      	mov	r2, r9
    619e:	4643      	mov	r3, r8
    61a0:	f7fa fe10 	bl	dc4 <__aeabi_ddiv>
    61a4:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
    61a8:	f8dd c004 	ldr.w	ip, [sp, #4]
    61ac:	9904      	ldr	r1, [sp, #16]
    61ae:	2900      	cmp	r1, #0
    61b0:	da1a      	bge.n	61e8 <__ieee754_pow+0x220>
    61b2:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
    61b6:	f504 1080 	add.w	r0, r4, #1048576	; 0x100000
    61ba:	ea5c 0400 	orrs.w	r4, ip, r0
    61be:	d10c      	bne.n	61da <__ieee754_pow+0x212>
    61c0:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
    61c4:	4602      	mov	r2, r0
    61c6:	460b      	mov	r3, r1
    61c8:	f7fa fb1e 	bl	808 <__aeabi_dsub>
    61cc:	4602      	mov	r2, r0
    61ce:	460b      	mov	r3, r1
    61d0:	f7fa fdf8 	bl	dc4 <__aeabi_ddiv>
    61d4:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
    61d8:	e006      	b.n	61e8 <__ieee754_pow+0x220>
    61da:	f1bc 0f01 	cmp.w	ip, #1
    61de:	d103      	bne.n	61e8 <__ieee754_pow+0x220>
    61e0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    61e2:	f103 4200 	add.w	r2, r3, #2147483648	; 0x80000000
    61e6:	9217      	str	r2, [sp, #92]	; 0x5c
    61e8:	f8dd b058 	ldr.w	fp, [sp, #88]	; 0x58
    61ec:	f8dd a05c 	ldr.w	sl, [sp, #92]	; 0x5c
    61f0:	f000 bc6d 	b.w	6ace <__ieee754_pow+0xb06>
    61f4:	9a04      	ldr	r2, [sp, #16]
    61f6:	0fd0      	lsrs	r0, r2, #31
    61f8:	1e43      	subs	r3, r0, #1
    61fa:	ea5c 0303 	orrs.w	r3, ip, r3
    61fe:	d109      	bne.n	6214 <__ieee754_pow+0x24c>
    6200:	4a1c      	ldr	r2, [pc, #112]	; (6274 <__ieee754_pow+0x2ac>)
    6202:	4b17      	ldr	r3, [pc, #92]	; (6260 <__ieee754_pow+0x298>)
    6204:	f8d2 b000 	ldr.w	fp, [r2]
    6208:	f8d2 a004 	ldr.w	sl, [r2, #4]
    620c:	2021      	movs	r0, #33	; 0x21
    620e:	6018      	str	r0, [r3, #0]
    6210:	f000 bc5d 	b.w	6ace <__ieee754_pow+0xb06>
    6214:	4a18      	ldr	r2, [pc, #96]	; (6278 <__ieee754_pow+0x2b0>)
    6216:	4291      	cmp	r1, r2
    6218:	f240 8095 	bls.w	6346 <__ieee754_pow+0x37e>
    621c:	f102 7204 	add.w	r2, r2, #34603008	; 0x2100000
    6220:	4291      	cmp	r1, r2
    6222:	d90c      	bls.n	623e <__ieee754_pow+0x276>
    6224:	4911      	ldr	r1, [pc, #68]	; (626c <__ieee754_pow+0x2a4>)
    6226:	428c      	cmp	r4, r1
    6228:	d80f      	bhi.n	624a <__ieee754_pow+0x282>
    622a:	2d00      	cmp	r5, #0
    622c:	f6bf af6b 	bge.w	6106 <__ieee754_pow+0x13e>
    6230:	a107      	add	r1, pc, #28	; (adr r1, 6250 <__ieee754_pow+0x288>)
    6232:	e9d1 0100 	ldrd	r0, r1, [r1]
    6236:	4602      	mov	r2, r0
    6238:	460b      	mov	r3, r1
    623a:	f000 bc41 	b.w	6ac0 <__ieee754_pow+0xaf8>
    623e:	490f      	ldr	r1, [pc, #60]	; (627c <__ieee754_pow+0x2b4>)
    6240:	428c      	cmp	r4, r1
    6242:	d9f2      	bls.n	622a <__ieee754_pow+0x262>
    6244:	4804      	ldr	r0, [pc, #16]	; (6258 <__ieee754_pow+0x290>)
    6246:	4284      	cmp	r4, r0
    6248:	d91a      	bls.n	6280 <__ieee754_pow+0x2b8>
    624a:	2d00      	cmp	r5, #0
    624c:	dcf0      	bgt.n	6230 <__ieee754_pow+0x268>
    624e:	e75a      	b.n	6106 <__ieee754_pow+0x13e>
    6250:	8800759c 	.word	0x8800759c
    6254:	7e37e43c 	.word	0x7e37e43c
    6258:	3ff00000 	.word	0x3ff00000
    625c:	bff00000 	.word	0xbff00000
    6260:	1fffea4c 	.word	0x1fffea4c
    6264:	7ff00000 	.word	0x7ff00000
    6268:	433fffff 	.word	0x433fffff
    626c:	3fefffff 	.word	0x3fefffff
    6270:	3fe00000 	.word	0x3fe00000
    6274:	1fffe010 	.word	0x1fffe010
    6278:	41e00000 	.word	0x41e00000
    627c:	3feffffe 	.word	0x3feffffe
    6280:	4630      	mov	r0, r6
    6282:	4639      	mov	r1, r7
    6284:	2200      	movs	r2, #0
    6286:	4b4e      	ldr	r3, [pc, #312]	; (63c0 <__ieee754_pow+0x3f8>)
    6288:	f8cd c004 	str.w	ip, [sp, #4]
    628c:	f7fa fabc 	bl	808 <__aeabi_dsub>
    6290:	a343      	add	r3, pc, #268	; (adr r3, 63a0 <__ieee754_pow+0x3d8>)
    6292:	e9d3 2300 	ldrd	r2, r3, [r3]
    6296:	4604      	mov	r4, r0
    6298:	460d      	mov	r5, r1
    629a:	f7fa fc69 	bl	b70 <__aeabi_dmul>
    629e:	a342      	add	r3, pc, #264	; (adr r3, 63a8 <__ieee754_pow+0x3e0>)
    62a0:	e9d3 2300 	ldrd	r2, r3, [r3]
    62a4:	4606      	mov	r6, r0
    62a6:	460f      	mov	r7, r1
    62a8:	4620      	mov	r0, r4
    62aa:	4629      	mov	r1, r5
    62ac:	f7fa fc60 	bl	b70 <__aeabi_dmul>
    62b0:	4622      	mov	r2, r4
    62b2:	e9cd 0102 	strd	r0, r1, [sp, #8]
    62b6:	462b      	mov	r3, r5
    62b8:	4620      	mov	r0, r4
    62ba:	4629      	mov	r1, r5
    62bc:	f7fa fc58 	bl	b70 <__aeabi_dmul>
    62c0:	2200      	movs	r2, #0
    62c2:	4680      	mov	r8, r0
    62c4:	4689      	mov	r9, r1
    62c6:	4620      	mov	r0, r4
    62c8:	4629      	mov	r1, r5
    62ca:	4b3e      	ldr	r3, [pc, #248]	; (63c4 <__ieee754_pow+0x3fc>)
    62cc:	f7fa fc50 	bl	b70 <__aeabi_dmul>
    62d0:	4602      	mov	r2, r0
    62d2:	460b      	mov	r3, r1
    62d4:	a136      	add	r1, pc, #216	; (adr r1, 63b0 <__ieee754_pow+0x3e8>)
    62d6:	e9d1 0100 	ldrd	r0, r1, [r1]
    62da:	f7fa fa95 	bl	808 <__aeabi_dsub>
    62de:	4602      	mov	r2, r0
    62e0:	460b      	mov	r3, r1
    62e2:	4620      	mov	r0, r4
    62e4:	4629      	mov	r1, r5
    62e6:	f7fa fc43 	bl	b70 <__aeabi_dmul>
    62ea:	4602      	mov	r2, r0
    62ec:	460b      	mov	r3, r1
    62ee:	2000      	movs	r0, #0
    62f0:	4935      	ldr	r1, [pc, #212]	; (63c8 <__ieee754_pow+0x400>)
    62f2:	f7fa fa89 	bl	808 <__aeabi_dsub>
    62f6:	4602      	mov	r2, r0
    62f8:	460b      	mov	r3, r1
    62fa:	4640      	mov	r0, r8
    62fc:	4649      	mov	r1, r9
    62fe:	f7fa fc37 	bl	b70 <__aeabi_dmul>
    6302:	a32d      	add	r3, pc, #180	; (adr r3, 63b8 <__ieee754_pow+0x3f0>)
    6304:	e9d3 2300 	ldrd	r2, r3, [r3]
    6308:	f7fa fc32 	bl	b70 <__aeabi_dmul>
    630c:	4602      	mov	r2, r0
    630e:	460b      	mov	r3, r1
    6310:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    6314:	f7fa fa78 	bl	808 <__aeabi_dsub>
    6318:	4604      	mov	r4, r0
    631a:	460d      	mov	r5, r1
    631c:	4622      	mov	r2, r4
    631e:	462b      	mov	r3, r5
    6320:	4630      	mov	r0, r6
    6322:	4639      	mov	r1, r7
    6324:	f7fa fa72 	bl	80c <__adddf3>
    6328:	2300      	movs	r3, #0
    632a:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
    632e:	9312      	str	r3, [sp, #72]	; 0x48
    6330:	4632      	mov	r2, r6
    6332:	463b      	mov	r3, r7
    6334:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
    6338:	f7fa fa66 	bl	808 <__aeabi_dsub>
    633c:	4602      	mov	r2, r0
    633e:	460b      	mov	r3, r1
    6340:	4620      	mov	r0, r4
    6342:	4629      	mov	r1, r5
    6344:	e1f1      	b.n	672a <__ieee754_pow+0x762>
    6346:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
    634a:	d20f      	bcs.n	636c <__ieee754_pow+0x3a4>
    634c:	4648      	mov	r0, r9
    634e:	4641      	mov	r1, r8
    6350:	2200      	movs	r2, #0
    6352:	4b1e      	ldr	r3, [pc, #120]	; (63cc <__ieee754_pow+0x404>)
    6354:	f8cd c004 	str.w	ip, [sp, #4]
    6358:	f7fa fc0a 	bl	b70 <__aeabi_dmul>
    635c:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
    6360:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
    6362:	f8dd c004 	ldr.w	ip, [sp, #4]
    6366:	f06f 0534 	mvn.w	r5, #52	; 0x34
    636a:	e000      	b.n	636e <__ieee754_pow+0x3a6>
    636c:	2500      	movs	r5, #0
    636e:	0d26      	lsrs	r6, r4, #20
    6370:	4a17      	ldr	r2, [pc, #92]	; (63d0 <__ieee754_pow+0x408>)
    6372:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
    6376:	f424 0070 	bic.w	r0, r4, #15728640	; 0xf00000
    637a:	f2a6 37ff 	subw	r7, r6, #1023	; 0x3ff
    637e:	19e9      	adds	r1, r5, r7
    6380:	f040 537f 	orr.w	r3, r0, #1069547520	; 0x3fc00000
    6384:	4290      	cmp	r0, r2
    6386:	910a      	str	r1, [sp, #40]	; 0x28
    6388:	f443 1540 	orr.w	r5, r3, #3145728	; 0x300000
    638c:	d906      	bls.n	639c <__ieee754_pow+0x3d4>
    638e:	4e11      	ldr	r6, [pc, #68]	; (63d4 <__ieee754_pow+0x40c>)
    6390:	42b0      	cmp	r0, r6
    6392:	d921      	bls.n	63d8 <__ieee754_pow+0x410>
    6394:	1c4f      	adds	r7, r1, #1
    6396:	970a      	str	r7, [sp, #40]	; 0x28
    6398:	f5a5 1580 	sub.w	r5, r5, #1048576	; 0x100000
    639c:	2400      	movs	r4, #0
    639e:	e01c      	b.n	63da <__ieee754_pow+0x412>
    63a0:	60000000 	.word	0x60000000
    63a4:	3ff71547 	.word	0x3ff71547
    63a8:	f85ddf44 	.word	0xf85ddf44
    63ac:	3e54ae0b 	.word	0x3e54ae0b
    63b0:	55555555 	.word	0x55555555
    63b4:	3fd55555 	.word	0x3fd55555
    63b8:	652b82fe 	.word	0x652b82fe
    63bc:	3ff71547 	.word	0x3ff71547
    63c0:	3ff00000 	.word	0x3ff00000
    63c4:	3fd00000 	.word	0x3fd00000
    63c8:	3fe00000 	.word	0x3fe00000
    63cc:	43400000 	.word	0x43400000
    63d0:	0003988e 	.word	0x0003988e
    63d4:	000bb679 	.word	0x000bb679
    63d8:	2401      	movs	r4, #1
    63da:	950f      	str	r5, [sp, #60]	; 0x3c
    63dc:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
    63e0:	e9cd 0108 	strd	r0, r1, [sp, #32]
    63e4:	00e1      	lsls	r1, r4, #3
    63e6:	910b      	str	r1, [sp, #44]	; 0x2c
    63e8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    63ea:	4ba3      	ldr	r3, [pc, #652]	; (6678 <__ieee754_pow+0x6b0>)
    63ec:	f8cd c004 	str.w	ip, [sp, #4]
    63f0:	189e      	adds	r6, r3, r2
    63f2:	e9d6 8900 	ldrd	r8, r9, [r6]
    63f6:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
    63fa:	4642      	mov	r2, r8
    63fc:	464b      	mov	r3, r9
    63fe:	f7fa fa03 	bl	808 <__aeabi_dsub>
    6402:	4642      	mov	r2, r8
    6404:	4606      	mov	r6, r0
    6406:	460f      	mov	r7, r1
    6408:	464b      	mov	r3, r9
    640a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
    640e:	f7fa f9fd 	bl	80c <__adddf3>
    6412:	4602      	mov	r2, r0
    6414:	460b      	mov	r3, r1
    6416:	2000      	movs	r0, #0
    6418:	4998      	ldr	r1, [pc, #608]	; (667c <__ieee754_pow+0x6b4>)
    641a:	f7fa fcd3 	bl	dc4 <__aeabi_ddiv>
    641e:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
    6422:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
    6426:	4630      	mov	r0, r6
    6428:	4639      	mov	r1, r7
    642a:	f7fa fba1 	bl	b70 <__aeabi_dmul>
    642e:	086d      	lsrs	r5, r5, #1
    6430:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
    6434:	e9cd 0106 	strd	r0, r1, [sp, #24]
    6438:	f045 5100 	orr.w	r1, r5, #536870912	; 0x20000000
    643c:	2200      	movs	r2, #0
    643e:	2300      	movs	r3, #0
    6440:	eb01 4484 	add.w	r4, r1, r4, lsl #18
    6444:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
    6448:	2000      	movs	r0, #0
    644a:	f504 2300 	add.w	r3, r4, #524288	; 0x80000
    644e:	9016      	str	r0, [sp, #88]	; 0x58
    6450:	9319      	str	r3, [sp, #100]	; 0x64
    6452:	e9dd 4518 	ldrd	r4, r5, [sp, #96]	; 0x60
    6456:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
    645a:	e9cd 2302 	strd	r2, r3, [sp, #8]
    645e:	4610      	mov	r0, r2
    6460:	4619      	mov	r1, r3
    6462:	4622      	mov	r2, r4
    6464:	462b      	mov	r3, r5
    6466:	f7fa fb83 	bl	b70 <__aeabi_dmul>
    646a:	4602      	mov	r2, r0
    646c:	460b      	mov	r3, r1
    646e:	4630      	mov	r0, r6
    6470:	4639      	mov	r1, r7
    6472:	f7fa f9c9 	bl	808 <__aeabi_dsub>
    6476:	4642      	mov	r2, r8
    6478:	4606      	mov	r6, r0
    647a:	460f      	mov	r7, r1
    647c:	464b      	mov	r3, r9
    647e:	4620      	mov	r0, r4
    6480:	4629      	mov	r1, r5
    6482:	f7fa f9c1 	bl	808 <__aeabi_dsub>
    6486:	4602      	mov	r2, r0
    6488:	460b      	mov	r3, r1
    648a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
    648e:	f7fa f9bb 	bl	808 <__aeabi_dsub>
    6492:	4602      	mov	r2, r0
    6494:	460b      	mov	r3, r1
    6496:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    649a:	f7fa fb69 	bl	b70 <__aeabi_dmul>
    649e:	4602      	mov	r2, r0
    64a0:	460b      	mov	r3, r1
    64a2:	4630      	mov	r0, r6
    64a4:	4639      	mov	r1, r7
    64a6:	f7fa f9af 	bl	808 <__aeabi_dsub>
    64aa:	4602      	mov	r2, r0
    64ac:	460b      	mov	r3, r1
    64ae:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
    64b2:	f7fa fb5d 	bl	b70 <__aeabi_dmul>
    64b6:	4606      	mov	r6, r0
    64b8:	460f      	mov	r7, r1
    64ba:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
    64be:	4602      	mov	r2, r0
    64c0:	460b      	mov	r3, r1
    64c2:	f7fa fb55 	bl	b70 <__aeabi_dmul>
    64c6:	4602      	mov	r2, r0
    64c8:	460b      	mov	r3, r1
    64ca:	4604      	mov	r4, r0
    64cc:	460d      	mov	r5, r1
    64ce:	f7fa fb4f 	bl	b70 <__aeabi_dmul>
    64d2:	a359      	add	r3, pc, #356	; (adr r3, 6638 <__ieee754_pow+0x670>)
    64d4:	e9d3 2300 	ldrd	r2, r3, [r3]
    64d8:	4680      	mov	r8, r0
    64da:	4689      	mov	r9, r1
    64dc:	4620      	mov	r0, r4
    64de:	4629      	mov	r1, r5
    64e0:	f7fa fb46 	bl	b70 <__aeabi_dmul>
    64e4:	a356      	add	r3, pc, #344	; (adr r3, 6640 <__ieee754_pow+0x678>)
    64e6:	e9d3 2300 	ldrd	r2, r3, [r3]
    64ea:	f7fa f98f 	bl	80c <__adddf3>
    64ee:	4602      	mov	r2, r0
    64f0:	460b      	mov	r3, r1
    64f2:	4620      	mov	r0, r4
    64f4:	4629      	mov	r1, r5
    64f6:	f7fa fb3b 	bl	b70 <__aeabi_dmul>
    64fa:	a353      	add	r3, pc, #332	; (adr r3, 6648 <__ieee754_pow+0x680>)
    64fc:	e9d3 2300 	ldrd	r2, r3, [r3]
    6500:	f7fa f984 	bl	80c <__adddf3>
    6504:	4602      	mov	r2, r0
    6506:	460b      	mov	r3, r1
    6508:	4620      	mov	r0, r4
    650a:	4629      	mov	r1, r5
    650c:	f7fa fb30 	bl	b70 <__aeabi_dmul>
    6510:	a34f      	add	r3, pc, #316	; (adr r3, 6650 <__ieee754_pow+0x688>)
    6512:	e9d3 2300 	ldrd	r2, r3, [r3]
    6516:	f7fa f979 	bl	80c <__adddf3>
    651a:	4602      	mov	r2, r0
    651c:	460b      	mov	r3, r1
    651e:	4620      	mov	r0, r4
    6520:	4629      	mov	r1, r5
    6522:	f7fa fb25 	bl	b70 <__aeabi_dmul>
    6526:	a34c      	add	r3, pc, #304	; (adr r3, 6658 <__ieee754_pow+0x690>)
    6528:	e9d3 2300 	ldrd	r2, r3, [r3]
    652c:	f7fa f96e 	bl	80c <__adddf3>
    6530:	4602      	mov	r2, r0
    6532:	460b      	mov	r3, r1
    6534:	4620      	mov	r0, r4
    6536:	4629      	mov	r1, r5
    6538:	f7fa fb1a 	bl	b70 <__aeabi_dmul>
    653c:	a348      	add	r3, pc, #288	; (adr r3, 6660 <__ieee754_pow+0x698>)
    653e:	e9d3 2300 	ldrd	r2, r3, [r3]
    6542:	f7fa f963 	bl	80c <__adddf3>
    6546:	4602      	mov	r2, r0
    6548:	460b      	mov	r3, r1
    654a:	4640      	mov	r0, r8
    654c:	4649      	mov	r1, r9
    654e:	f7fa fb0f 	bl	b70 <__aeabi_dmul>
    6552:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    6556:	4604      	mov	r4, r0
    6558:	460d      	mov	r5, r1
    655a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    655e:	f7fa f955 	bl	80c <__adddf3>
    6562:	4602      	mov	r2, r0
    6564:	460b      	mov	r3, r1
    6566:	4630      	mov	r0, r6
    6568:	4639      	mov	r1, r7
    656a:	f7fa fb01 	bl	b70 <__aeabi_dmul>
    656e:	4602      	mov	r2, r0
    6570:	460b      	mov	r3, r1
    6572:	4620      	mov	r0, r4
    6574:	4629      	mov	r1, r5
    6576:	f7fa f949 	bl	80c <__adddf3>
    657a:	4680      	mov	r8, r0
    657c:	4689      	mov	r9, r1
    657e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    6582:	4602      	mov	r2, r0
    6584:	460b      	mov	r3, r1
    6586:	f7fa faf3 	bl	b70 <__aeabi_dmul>
    658a:	2200      	movs	r2, #0
    658c:	4b3c      	ldr	r3, [pc, #240]	; (6680 <__ieee754_pow+0x6b8>)
    658e:	e9cd 0108 	strd	r0, r1, [sp, #32]
    6592:	f7fa f93b 	bl	80c <__adddf3>
    6596:	4642      	mov	r2, r8
    6598:	464b      	mov	r3, r9
    659a:	f7fa f937 	bl	80c <__adddf3>
    659e:	2200      	movs	r2, #0
    65a0:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
    65a4:	9218      	str	r2, [sp, #96]	; 0x60
    65a6:	e9dd 4518 	ldrd	r4, r5, [sp, #96]	; 0x60
    65aa:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    65ae:	4622      	mov	r2, r4
    65b0:	462b      	mov	r3, r5
    65b2:	f7fa fadd 	bl	b70 <__aeabi_dmul>
    65b6:	4622      	mov	r2, r4
    65b8:	e9cd 0102 	strd	r0, r1, [sp, #8]
    65bc:	462b      	mov	r3, r5
    65be:	4630      	mov	r0, r6
    65c0:	4639      	mov	r1, r7
    65c2:	f7fa fad5 	bl	b70 <__aeabi_dmul>
    65c6:	2200      	movs	r2, #0
    65c8:	4606      	mov	r6, r0
    65ca:	460f      	mov	r7, r1
    65cc:	4620      	mov	r0, r4
    65ce:	4629      	mov	r1, r5
    65d0:	4b2b      	ldr	r3, [pc, #172]	; (6680 <__ieee754_pow+0x6b8>)
    65d2:	f7fa f919 	bl	808 <__aeabi_dsub>
    65d6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
    65da:	f7fa f915 	bl	808 <__aeabi_dsub>
    65de:	4602      	mov	r2, r0
    65e0:	460b      	mov	r3, r1
    65e2:	4640      	mov	r0, r8
    65e4:	4649      	mov	r1, r9
    65e6:	f7fa f90f 	bl	808 <__aeabi_dsub>
    65ea:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    65ee:	f7fa fabf 	bl	b70 <__aeabi_dmul>
    65f2:	4602      	mov	r2, r0
    65f4:	460b      	mov	r3, r1
    65f6:	4630      	mov	r0, r6
    65f8:	4639      	mov	r1, r7
    65fa:	f7fa f907 	bl	80c <__adddf3>
    65fe:	4680      	mov	r8, r0
    6600:	4689      	mov	r9, r1
    6602:	4642      	mov	r2, r8
    6604:	464b      	mov	r3, r9
    6606:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    660a:	f7fa f8ff 	bl	80c <__adddf3>
    660e:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
    6612:	2000      	movs	r0, #0
    6614:	9010      	str	r0, [sp, #64]	; 0x40
    6616:	e9dd 4510 	ldrd	r4, r5, [sp, #64]	; 0x40
    661a:	a313      	add	r3, pc, #76	; (adr r3, 6668 <__ieee754_pow+0x6a0>)
    661c:	e9d3 2300 	ldrd	r2, r3, [r3]
    6620:	4620      	mov	r0, r4
    6622:	4629      	mov	r1, r5
    6624:	f7fa faa4 	bl	b70 <__aeabi_dmul>
    6628:	a311      	add	r3, pc, #68	; (adr r3, 6670 <__ieee754_pow+0x6a8>)
    662a:	e9d3 2300 	ldrd	r2, r3, [r3]
    662e:	e9cd 0106 	strd	r0, r1, [sp, #24]
    6632:	4620      	mov	r0, r4
    6634:	e026      	b.n	6684 <__ieee754_pow+0x6bc>
    6636:	bf00      	nop
    6638:	4a454eef 	.word	0x4a454eef
    663c:	3fca7e28 	.word	0x3fca7e28
    6640:	93c9db65 	.word	0x93c9db65
    6644:	3fcd864a 	.word	0x3fcd864a
    6648:	a91d4101 	.word	0xa91d4101
    664c:	3fd17460 	.word	0x3fd17460
    6650:	518f264d 	.word	0x518f264d
    6654:	3fd55555 	.word	0x3fd55555
    6658:	db6fabff 	.word	0xdb6fabff
    665c:	3fdb6db6 	.word	0x3fdb6db6
    6660:	33333303 	.word	0x33333303
    6664:	3fe33333 	.word	0x3fe33333
    6668:	e0000000 	.word	0xe0000000
    666c:	3feec709 	.word	0x3feec709
    6670:	145b01f5 	.word	0x145b01f5
    6674:	be3e2fe0 	.word	0xbe3e2fe0
    6678:	0000c470 	.word	0x0000c470
    667c:	3ff00000 	.word	0x3ff00000
    6680:	40080000 	.word	0x40080000
    6684:	4629      	mov	r1, r5
    6686:	f7fa fa73 	bl	b70 <__aeabi_dmul>
    668a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    668e:	4606      	mov	r6, r0
    6690:	460f      	mov	r7, r1
    6692:	4620      	mov	r0, r4
    6694:	4629      	mov	r1, r5
    6696:	f7fa f8b7 	bl	808 <__aeabi_dsub>
    669a:	4602      	mov	r2, r0
    669c:	460b      	mov	r3, r1
    669e:	4640      	mov	r0, r8
    66a0:	4649      	mov	r1, r9
    66a2:	f7fa f8b1 	bl	808 <__aeabi_dsub>
    66a6:	a388      	add	r3, pc, #544	; (adr r3, 68c8 <__ieee754_pow+0x900>)
    66a8:	e9d3 2300 	ldrd	r2, r3, [r3]
    66ac:	f7fa fa60 	bl	b70 <__aeabi_dmul>
    66b0:	4602      	mov	r2, r0
    66b2:	460b      	mov	r3, r1
    66b4:	4630      	mov	r0, r6
    66b6:	4639      	mov	r1, r7
    66b8:	f7fa f8a8 	bl	80c <__adddf3>
    66bc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    66be:	4b8a      	ldr	r3, [pc, #552]	; (68e8 <__ieee754_pow+0x920>)
    66c0:	191d      	adds	r5, r3, r4
    66c2:	e9d5 2300 	ldrd	r2, r3, [r5]
    66c6:	f7fa f8a1 	bl	80c <__adddf3>
    66ca:	4606      	mov	r6, r0
    66cc:	980a      	ldr	r0, [sp, #40]	; 0x28
    66ce:	460f      	mov	r7, r1
    66d0:	f7fa f9e8 	bl	aa4 <__aeabi_i2d>
    66d4:	4a85      	ldr	r2, [pc, #532]	; (68ec <__ieee754_pow+0x924>)
    66d6:	460d      	mov	r5, r1
    66d8:	990b      	ldr	r1, [sp, #44]	; 0x2c
    66da:	4604      	mov	r4, r0
    66dc:	1850      	adds	r0, r2, r1
    66de:	e9d0 8900 	ldrd	r8, r9, [r0]
    66e2:	4632      	mov	r2, r6
    66e4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
    66e8:	463b      	mov	r3, r7
    66ea:	f7fa f88f 	bl	80c <__adddf3>
    66ee:	4642      	mov	r2, r8
    66f0:	464b      	mov	r3, r9
    66f2:	f7fa f88b 	bl	80c <__adddf3>
    66f6:	4622      	mov	r2, r4
    66f8:	462b      	mov	r3, r5
    66fa:	f7fa f887 	bl	80c <__adddf3>
    66fe:	2300      	movs	r3, #0
    6700:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
    6704:	9312      	str	r3, [sp, #72]	; 0x48
    6706:	4622      	mov	r2, r4
    6708:	462b      	mov	r3, r5
    670a:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
    670e:	f7fa f87b 	bl	808 <__aeabi_dsub>
    6712:	4642      	mov	r2, r8
    6714:	464b      	mov	r3, r9
    6716:	f7fa f877 	bl	808 <__aeabi_dsub>
    671a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    671e:	f7fa f873 	bl	808 <__aeabi_dsub>
    6722:	4602      	mov	r2, r0
    6724:	460b      	mov	r3, r1
    6726:	4630      	mov	r0, r6
    6728:	4639      	mov	r1, r7
    672a:	f7fa f86d 	bl	808 <__aeabi_dsub>
    672e:	460d      	mov	r5, r1
    6730:	9904      	ldr	r1, [sp, #16]
    6732:	f8dd c004 	ldr.w	ip, [sp, #4]
    6736:	4604      	mov	r4, r0
    6738:	17c8      	asrs	r0, r1, #31
    673a:	f10c 32ff 	add.w	r2, ip, #4294967295
    673e:	1c46      	adds	r6, r0, #1
    6740:	ea52 0306 	orrs.w	r3, r2, r6
    6744:	bf14      	ite	ne
    6746:	4b6a      	ldrne	r3, [pc, #424]	; (68f0 <__ieee754_pow+0x928>)
    6748:	4b6a      	ldreq	r3, [pc, #424]	; (68f4 <__ieee754_pow+0x92c>)
    674a:	f04f 0200 	mov.w	r2, #0
    674e:	e9cd 2304 	strd	r2, r3, [sp, #16]
    6752:	2700      	movs	r7, #0
    6754:	465a      	mov	r2, fp
    6756:	4653      	mov	r3, sl
    6758:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
    675c:	9718      	str	r7, [sp, #96]	; 0x60
    675e:	e9dd 6718 	ldrd	r6, r7, [sp, #96]	; 0x60
    6762:	e9dd 8912 	ldrd	r8, r9, [sp, #72]	; 0x48
    6766:	4632      	mov	r2, r6
    6768:	463b      	mov	r3, r7
    676a:	4658      	mov	r0, fp
    676c:	4651      	mov	r1, sl
    676e:	f7fa f84b 	bl	808 <__aeabi_dsub>
    6772:	4642      	mov	r2, r8
    6774:	464b      	mov	r3, r9
    6776:	f7fa f9fb 	bl	b70 <__aeabi_dmul>
    677a:	4622      	mov	r2, r4
    677c:	e9cd 0102 	strd	r0, r1, [sp, #8]
    6780:	462b      	mov	r3, r5
    6782:	4658      	mov	r0, fp
    6784:	4651      	mov	r1, sl
    6786:	f7fa f9f3 	bl	b70 <__aeabi_dmul>
    678a:	4602      	mov	r2, r0
    678c:	460b      	mov	r3, r1
    678e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    6792:	f7fa f83b 	bl	80c <__adddf3>
    6796:	4642      	mov	r2, r8
    6798:	464b      	mov	r3, r9
    679a:	4604      	mov	r4, r0
    679c:	460d      	mov	r5, r1
    679e:	4630      	mov	r0, r6
    67a0:	4639      	mov	r1, r7
    67a2:	f7fa f9e5 	bl	b70 <__aeabi_dmul>
    67a6:	4606      	mov	r6, r0
    67a8:	460f      	mov	r7, r1
    67aa:	4632      	mov	r2, r6
    67ac:	463b      	mov	r3, r7
    67ae:	4620      	mov	r0, r4
    67b0:	4629      	mov	r1, r5
    67b2:	e9cd 6710 	strd	r6, r7, [sp, #64]	; 0x40
    67b6:	f7fa f829 	bl	80c <__adddf3>
    67ba:	4680      	mov	r8, r0
    67bc:	4689      	mov	r9, r1
    67be:	e9cd 8916 	strd	r8, r9, [sp, #88]	; 0x58
    67c2:	f8dd b05c 	ldr.w	fp, [sp, #92]	; 0x5c
    67c6:	4b4c      	ldr	r3, [pc, #304]	; (68f8 <__ieee754_pow+0x930>)
    67c8:	9a16      	ldr	r2, [sp, #88]	; 0x58
    67ca:	459b      	cmp	fp, r3
    67cc:	dd27      	ble.n	681e <__ieee754_pow+0x856>
    67ce:	f10b 413f 	add.w	r1, fp, #3204448256	; 0xbf000000
    67d2:	f501 00e0 	add.w	r0, r1, #7340032	; 0x700000
    67d6:	ea50 0302 	orrs.w	r3, r0, r2
    67da:	d115      	bne.n	6808 <__ieee754_pow+0x840>
    67dc:	a33c      	add	r3, pc, #240	; (adr r3, 68d0 <__ieee754_pow+0x908>)
    67de:	e9d3 2300 	ldrd	r2, r3, [r3]
    67e2:	4620      	mov	r0, r4
    67e4:	4629      	mov	r1, r5
    67e6:	f7fa f811 	bl	80c <__adddf3>
    67ea:	4632      	mov	r2, r6
    67ec:	e9cd 0102 	strd	r0, r1, [sp, #8]
    67f0:	463b      	mov	r3, r7
    67f2:	4640      	mov	r0, r8
    67f4:	4649      	mov	r1, r9
    67f6:	f7fa f807 	bl	808 <__aeabi_dsub>
    67fa:	4602      	mov	r2, r0
    67fc:	460b      	mov	r3, r1
    67fe:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    6802:	f7fa fc45 	bl	1090 <__aeabi_dcmpgt>
    6806:	b348      	cbz	r0, 685c <__ieee754_pow+0x894>
    6808:	a333      	add	r3, pc, #204	; (adr r3, 68d8 <__ieee754_pow+0x910>)
    680a:	e9d3 2300 	ldrd	r2, r3, [r3]
    680e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    6812:	f7fa f9ad 	bl	b70 <__aeabi_dmul>
    6816:	a330      	add	r3, pc, #192	; (adr r3, 68d8 <__ieee754_pow+0x910>)
    6818:	e9d3 2300 	ldrd	r2, r3, [r3]
    681c:	e150      	b.n	6ac0 <__ieee754_pow+0xaf8>
    681e:	4b37      	ldr	r3, [pc, #220]	; (68fc <__ieee754_pow+0x934>)
    6820:	f02b 4e00 	bic.w	lr, fp, #2147483648	; 0x80000000
    6824:	459e      	cmp	lr, r3
    6826:	d919      	bls.n	685c <__ieee754_pow+0x894>
    6828:	4b35      	ldr	r3, [pc, #212]	; (6900 <__ieee754_pow+0x938>)
    682a:	445b      	add	r3, fp
    682c:	4313      	orrs	r3, r2
    682e:	d10a      	bne.n	6846 <__ieee754_pow+0x87e>
    6830:	4632      	mov	r2, r6
    6832:	463b      	mov	r3, r7
    6834:	f7f9 ffe8 	bl	808 <__aeabi_dsub>
    6838:	4602      	mov	r2, r0
    683a:	460b      	mov	r3, r1
    683c:	4620      	mov	r0, r4
    683e:	4629      	mov	r1, r5
    6840:	f7fa fc12 	bl	1068 <__aeabi_dcmple>
    6844:	b150      	cbz	r0, 685c <__ieee754_pow+0x894>
    6846:	a326      	add	r3, pc, #152	; (adr r3, 68e0 <__ieee754_pow+0x918>)
    6848:	e9d3 2300 	ldrd	r2, r3, [r3]
    684c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    6850:	f7fa f98e 	bl	b70 <__aeabi_dmul>
    6854:	a322      	add	r3, pc, #136	; (adr r3, 68e0 <__ieee754_pow+0x918>)
    6856:	e9d3 2300 	ldrd	r2, r3, [r3]
    685a:	e131      	b.n	6ac0 <__ieee754_pow+0xaf8>
    685c:	4b29      	ldr	r3, [pc, #164]	; (6904 <__ieee754_pow+0x93c>)
    685e:	f02b 4200 	bic.w	r2, fp, #2147483648	; 0x80000000
    6862:	429a      	cmp	r2, r3
    6864:	d952      	bls.n	690c <__ieee754_pow+0x944>
    6866:	0d11      	lsrs	r1, r2, #20
    6868:	f2a1 30fe 	subw	r0, r1, #1022	; 0x3fe
    686c:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
    6870:	fa22 f300 	lsr.w	r3, r2, r0
    6874:	eb0b 0103 	add.w	r1, fp, r3
    6878:	2200      	movs	r2, #0
    687a:	2300      	movs	r3, #0
    687c:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
    6880:	f3c1 500a 	ubfx	r0, r1, #20, #11
    6884:	4a20      	ldr	r2, [pc, #128]	; (6908 <__ieee754_pow+0x940>)
    6886:	f2a0 33ff 	subw	r3, r0, #1023	; 0x3ff
    688a:	fa42 f303 	asr.w	r3, r2, r3
    688e:	f021 487f 	bic.w	r8, r1, #4278190080	; 0xff000000
    6892:	ea21 0203 	bic.w	r2, r1, r3
    6896:	f428 0970 	bic.w	r9, r8, #15728640	; 0xf00000
    689a:	f5c0 6182 	rsb	r1, r0, #1040	; 0x410
    689e:	1cc8      	adds	r0, r1, #3
    68a0:	9215      	str	r2, [sp, #84]	; 0x54
    68a2:	f449 1c80 	orr.w	ip, r9, #1048576	; 0x100000
    68a6:	fa4c fa00 	asr.w	sl, ip, r0
    68aa:	f1bb 0f00 	cmp.w	fp, #0
    68ae:	4630      	mov	r0, r6
    68b0:	4639      	mov	r1, r7
    68b2:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
    68b6:	bfb8      	it	lt
    68b8:	f1ca 0a00 	rsblt	sl, sl, #0
    68bc:	f7f9 ffa4 	bl	808 <__aeabi_dsub>
    68c0:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
    68c4:	e024      	b.n	6910 <__ieee754_pow+0x948>
    68c6:	bf00      	nop
    68c8:	dc3a03fd 	.word	0xdc3a03fd
    68cc:	3feec709 	.word	0x3feec709
    68d0:	652b82fe 	.word	0x652b82fe
    68d4:	3c971547 	.word	0x3c971547
    68d8:	8800759c 	.word	0x8800759c
    68dc:	7e37e43c 	.word	0x7e37e43c
    68e0:	c2f8f359 	.word	0xc2f8f359
    68e4:	01a56e1f 	.word	0x01a56e1f
    68e8:	0000c460 	.word	0x0000c460
    68ec:	0000c450 	.word	0x0000c450
    68f0:	3ff00000 	.word	0x3ff00000
    68f4:	bff00000 	.word	0xbff00000
    68f8:	408fffff 	.word	0x408fffff
    68fc:	4090cbff 	.word	0x4090cbff
    6900:	3f6f3400 	.word	0x3f6f3400
    6904:	3fe00000 	.word	0x3fe00000
    6908:	000fffff 	.word	0x000fffff
    690c:	f04f 0a00 	mov.w	sl, #0
    6910:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	; 0x40
    6914:	4620      	mov	r0, r4
    6916:	4642      	mov	r2, r8
    6918:	464b      	mov	r3, r9
    691a:	4629      	mov	r1, r5
    691c:	f7f9 ff76 	bl	80c <__adddf3>
    6920:	2600      	movs	r6, #0
    6922:	e9cd 0114 	strd	r0, r1, [sp, #80]	; 0x50
    6926:	9614      	str	r6, [sp, #80]	; 0x50
    6928:	e9dd 6714 	ldrd	r6, r7, [sp, #80]	; 0x50
    692c:	a36a      	add	r3, pc, #424	; (adr r3, 6ad8 <__ieee754_pow+0xb10>)
    692e:	e9d3 2300 	ldrd	r2, r3, [r3]
    6932:	4630      	mov	r0, r6
    6934:	4639      	mov	r1, r7
    6936:	f7fa f91b 	bl	b70 <__aeabi_dmul>
    693a:	4642      	mov	r2, r8
    693c:	e9cd 0102 	strd	r0, r1, [sp, #8]
    6940:	464b      	mov	r3, r9
    6942:	4630      	mov	r0, r6
    6944:	4639      	mov	r1, r7
    6946:	f7f9 ff5f 	bl	808 <__aeabi_dsub>
    694a:	4602      	mov	r2, r0
    694c:	460b      	mov	r3, r1
    694e:	4620      	mov	r0, r4
    6950:	4629      	mov	r1, r5
    6952:	f7f9 ff59 	bl	808 <__aeabi_dsub>
    6956:	a362      	add	r3, pc, #392	; (adr r3, 6ae0 <__ieee754_pow+0xb18>)
    6958:	e9d3 2300 	ldrd	r2, r3, [r3]
    695c:	f7fa f908 	bl	b70 <__aeabi_dmul>
    6960:	a361      	add	r3, pc, #388	; (adr r3, 6ae8 <__ieee754_pow+0xb20>)
    6962:	e9d3 2300 	ldrd	r2, r3, [r3]
    6966:	4604      	mov	r4, r0
    6968:	460d      	mov	r5, r1
    696a:	4630      	mov	r0, r6
    696c:	4639      	mov	r1, r7
    696e:	f7fa f8ff 	bl	b70 <__aeabi_dmul>
    6972:	4602      	mov	r2, r0
    6974:	460b      	mov	r3, r1
    6976:	4620      	mov	r0, r4
    6978:	4629      	mov	r1, r5
    697a:	f7f9 ff47 	bl	80c <__adddf3>
    697e:	4606      	mov	r6, r0
    6980:	460f      	mov	r7, r1
    6982:	4632      	mov	r2, r6
    6984:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    6988:	463b      	mov	r3, r7
    698a:	f7f9 ff3f 	bl	80c <__adddf3>
    698e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    6992:	4604      	mov	r4, r0
    6994:	460d      	mov	r5, r1
    6996:	f7f9 ff37 	bl	808 <__aeabi_dsub>
    699a:	4602      	mov	r2, r0
    699c:	460b      	mov	r3, r1
    699e:	4630      	mov	r0, r6
    69a0:	4639      	mov	r1, r7
    69a2:	f7f9 ff31 	bl	808 <__aeabi_dsub>
    69a6:	4622      	mov	r2, r4
    69a8:	4680      	mov	r8, r0
    69aa:	4689      	mov	r9, r1
    69ac:	462b      	mov	r3, r5
    69ae:	4620      	mov	r0, r4
    69b0:	4629      	mov	r1, r5
    69b2:	f7fa f8dd 	bl	b70 <__aeabi_dmul>
    69b6:	a34e      	add	r3, pc, #312	; (adr r3, 6af0 <__ieee754_pow+0xb28>)
    69b8:	e9d3 2300 	ldrd	r2, r3, [r3]
    69bc:	4606      	mov	r6, r0
    69be:	460f      	mov	r7, r1
    69c0:	e9cd 6714 	strd	r6, r7, [sp, #80]	; 0x50
    69c4:	f7fa f8d4 	bl	b70 <__aeabi_dmul>
    69c8:	a34b      	add	r3, pc, #300	; (adr r3, 6af8 <__ieee754_pow+0xb30>)
    69ca:	e9d3 2300 	ldrd	r2, r3, [r3]
    69ce:	f7f9 ff1b 	bl	808 <__aeabi_dsub>
    69d2:	4602      	mov	r2, r0
    69d4:	460b      	mov	r3, r1
    69d6:	4630      	mov	r0, r6
    69d8:	4639      	mov	r1, r7
    69da:	f7fa f8c9 	bl	b70 <__aeabi_dmul>
    69de:	a348      	add	r3, pc, #288	; (adr r3, 6b00 <__ieee754_pow+0xb38>)
    69e0:	e9d3 2300 	ldrd	r2, r3, [r3]
    69e4:	f7f9 ff12 	bl	80c <__adddf3>
    69e8:	4602      	mov	r2, r0
    69ea:	460b      	mov	r3, r1
    69ec:	4630      	mov	r0, r6
    69ee:	4639      	mov	r1, r7
    69f0:	f7fa f8be 	bl	b70 <__aeabi_dmul>
    69f4:	a344      	add	r3, pc, #272	; (adr r3, 6b08 <__ieee754_pow+0xb40>)
    69f6:	e9d3 2300 	ldrd	r2, r3, [r3]
    69fa:	f7f9 ff05 	bl	808 <__aeabi_dsub>
    69fe:	4602      	mov	r2, r0
    6a00:	460b      	mov	r3, r1
    6a02:	4630      	mov	r0, r6
    6a04:	4639      	mov	r1, r7
    6a06:	f7fa f8b3 	bl	b70 <__aeabi_dmul>
    6a0a:	a341      	add	r3, pc, #260	; (adr r3, 6b10 <__ieee754_pow+0xb48>)
    6a0c:	e9d3 2300 	ldrd	r2, r3, [r3]
    6a10:	f7f9 fefc 	bl	80c <__adddf3>
    6a14:	4602      	mov	r2, r0
    6a16:	460b      	mov	r3, r1
    6a18:	4630      	mov	r0, r6
    6a1a:	4639      	mov	r1, r7
    6a1c:	f7fa f8a8 	bl	b70 <__aeabi_dmul>
    6a20:	4602      	mov	r2, r0
    6a22:	460b      	mov	r3, r1
    6a24:	4620      	mov	r0, r4
    6a26:	4629      	mov	r1, r5
    6a28:	f7f9 feee 	bl	808 <__aeabi_dsub>
    6a2c:	4606      	mov	r6, r0
    6a2e:	460f      	mov	r7, r1
    6a30:	4632      	mov	r2, r6
    6a32:	463b      	mov	r3, r7
    6a34:	4620      	mov	r0, r4
    6a36:	4629      	mov	r1, r5
    6a38:	e9cd 6712 	strd	r6, r7, [sp, #72]	; 0x48
    6a3c:	f7fa f898 	bl	b70 <__aeabi_dmul>
    6a40:	2200      	movs	r2, #0
    6a42:	e9cd 0102 	strd	r0, r1, [sp, #8]
    6a46:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    6a4a:	4630      	mov	r0, r6
    6a4c:	4639      	mov	r1, r7
    6a4e:	f7f9 fedb 	bl	808 <__aeabi_dsub>
    6a52:	4602      	mov	r2, r0
    6a54:	460b      	mov	r3, r1
    6a56:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    6a5a:	f7fa f9b3 	bl	dc4 <__aeabi_ddiv>
    6a5e:	4642      	mov	r2, r8
    6a60:	4606      	mov	r6, r0
    6a62:	460f      	mov	r7, r1
    6a64:	464b      	mov	r3, r9
    6a66:	4620      	mov	r0, r4
    6a68:	4629      	mov	r1, r5
    6a6a:	f7fa f881 	bl	b70 <__aeabi_dmul>
    6a6e:	4602      	mov	r2, r0
    6a70:	460b      	mov	r3, r1
    6a72:	4640      	mov	r0, r8
    6a74:	4649      	mov	r1, r9
    6a76:	f7f9 fec9 	bl	80c <__adddf3>
    6a7a:	4602      	mov	r2, r0
    6a7c:	460b      	mov	r3, r1
    6a7e:	4630      	mov	r0, r6
    6a80:	4639      	mov	r1, r7
    6a82:	f7f9 fec1 	bl	808 <__aeabi_dsub>
    6a86:	4622      	mov	r2, r4
    6a88:	462b      	mov	r3, r5
    6a8a:	f7f9 febd 	bl	808 <__aeabi_dsub>
    6a8e:	4602      	mov	r2, r0
    6a90:	460b      	mov	r3, r1
    6a92:	2000      	movs	r0, #0
    6a94:	4920      	ldr	r1, [pc, #128]	; (6b18 <__ieee754_pow+0xb50>)
    6a96:	f7f9 feb7 	bl	808 <__aeabi_dsub>
    6a9a:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
    6a9e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    6aa0:	eb03 520a 	add.w	r2, r3, sl, lsl #20
    6aa4:	f5b2 1f80 	cmp.w	r2, #1048576	; 0x100000
    6aa8:	da05      	bge.n	6ab6 <__ieee754_pow+0xaee>
    6aaa:	4652      	mov	r2, sl
    6aac:	f001 f88c 	bl	7bc8 <scalbn>
    6ab0:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
    6ab4:	e000      	b.n	6ab8 <__ieee754_pow+0xaf0>
    6ab6:	9217      	str	r2, [sp, #92]	; 0x5c
    6ab8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    6abc:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
    6ac0:	f7fa f856 	bl	b70 <__aeabi_dmul>
    6ac4:	4683      	mov	fp, r0
    6ac6:	468a      	mov	sl, r1
    6ac8:	e001      	b.n	6ace <__ieee754_pow+0xb06>
    6aca:	46b3      	mov	fp, r6
    6acc:	46ba      	mov	sl, r7
    6ace:	4658      	mov	r0, fp
    6ad0:	4651      	mov	r1, sl
    6ad2:	b01b      	add	sp, #108	; 0x6c
    6ad4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6ad8:	00000000 	.word	0x00000000
    6adc:	3fe62e43 	.word	0x3fe62e43
    6ae0:	fefa39ef 	.word	0xfefa39ef
    6ae4:	3fe62e42 	.word	0x3fe62e42
    6ae8:	0ca86c39 	.word	0x0ca86c39
    6aec:	be205c61 	.word	0xbe205c61
    6af0:	72bea4d0 	.word	0x72bea4d0
    6af4:	3e663769 	.word	0x3e663769
    6af8:	c5d26bf1 	.word	0xc5d26bf1
    6afc:	3ebbbd41 	.word	0x3ebbbd41
    6b00:	af25de2c 	.word	0xaf25de2c
    6b04:	3f11566a 	.word	0x3f11566a
    6b08:	16bebd93 	.word	0x16bebd93
    6b0c:	3f66c16c 	.word	0x3f66c16c
    6b10:	5555553e 	.word	0x5555553e
    6b14:	3fc55555 	.word	0x3fc55555
    6b18:	3ff00000 	.word	0x3ff00000
    6b1c:	f3af 8000 	nop.w

00006b20 <__ieee754_rem_pio2>:
    6b20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6b24:	4b4c      	ldr	r3, [pc, #304]	; (6c58 <__ieee754_rem_pio2+0x138>)
    6b26:	f021 4b00 	bic.w	fp, r1, #2147483648	; 0x80000000
    6b2a:	459b      	cmp	fp, r3
    6b2c:	b091      	sub	sp, #68	; 0x44
    6b2e:	4605      	mov	r5, r0
    6b30:	460c      	mov	r4, r1
    6b32:	4690      	mov	r8, r2
    6b34:	468a      	mov	sl, r1
    6b36:	dc08      	bgt.n	6b4a <__ieee754_rem_pio2+0x2a>
    6b38:	4602      	mov	r2, r0
    6b3a:	460b      	mov	r3, r1
    6b3c:	e9c8 2300 	strd	r2, r3, [r8]
    6b40:	2200      	movs	r2, #0
    6b42:	2300      	movs	r3, #0
    6b44:	e9c8 2302 	strd	r2, r3, [r8, #8]
    6b48:	e177      	b.n	6e3a <__ieee754_rem_pio2+0x31a>
    6b4a:	4a44      	ldr	r2, [pc, #272]	; (6c5c <__ieee754_rem_pio2+0x13c>)
    6b4c:	4593      	cmp	fp, r2
    6b4e:	f300 8089 	bgt.w	6c64 <__ieee754_rem_pio2+0x144>
    6b52:	2900      	cmp	r1, #0
    6b54:	a338      	add	r3, pc, #224	; (adr r3, 6c38 <__ieee754_rem_pio2+0x118>)
    6b56:	e9d3 2300 	ldrd	r2, r3, [r3]
    6b5a:	4e41      	ldr	r6, [pc, #260]	; (6c60 <__ieee754_rem_pio2+0x140>)
    6b5c:	dd34      	ble.n	6bc8 <__ieee754_rem_pio2+0xa8>
    6b5e:	f7f9 fe53 	bl	808 <__aeabi_dsub>
    6b62:	45b3      	cmp	fp, r6
    6b64:	4604      	mov	r4, r0
    6b66:	460d      	mov	r5, r1
    6b68:	d010      	beq.n	6b8c <__ieee754_rem_pio2+0x6c>
    6b6a:	a335      	add	r3, pc, #212	; (adr r3, 6c40 <__ieee754_rem_pio2+0x120>)
    6b6c:	e9d3 2300 	ldrd	r2, r3, [r3]
    6b70:	f7f9 fe4a 	bl	808 <__aeabi_dsub>
    6b74:	4602      	mov	r2, r0
    6b76:	460b      	mov	r3, r1
    6b78:	e9c8 2300 	strd	r2, r3, [r8]
    6b7c:	4620      	mov	r0, r4
    6b7e:	4629      	mov	r1, r5
    6b80:	f7f9 fe42 	bl	808 <__aeabi_dsub>
    6b84:	a32e      	add	r3, pc, #184	; (adr r3, 6c40 <__ieee754_rem_pio2+0x120>)
    6b86:	e9d3 2300 	ldrd	r2, r3, [r3]
    6b8a:	e016      	b.n	6bba <__ieee754_rem_pio2+0x9a>
    6b8c:	a32e      	add	r3, pc, #184	; (adr r3, 6c48 <__ieee754_rem_pio2+0x128>)
    6b8e:	e9d3 2300 	ldrd	r2, r3, [r3]
    6b92:	f7f9 fe39 	bl	808 <__aeabi_dsub>
    6b96:	a32e      	add	r3, pc, #184	; (adr r3, 6c50 <__ieee754_rem_pio2+0x130>)
    6b98:	e9d3 2300 	ldrd	r2, r3, [r3]
    6b9c:	4604      	mov	r4, r0
    6b9e:	460d      	mov	r5, r1
    6ba0:	f7f9 fe32 	bl	808 <__aeabi_dsub>
    6ba4:	4602      	mov	r2, r0
    6ba6:	460b      	mov	r3, r1
    6ba8:	e9c8 2300 	strd	r2, r3, [r8]
    6bac:	4620      	mov	r0, r4
    6bae:	4629      	mov	r1, r5
    6bb0:	f7f9 fe2a 	bl	808 <__aeabi_dsub>
    6bb4:	a326      	add	r3, pc, #152	; (adr r3, 6c50 <__ieee754_rem_pio2+0x130>)
    6bb6:	e9d3 2300 	ldrd	r2, r3, [r3]
    6bba:	f7f9 fe25 	bl	808 <__aeabi_dsub>
    6bbe:	f04f 0901 	mov.w	r9, #1
    6bc2:	e9c8 0102 	strd	r0, r1, [r8, #8]
    6bc6:	e1bd      	b.n	6f44 <__ieee754_rem_pio2+0x424>
    6bc8:	f7f9 fe20 	bl	80c <__adddf3>
    6bcc:	45b3      	cmp	fp, r6
    6bce:	4604      	mov	r4, r0
    6bd0:	460d      	mov	r5, r1
    6bd2:	d010      	beq.n	6bf6 <__ieee754_rem_pio2+0xd6>
    6bd4:	a31a      	add	r3, pc, #104	; (adr r3, 6c40 <__ieee754_rem_pio2+0x120>)
    6bd6:	e9d3 2300 	ldrd	r2, r3, [r3]
    6bda:	f7f9 fe17 	bl	80c <__adddf3>
    6bde:	4602      	mov	r2, r0
    6be0:	460b      	mov	r3, r1
    6be2:	e9c8 2300 	strd	r2, r3, [r8]
    6be6:	4620      	mov	r0, r4
    6be8:	4629      	mov	r1, r5
    6bea:	f7f9 fe0d 	bl	808 <__aeabi_dsub>
    6bee:	a314      	add	r3, pc, #80	; (adr r3, 6c40 <__ieee754_rem_pio2+0x120>)
    6bf0:	e9d3 2300 	ldrd	r2, r3, [r3]
    6bf4:	e016      	b.n	6c24 <__ieee754_rem_pio2+0x104>
    6bf6:	a314      	add	r3, pc, #80	; (adr r3, 6c48 <__ieee754_rem_pio2+0x128>)
    6bf8:	e9d3 2300 	ldrd	r2, r3, [r3]
    6bfc:	f7f9 fe06 	bl	80c <__adddf3>
    6c00:	a313      	add	r3, pc, #76	; (adr r3, 6c50 <__ieee754_rem_pio2+0x130>)
    6c02:	e9d3 2300 	ldrd	r2, r3, [r3]
    6c06:	4604      	mov	r4, r0
    6c08:	460d      	mov	r5, r1
    6c0a:	f7f9 fdff 	bl	80c <__adddf3>
    6c0e:	4602      	mov	r2, r0
    6c10:	460b      	mov	r3, r1
    6c12:	e9c8 2300 	strd	r2, r3, [r8]
    6c16:	4620      	mov	r0, r4
    6c18:	4629      	mov	r1, r5
    6c1a:	f7f9 fdf5 	bl	808 <__aeabi_dsub>
    6c1e:	a30c      	add	r3, pc, #48	; (adr r3, 6c50 <__ieee754_rem_pio2+0x130>)
    6c20:	e9d3 2300 	ldrd	r2, r3, [r3]
    6c24:	f7f9 fdf2 	bl	80c <__adddf3>
    6c28:	f04f 39ff 	mov.w	r9, #4294967295
    6c2c:	e9c8 0102 	strd	r0, r1, [r8, #8]
    6c30:	e188      	b.n	6f44 <__ieee754_rem_pio2+0x424>
    6c32:	bf00      	nop
    6c34:	f3af 8000 	nop.w
    6c38:	54400000 	.word	0x54400000
    6c3c:	3ff921fb 	.word	0x3ff921fb
    6c40:	1a626331 	.word	0x1a626331
    6c44:	3dd0b461 	.word	0x3dd0b461
    6c48:	1a600000 	.word	0x1a600000
    6c4c:	3dd0b461 	.word	0x3dd0b461
    6c50:	2e037073 	.word	0x2e037073
    6c54:	3ba3198a 	.word	0x3ba3198a
    6c58:	3fe921fb 	.word	0x3fe921fb
    6c5c:	4002d97b 	.word	0x4002d97b
    6c60:	3ff921fb 	.word	0x3ff921fb
    6c64:	4ba4      	ldr	r3, [pc, #656]	; (6ef8 <__ieee754_rem_pio2+0x3d8>)
    6c66:	459b      	cmp	fp, r3
    6c68:	f300 80dc 	bgt.w	6e24 <__ieee754_rem_pio2+0x304>
    6c6c:	f021 4700 	bic.w	r7, r1, #2147483648	; 0x80000000
    6c70:	a393      	add	r3, pc, #588	; (adr r3, 6ec0 <__ieee754_rem_pio2+0x3a0>)
    6c72:	e9d3 2300 	ldrd	r2, r3, [r3]
    6c76:	4639      	mov	r1, r7
    6c78:	f7f9 ff7a 	bl	b70 <__aeabi_dmul>
    6c7c:	2200      	movs	r2, #0
    6c7e:	4b9f      	ldr	r3, [pc, #636]	; (6efc <__ieee754_rem_pio2+0x3dc>)
    6c80:	f7f9 fdc4 	bl	80c <__adddf3>
    6c84:	f7fa fa0e 	bl	10a4 <__aeabi_d2iz>
    6c88:	4681      	mov	r9, r0
    6c8a:	f7f9 ff0b 	bl	aa4 <__aeabi_i2d>
    6c8e:	a38e      	add	r3, pc, #568	; (adr r3, 6ec8 <__ieee754_rem_pio2+0x3a8>)
    6c90:	e9d3 2300 	ldrd	r2, r3, [r3]
    6c94:	e9cd 0104 	strd	r0, r1, [sp, #16]
    6c98:	f7f9 ff6a 	bl	b70 <__aeabi_dmul>
    6c9c:	4602      	mov	r2, r0
    6c9e:	460b      	mov	r3, r1
    6ca0:	4628      	mov	r0, r5
    6ca2:	4639      	mov	r1, r7
    6ca4:	f7f9 fdb0 	bl	808 <__aeabi_dsub>
    6ca8:	a389      	add	r3, pc, #548	; (adr r3, 6ed0 <__ieee754_rem_pio2+0x3b0>)
    6caa:	e9d3 2300 	ldrd	r2, r3, [r3]
    6cae:	4604      	mov	r4, r0
    6cb0:	460d      	mov	r5, r1
    6cb2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    6cb6:	f7f9 ff5b 	bl	b70 <__aeabi_dmul>
    6cba:	f1b9 0f1f 	cmp.w	r9, #31
    6cbe:	4606      	mov	r6, r0
    6cc0:	460f      	mov	r7, r1
    6cc2:	dc06      	bgt.n	6cd2 <__ieee754_rem_pio2+0x1b2>
    6cc4:	f109 30ff 	add.w	r0, r9, #4294967295
    6cc8:	498d      	ldr	r1, [pc, #564]	; (6f00 <__ieee754_rem_pio2+0x3e0>)
    6cca:	f851 3020 	ldr.w	r3, [r1, r0, lsl #2]
    6cce:	459b      	cmp	fp, r3
    6cd0:	d176      	bne.n	6dc0 <__ieee754_rem_pio2+0x2a0>
    6cd2:	4632      	mov	r2, r6
    6cd4:	4620      	mov	r0, r4
    6cd6:	4629      	mov	r1, r5
    6cd8:	463b      	mov	r3, r7
    6cda:	f7f9 fd95 	bl	808 <__aeabi_dsub>
    6cde:	e9c8 0100 	strd	r0, r1, [r8]
    6ce2:	f8d8 2004 	ldr.w	r2, [r8, #4]
    6ce6:	ea4f 5b2b 	mov.w	fp, fp, asr #20
    6cea:	f3c2 500a 	ubfx	r0, r2, #20, #11
    6cee:	ebc0 010b 	rsb	r1, r0, fp
    6cf2:	2910      	cmp	r1, #16
    6cf4:	dd6f      	ble.n	6dd6 <__ieee754_rem_pio2+0x2b6>
    6cf6:	a378      	add	r3, pc, #480	; (adr r3, 6ed8 <__ieee754_rem_pio2+0x3b8>)
    6cf8:	e9d3 2300 	ldrd	r2, r3, [r3]
    6cfc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    6d00:	f7f9 ff36 	bl	b70 <__aeabi_dmul>
    6d04:	4606      	mov	r6, r0
    6d06:	460f      	mov	r7, r1
    6d08:	4632      	mov	r2, r6
    6d0a:	463b      	mov	r3, r7
    6d0c:	4620      	mov	r0, r4
    6d0e:	4629      	mov	r1, r5
    6d10:	f7f9 fd7a 	bl	808 <__aeabi_dsub>
    6d14:	e9cd 0106 	strd	r0, r1, [sp, #24]
    6d18:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    6d1c:	4620      	mov	r0, r4
    6d1e:	4629      	mov	r1, r5
    6d20:	f7f9 fd72 	bl	808 <__aeabi_dsub>
    6d24:	4632      	mov	r2, r6
    6d26:	463b      	mov	r3, r7
    6d28:	f7f9 fd6e 	bl	808 <__aeabi_dsub>
    6d2c:	a36c      	add	r3, pc, #432	; (adr r3, 6ee0 <__ieee754_rem_pio2+0x3c0>)
    6d2e:	e9d3 2300 	ldrd	r2, r3, [r3]
    6d32:	4604      	mov	r4, r0
    6d34:	460d      	mov	r5, r1
    6d36:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    6d3a:	f7f9 ff19 	bl	b70 <__aeabi_dmul>
    6d3e:	4622      	mov	r2, r4
    6d40:	462b      	mov	r3, r5
    6d42:	f7f9 fd61 	bl	808 <__aeabi_dsub>
    6d46:	4606      	mov	r6, r0
    6d48:	460f      	mov	r7, r1
    6d4a:	4632      	mov	r2, r6
    6d4c:	463b      	mov	r3, r7
    6d4e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
    6d52:	f7f9 fd59 	bl	808 <__aeabi_dsub>
    6d56:	e9c8 0100 	strd	r0, r1, [r8]
    6d5a:	f8d8 3004 	ldr.w	r3, [r8, #4]
    6d5e:	f3c3 520a 	ubfx	r2, r3, #20, #11
    6d62:	ebc2 0c0b 	rsb	ip, r2, fp
    6d66:	f1bc 0f31 	cmp.w	ip, #49	; 0x31
    6d6a:	dd32      	ble.n	6dd2 <__ieee754_rem_pio2+0x2b2>
    6d6c:	a35e      	add	r3, pc, #376	; (adr r3, 6ee8 <__ieee754_rem_pio2+0x3c8>)
    6d6e:	e9d3 2300 	ldrd	r2, r3, [r3]
    6d72:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    6d76:	f7f9 fefb 	bl	b70 <__aeabi_dmul>
    6d7a:	4606      	mov	r6, r0
    6d7c:	460f      	mov	r7, r1
    6d7e:	4632      	mov	r2, r6
    6d80:	463b      	mov	r3, r7
    6d82:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
    6d86:	f7f9 fd3f 	bl	808 <__aeabi_dsub>
    6d8a:	4604      	mov	r4, r0
    6d8c:	460d      	mov	r5, r1
    6d8e:	4622      	mov	r2, r4
    6d90:	462b      	mov	r3, r5
    6d92:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
    6d96:	f7f9 fd37 	bl	808 <__aeabi_dsub>
    6d9a:	4632      	mov	r2, r6
    6d9c:	463b      	mov	r3, r7
    6d9e:	f7f9 fd33 	bl	808 <__aeabi_dsub>
    6da2:	a353      	add	r3, pc, #332	; (adr r3, 6ef0 <__ieee754_rem_pio2+0x3d0>)
    6da4:	e9d3 2300 	ldrd	r2, r3, [r3]
    6da8:	4606      	mov	r6, r0
    6daa:	460f      	mov	r7, r1
    6dac:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    6db0:	f7f9 fede 	bl	b70 <__aeabi_dmul>
    6db4:	4632      	mov	r2, r6
    6db6:	463b      	mov	r3, r7
    6db8:	f7f9 fd26 	bl	808 <__aeabi_dsub>
    6dbc:	4606      	mov	r6, r0
    6dbe:	460f      	mov	r7, r1
    6dc0:	4620      	mov	r0, r4
    6dc2:	4629      	mov	r1, r5
    6dc4:	4632      	mov	r2, r6
    6dc6:	463b      	mov	r3, r7
    6dc8:	f7f9 fd1e 	bl	808 <__aeabi_dsub>
    6dcc:	e9c8 0100 	strd	r0, r1, [r8]
    6dd0:	e001      	b.n	6dd6 <__ieee754_rem_pio2+0x2b6>
    6dd2:	e9dd 4506 	ldrd	r4, r5, [sp, #24]
    6dd6:	f8d8 e000 	ldr.w	lr, [r8]
    6dda:	f8d8 b004 	ldr.w	fp, [r8, #4]
    6dde:	f8cd e00c 	str.w	lr, [sp, #12]
    6de2:	4672      	mov	r2, lr
    6de4:	465b      	mov	r3, fp
    6de6:	4620      	mov	r0, r4
    6de8:	4629      	mov	r1, r5
    6dea:	f7f9 fd0d 	bl	808 <__aeabi_dsub>
    6dee:	4632      	mov	r2, r6
    6df0:	463b      	mov	r3, r7
    6df2:	f7f9 fd09 	bl	808 <__aeabi_dsub>
    6df6:	f1ba 0f00 	cmp.w	sl, #0
    6dfa:	4602      	mov	r2, r0
    6dfc:	460b      	mov	r3, r1
    6dfe:	e9c8 2302 	strd	r2, r3, [r8, #8]
    6e02:	f8dd c00c 	ldr.w	ip, [sp, #12]
    6e06:	f280 809d 	bge.w	6f44 <__ieee754_rem_pio2+0x424>
    6e0a:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
    6e0e:	f8c8 0008 	str.w	r0, [r8, #8]
    6e12:	f101 4000 	add.w	r0, r1, #2147483648	; 0x80000000
    6e16:	f8c8 c000 	str.w	ip, [r8]
    6e1a:	f8c8 3004 	str.w	r3, [r8, #4]
    6e1e:	f8c8 000c 	str.w	r0, [r8, #12]
    6e22:	e08d      	b.n	6f40 <__ieee754_rem_pio2+0x420>
    6e24:	4a37      	ldr	r2, [pc, #220]	; (6f04 <__ieee754_rem_pio2+0x3e4>)
    6e26:	4593      	cmp	fp, r2
    6e28:	dd0a      	ble.n	6e40 <__ieee754_rem_pio2+0x320>
    6e2a:	4602      	mov	r2, r0
    6e2c:	460b      	mov	r3, r1
    6e2e:	f7f9 fceb 	bl	808 <__aeabi_dsub>
    6e32:	e9c8 0102 	strd	r0, r1, [r8, #8]
    6e36:	e9c8 0100 	strd	r0, r1, [r8]
    6e3a:	f04f 0900 	mov.w	r9, #0
    6e3e:	e081      	b.n	6f44 <__ieee754_rem_pio2+0x424>
    6e40:	ea4f 562b 	mov.w	r6, fp, asr #20
    6e44:	f2a6 4616 	subw	r6, r6, #1046	; 0x416
    6e48:	9008      	str	r0, [sp, #32]
    6e4a:	0530      	lsls	r0, r6, #20
    6e4c:	ebc0 010b 	rsb	r1, r0, fp
    6e50:	9109      	str	r1, [sp, #36]	; 0x24
    6e52:	e9dd 4508 	ldrd	r4, r5, [sp, #32]
    6e56:	4629      	mov	r1, r5
    6e58:	4620      	mov	r0, r4
    6e5a:	f7fa f923 	bl	10a4 <__aeabi_d2iz>
    6e5e:	f7f9 fe21 	bl	aa4 <__aeabi_i2d>
    6e62:	4602      	mov	r2, r0
    6e64:	460b      	mov	r3, r1
    6e66:	4620      	mov	r0, r4
    6e68:	4629      	mov	r1, r5
    6e6a:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    6e6e:	f7f9 fccb 	bl	808 <__aeabi_dsub>
    6e72:	2200      	movs	r2, #0
    6e74:	4b24      	ldr	r3, [pc, #144]	; (6f08 <__ieee754_rem_pio2+0x3e8>)
    6e76:	f7f9 fe7b 	bl	b70 <__aeabi_dmul>
    6e7a:	460d      	mov	r5, r1
    6e7c:	4604      	mov	r4, r0
    6e7e:	f7fa f911 	bl	10a4 <__aeabi_d2iz>
    6e82:	f7f9 fe0f 	bl	aa4 <__aeabi_i2d>
    6e86:	4602      	mov	r2, r0
    6e88:	460b      	mov	r3, r1
    6e8a:	4620      	mov	r0, r4
    6e8c:	4629      	mov	r1, r5
    6e8e:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
    6e92:	f7f9 fcb9 	bl	808 <__aeabi_dsub>
    6e96:	2200      	movs	r2, #0
    6e98:	4b1b      	ldr	r3, [pc, #108]	; (6f08 <__ieee754_rem_pio2+0x3e8>)
    6e9a:	f7f9 fe69 	bl	b70 <__aeabi_dmul>
    6e9e:	e9cd 0108 	strd	r0, r1, [sp, #32]
    6ea2:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
    6ea6:	ad10      	add	r5, sp, #64	; 0x40
    6ea8:	2403      	movs	r4, #3
    6eaa:	e975 0102 	ldrd	r0, r1, [r5, #-8]!
    6eae:	2200      	movs	r2, #0
    6eb0:	2300      	movs	r3, #0
    6eb2:	f7fa f8c5 	bl	1040 <__aeabi_dcmpeq>
    6eb6:	b348      	cbz	r0, 6f0c <__ieee754_rem_pio2+0x3ec>
    6eb8:	3c01      	subs	r4, #1
    6eba:	e7f6      	b.n	6eaa <__ieee754_rem_pio2+0x38a>
    6ebc:	f3af 8000 	nop.w
    6ec0:	6dc9c883 	.word	0x6dc9c883
    6ec4:	3fe45f30 	.word	0x3fe45f30
    6ec8:	54400000 	.word	0x54400000
    6ecc:	3ff921fb 	.word	0x3ff921fb
    6ed0:	1a626331 	.word	0x1a626331
    6ed4:	3dd0b461 	.word	0x3dd0b461
    6ed8:	1a600000 	.word	0x1a600000
    6edc:	3dd0b461 	.word	0x3dd0b461
    6ee0:	2e037073 	.word	0x2e037073
    6ee4:	3ba3198a 	.word	0x3ba3198a
    6ee8:	2e000000 	.word	0x2e000000
    6eec:	3ba3198a 	.word	0x3ba3198a
    6ef0:	252049c1 	.word	0x252049c1
    6ef4:	397b839a 	.word	0x397b839a
    6ef8:	413921fb 	.word	0x413921fb
    6efc:	3fe00000 	.word	0x3fe00000
    6f00:	0000c480 	.word	0x0000c480
    6f04:	7fefffff 	.word	0x7fefffff
    6f08:	41700000 	.word	0x41700000
    6f0c:	4a0f      	ldr	r2, [pc, #60]	; (6f4c <__ieee754_rem_pio2+0x42c>)
    6f0e:	2302      	movs	r3, #2
    6f10:	9300      	str	r3, [sp, #0]
    6f12:	9201      	str	r2, [sp, #4]
    6f14:	a80a      	add	r0, sp, #40	; 0x28
    6f16:	4641      	mov	r1, r8
    6f18:	4632      	mov	r2, r6
    6f1a:	4623      	mov	r3, r4
    6f1c:	f000 f9bc 	bl	7298 <__kernel_rem_pio2>
    6f20:	f1ba 0f00 	cmp.w	sl, #0
    6f24:	4681      	mov	r9, r0
    6f26:	da0d      	bge.n	6f44 <__ieee754_rem_pio2+0x424>
    6f28:	f8d8 0004 	ldr.w	r0, [r8, #4]
    6f2c:	f8d8 300c 	ldr.w	r3, [r8, #12]
    6f30:	f100 4100 	add.w	r1, r0, #2147483648	; 0x80000000
    6f34:	f103 4200 	add.w	r2, r3, #2147483648	; 0x80000000
    6f38:	f8c8 1004 	str.w	r1, [r8, #4]
    6f3c:	f8c8 200c 	str.w	r2, [r8, #12]
    6f40:	f1c9 0900 	rsb	r9, r9, #0
    6f44:	4648      	mov	r0, r9
    6f46:	b011      	add	sp, #68	; 0x44
    6f48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6f4c:	0000c500 	.word	0x0000c500

00006f50 <__ieee754_sqrt>:
    6f50:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    6f54:	4d54      	ldr	r5, [pc, #336]	; (70a8 <__ieee754_sqrt+0x158>)
    6f56:	f8df 8150 	ldr.w	r8, [pc, #336]	; 70a8 <__ieee754_sqrt+0x158>
    6f5a:	400d      	ands	r5, r1
    6f5c:	4545      	cmp	r5, r8
    6f5e:	4607      	mov	r7, r0
    6f60:	460e      	mov	r6, r1
    6f62:	460c      	mov	r4, r1
    6f64:	460b      	mov	r3, r1
    6f66:	4684      	mov	ip, r0
    6f68:	4602      	mov	r2, r0
    6f6a:	d10a      	bne.n	6f82 <__ieee754_sqrt+0x32>
    6f6c:	f7f9 fe00 	bl	b70 <__aeabi_dmul>
    6f70:	4602      	mov	r2, r0
    6f72:	460b      	mov	r3, r1
    6f74:	4638      	mov	r0, r7
    6f76:	4631      	mov	r1, r6
    6f78:	f7f9 fc48 	bl	80c <__adddf3>
    6f7c:	4607      	mov	r7, r0
    6f7e:	460e      	mov	r6, r1
    6f80:	e08d      	b.n	709e <__ieee754_sqrt+0x14e>
    6f82:	2900      	cmp	r1, #0
    6f84:	dc0d      	bgt.n	6fa2 <__ieee754_sqrt+0x52>
    6f86:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
    6f8a:	ea51 0c0c 	orrs.w	ip, r1, ip
    6f8e:	f000 8086 	beq.w	709e <__ieee754_sqrt+0x14e>
    6f92:	b136      	cbz	r6, 6fa2 <__ieee754_sqrt+0x52>
    6f94:	4b45      	ldr	r3, [pc, #276]	; (70ac <__ieee754_sqrt+0x15c>)
    6f96:	4846      	ldr	r0, [pc, #280]	; (70b0 <__ieee754_sqrt+0x160>)
    6f98:	681f      	ldr	r7, [r3, #0]
    6f9a:	2621      	movs	r6, #33	; 0x21
    6f9c:	6006      	str	r6, [r0, #0]
    6f9e:	685e      	ldr	r6, [r3, #4]
    6fa0:	e07d      	b.n	709e <__ieee754_sqrt+0x14e>
    6fa2:	0d24      	lsrs	r4, r4, #20
    6fa4:	d113      	bne.n	6fce <__ieee754_sqrt+0x7e>
    6fa6:	b91b      	cbnz	r3, 6fb0 <__ieee754_sqrt+0x60>
    6fa8:	0ad3      	lsrs	r3, r2, #11
    6faa:	3c15      	subs	r4, #21
    6fac:	0552      	lsls	r2, r2, #21
    6fae:	e7fa      	b.n	6fa6 <__ieee754_sqrt+0x56>
    6fb0:	2100      	movs	r1, #0
    6fb2:	02de      	lsls	r6, r3, #11
    6fb4:	d402      	bmi.n	6fbc <__ieee754_sqrt+0x6c>
    6fb6:	005b      	lsls	r3, r3, #1
    6fb8:	3101      	adds	r1, #1
    6fba:	e7fa      	b.n	6fb2 <__ieee754_sqrt+0x62>
    6fbc:	f1c1 0520 	rsb	r5, r1, #32
    6fc0:	fa22 f605 	lsr.w	r6, r2, r5
    6fc4:	f1c1 0001 	rsb	r0, r1, #1
    6fc8:	1824      	adds	r4, r4, r0
    6fca:	4333      	orrs	r3, r6
    6fcc:	408a      	lsls	r2, r1
    6fce:	f2a4 37ff 	subw	r7, r4, #1023	; 0x3ff
    6fd2:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
    6fd6:	f423 0170 	bic.w	r1, r3, #15728640	; 0xf00000
    6fda:	07fd      	lsls	r5, r7, #31
    6fdc:	f441 1680 	orr.w	r6, r1, #1048576	; 0x100000
    6fe0:	d503      	bpl.n	6fea <__ieee754_sqrt+0x9a>
    6fe2:	0fd0      	lsrs	r0, r2, #31
    6fe4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
    6fe8:	0052      	lsls	r2, r2, #1
    6fea:	0fd5      	lsrs	r5, r2, #31
    6fec:	eb05 0346 	add.w	r3, r5, r6, lsl #1
    6ff0:	2500      	movs	r5, #0
    6ff2:	107c      	asrs	r4, r7, #1
    6ff4:	0052      	lsls	r2, r2, #1
    6ff6:	2116      	movs	r1, #22
    6ff8:	4628      	mov	r0, r5
    6ffa:	f44f 1600 	mov.w	r6, #2097152	; 0x200000
    6ffe:	1987      	adds	r7, r0, r6
    7000:	429f      	cmp	r7, r3
    7002:	dc02      	bgt.n	700a <__ieee754_sqrt+0xba>
    7004:	19b8      	adds	r0, r7, r6
    7006:	1bdb      	subs	r3, r3, r7
    7008:	19ad      	adds	r5, r5, r6
    700a:	0fd7      	lsrs	r7, r2, #31
    700c:	0876      	lsrs	r6, r6, #1
    700e:	0052      	lsls	r2, r2, #1
    7010:	3901      	subs	r1, #1
    7012:	eb07 0343 	add.w	r3, r7, r3, lsl #1
    7016:	d1f2      	bne.n	6ffe <__ieee754_sqrt+0xae>
    7018:	f04f 0c20 	mov.w	ip, #32
    701c:	4688      	mov	r8, r1
    701e:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
    7022:	4298      	cmp	r0, r3
    7024:	eb08 0706 	add.w	r7, r8, r6
    7028:	db02      	blt.n	7030 <__ieee754_sqrt+0xe0>
    702a:	d116      	bne.n	705a <__ieee754_sqrt+0x10a>
    702c:	4297      	cmp	r7, r2
    702e:	d814      	bhi.n	705a <__ieee754_sqrt+0x10a>
    7030:	f007 4900 	and.w	r9, r7, #2147483648	; 0x80000000
    7034:	f1b9 4f00 	cmp.w	r9, #2147483648	; 0x80000000
    7038:	eb07 0806 	add.w	r8, r7, r6
    703c:	d105      	bne.n	704a <__ieee754_sqrt+0xfa>
    703e:	f1b8 0f00 	cmp.w	r8, #0
    7042:	db02      	blt.n	704a <__ieee754_sqrt+0xfa>
    7044:	f100 0901 	add.w	r9, r0, #1
    7048:	e000      	b.n	704c <__ieee754_sqrt+0xfc>
    704a:	4681      	mov	r9, r0
    704c:	1a1b      	subs	r3, r3, r0
    704e:	42ba      	cmp	r2, r7
    7050:	bf38      	it	cc
    7052:	3b01      	subcc	r3, #1
    7054:	1bd2      	subs	r2, r2, r7
    7056:	1989      	adds	r1, r1, r6
    7058:	4648      	mov	r0, r9
    705a:	0fd7      	lsrs	r7, r2, #31
    705c:	0876      	lsrs	r6, r6, #1
    705e:	0052      	lsls	r2, r2, #1
    7060:	f1bc 0c01 	subs.w	ip, ip, #1
    7064:	eb07 0343 	add.w	r3, r7, r3, lsl #1
    7068:	d1db      	bne.n	7022 <__ieee754_sqrt+0xd2>
    706a:	4313      	orrs	r3, r2
    706c:	d007      	beq.n	707e <__ieee754_sqrt+0x12e>
    706e:	1c48      	adds	r0, r1, #1
    7070:	d102      	bne.n	7078 <__ieee754_sqrt+0x128>
    7072:	3501      	adds	r5, #1
    7074:	4661      	mov	r1, ip
    7076:	e002      	b.n	707e <__ieee754_sqrt+0x12e>
    7078:	f001 0001 	and.w	r0, r1, #1
    707c:	1841      	adds	r1, r0, r1
    707e:	0849      	lsrs	r1, r1, #1
    7080:	086f      	lsrs	r7, r5, #1
    7082:	07ea      	lsls	r2, r5, #31
    7084:	bf48      	it	mi
    7086:	f041 4100 	orrmi.w	r1, r1, #2147483648	; 0x80000000
    708a:	0524      	lsls	r4, r4, #20
    708c:	f104 537f 	add.w	r3, r4, #1069547520	; 0x3fc00000
    7090:	f503 1200 	add.w	r2, r3, #2097152	; 0x200000
    7094:	19d4      	adds	r4, r2, r7
    7096:	e88d 0012 	stmia.w	sp, {r1, r4}
    709a:	460f      	mov	r7, r1
    709c:	4626      	mov	r6, r4
    709e:	4638      	mov	r0, r7
    70a0:	4631      	mov	r1, r6
    70a2:	b003      	add	sp, #12
    70a4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    70a8:	7ff00000 	.word	0x7ff00000
    70ac:	1fffe010 	.word	0x1fffe010
    70b0:	1fffea4c 	.word	0x1fffea4c
    70b4:	00000000 	.word	0x00000000

000070b8 <__kernel_cos>:
    70b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    70bc:	f021 4400 	bic.w	r4, r1, #2147483648	; 0x80000000
    70c0:	f1b4 5f79 	cmp.w	r4, #1044381696	; 0x3e400000
    70c4:	b087      	sub	sp, #28
    70c6:	4681      	mov	r9, r0
    70c8:	4688      	mov	r8, r1
    70ca:	4692      	mov	sl, r2
    70cc:	469b      	mov	fp, r3
    70ce:	d204      	bcs.n	70da <__kernel_cos+0x22>
    70d0:	f7f9 ffe8 	bl	10a4 <__aeabi_d2iz>
    70d4:	2800      	cmp	r0, #0
    70d6:	f000 80b4 	beq.w	7242 <__kernel_cos+0x18a>
    70da:	464a      	mov	r2, r9
    70dc:	4643      	mov	r3, r8
    70de:	4648      	mov	r0, r9
    70e0:	4641      	mov	r1, r8
    70e2:	f7f9 fd45 	bl	b70 <__aeabi_dmul>
    70e6:	a35a      	add	r3, pc, #360	; (adr r3, 7250 <__kernel_cos+0x198>)
    70e8:	e9d3 2300 	ldrd	r2, r3, [r3]
    70ec:	4606      	mov	r6, r0
    70ee:	460f      	mov	r7, r1
    70f0:	f7f9 fd3e 	bl	b70 <__aeabi_dmul>
    70f4:	a358      	add	r3, pc, #352	; (adr r3, 7258 <__kernel_cos+0x1a0>)
    70f6:	e9d3 2300 	ldrd	r2, r3, [r3]
    70fa:	f7f9 fb87 	bl	80c <__adddf3>
    70fe:	4602      	mov	r2, r0
    7100:	460b      	mov	r3, r1
    7102:	4630      	mov	r0, r6
    7104:	4639      	mov	r1, r7
    7106:	f7f9 fd33 	bl	b70 <__aeabi_dmul>
    710a:	a355      	add	r3, pc, #340	; (adr r3, 7260 <__kernel_cos+0x1a8>)
    710c:	e9d3 2300 	ldrd	r2, r3, [r3]
    7110:	f7f9 fb7a 	bl	808 <__aeabi_dsub>
    7114:	4602      	mov	r2, r0
    7116:	460b      	mov	r3, r1
    7118:	4630      	mov	r0, r6
    711a:	4639      	mov	r1, r7
    711c:	f7f9 fd28 	bl	b70 <__aeabi_dmul>
    7120:	a351      	add	r3, pc, #324	; (adr r3, 7268 <__kernel_cos+0x1b0>)
    7122:	e9d3 2300 	ldrd	r2, r3, [r3]
    7126:	f7f9 fb71 	bl	80c <__adddf3>
    712a:	4602      	mov	r2, r0
    712c:	460b      	mov	r3, r1
    712e:	4630      	mov	r0, r6
    7130:	4639      	mov	r1, r7
    7132:	f7f9 fd1d 	bl	b70 <__aeabi_dmul>
    7136:	a34e      	add	r3, pc, #312	; (adr r3, 7270 <__kernel_cos+0x1b8>)
    7138:	e9d3 2300 	ldrd	r2, r3, [r3]
    713c:	f7f9 fb64 	bl	808 <__aeabi_dsub>
    7140:	4602      	mov	r2, r0
    7142:	460b      	mov	r3, r1
    7144:	4630      	mov	r0, r6
    7146:	4639      	mov	r1, r7
    7148:	f7f9 fd12 	bl	b70 <__aeabi_dmul>
    714c:	a34a      	add	r3, pc, #296	; (adr r3, 7278 <__kernel_cos+0x1c0>)
    714e:	e9d3 2300 	ldrd	r2, r3, [r3]
    7152:	f7f9 fb5b 	bl	80c <__adddf3>
    7156:	460b      	mov	r3, r1
    7158:	4602      	mov	r2, r0
    715a:	4639      	mov	r1, r7
    715c:	4630      	mov	r0, r6
    715e:	f7f9 fd07 	bl	b70 <__aeabi_dmul>
    7162:	4b47      	ldr	r3, [pc, #284]	; (7280 <__kernel_cos+0x1c8>)
    7164:	429c      	cmp	r4, r3
    7166:	e9cd 0100 	strd	r0, r1, [sp]
    716a:	d826      	bhi.n	71ba <__kernel_cos+0x102>
    716c:	4630      	mov	r0, r6
    716e:	4639      	mov	r1, r7
    7170:	2200      	movs	r2, #0
    7172:	4b44      	ldr	r3, [pc, #272]	; (7284 <__kernel_cos+0x1cc>)
    7174:	f7f9 fcfc 	bl	b70 <__aeabi_dmul>
    7178:	e9dd 2300 	ldrd	r2, r3, [sp]
    717c:	4604      	mov	r4, r0
    717e:	460d      	mov	r5, r1
    7180:	4630      	mov	r0, r6
    7182:	4639      	mov	r1, r7
    7184:	f7f9 fcf4 	bl	b70 <__aeabi_dmul>
    7188:	4652      	mov	r2, sl
    718a:	4606      	mov	r6, r0
    718c:	460f      	mov	r7, r1
    718e:	465b      	mov	r3, fp
    7190:	4648      	mov	r0, r9
    7192:	4641      	mov	r1, r8
    7194:	f7f9 fcec 	bl	b70 <__aeabi_dmul>
    7198:	4602      	mov	r2, r0
    719a:	460b      	mov	r3, r1
    719c:	4630      	mov	r0, r6
    719e:	4639      	mov	r1, r7
    71a0:	f7f9 fb32 	bl	808 <__aeabi_dsub>
    71a4:	4602      	mov	r2, r0
    71a6:	460b      	mov	r3, r1
    71a8:	4620      	mov	r0, r4
    71aa:	4629      	mov	r1, r5
    71ac:	f7f9 fb2c 	bl	808 <__aeabi_dsub>
    71b0:	4602      	mov	r2, r0
    71b2:	460b      	mov	r3, r1
    71b4:	2000      	movs	r0, #0
    71b6:	4934      	ldr	r1, [pc, #208]	; (7288 <__kernel_cos+0x1d0>)
    71b8:	e040      	b.n	723c <__kernel_cos+0x184>
    71ba:	4834      	ldr	r0, [pc, #208]	; (728c <__kernel_cos+0x1d4>)
    71bc:	4284      	cmp	r4, r0
    71be:	d904      	bls.n	71ca <__kernel_cos+0x112>
    71c0:	4b33      	ldr	r3, [pc, #204]	; (7290 <__kernel_cos+0x1d8>)
    71c2:	2200      	movs	r2, #0
    71c4:	e9cd 2304 	strd	r2, r3, [sp, #16]
    71c8:	e004      	b.n	71d4 <__kernel_cos+0x11c>
    71ca:	f5a4 1100 	sub.w	r1, r4, #2097152	; 0x200000
    71ce:	2200      	movs	r2, #0
    71d0:	9105      	str	r1, [sp, #20]
    71d2:	9204      	str	r2, [sp, #16]
    71d4:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
    71d8:	2000      	movs	r0, #0
    71da:	4622      	mov	r2, r4
    71dc:	462b      	mov	r3, r5
    71de:	492a      	ldr	r1, [pc, #168]	; (7288 <__kernel_cos+0x1d0>)
    71e0:	f7f9 fb12 	bl	808 <__aeabi_dsub>
    71e4:	2200      	movs	r2, #0
    71e6:	e9cd 0102 	strd	r0, r1, [sp, #8]
    71ea:	4b26      	ldr	r3, [pc, #152]	; (7284 <__kernel_cos+0x1cc>)
    71ec:	4630      	mov	r0, r6
    71ee:	4639      	mov	r1, r7
    71f0:	f7f9 fcbe 	bl	b70 <__aeabi_dmul>
    71f4:	4622      	mov	r2, r4
    71f6:	462b      	mov	r3, r5
    71f8:	f7f9 fb06 	bl	808 <__aeabi_dsub>
    71fc:	e9dd 2300 	ldrd	r2, r3, [sp]
    7200:	4604      	mov	r4, r0
    7202:	460d      	mov	r5, r1
    7204:	4630      	mov	r0, r6
    7206:	4639      	mov	r1, r7
    7208:	f7f9 fcb2 	bl	b70 <__aeabi_dmul>
    720c:	4652      	mov	r2, sl
    720e:	4606      	mov	r6, r0
    7210:	460f      	mov	r7, r1
    7212:	465b      	mov	r3, fp
    7214:	4648      	mov	r0, r9
    7216:	4641      	mov	r1, r8
    7218:	f7f9 fcaa 	bl	b70 <__aeabi_dmul>
    721c:	4602      	mov	r2, r0
    721e:	460b      	mov	r3, r1
    7220:	4630      	mov	r0, r6
    7222:	4639      	mov	r1, r7
    7224:	f7f9 faf0 	bl	808 <__aeabi_dsub>
    7228:	4602      	mov	r2, r0
    722a:	460b      	mov	r3, r1
    722c:	4620      	mov	r0, r4
    722e:	4629      	mov	r1, r5
    7230:	f7f9 faea 	bl	808 <__aeabi_dsub>
    7234:	4602      	mov	r2, r0
    7236:	460b      	mov	r3, r1
    7238:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    723c:	f7f9 fae4 	bl	808 <__aeabi_dsub>
    7240:	e001      	b.n	7246 <__kernel_cos+0x18e>
    7242:	4911      	ldr	r1, [pc, #68]	; (7288 <__kernel_cos+0x1d0>)
    7244:	2000      	movs	r0, #0
    7246:	b007      	add	sp, #28
    7248:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    724c:	f3af 8000 	nop.w
    7250:	be8838d4 	.word	0xbe8838d4
    7254:	bda8fae9 	.word	0xbda8fae9
    7258:	bdb4b1c4 	.word	0xbdb4b1c4
    725c:	3e21ee9e 	.word	0x3e21ee9e
    7260:	809c52ad 	.word	0x809c52ad
    7264:	3e927e4f 	.word	0x3e927e4f
    7268:	19cb1590 	.word	0x19cb1590
    726c:	3efa01a0 	.word	0x3efa01a0
    7270:	16c15177 	.word	0x16c15177
    7274:	3f56c16c 	.word	0x3f56c16c
    7278:	5555554c 	.word	0x5555554c
    727c:	3fa55555 	.word	0x3fa55555
    7280:	3fd33332 	.word	0x3fd33332
    7284:	3fe00000 	.word	0x3fe00000
    7288:	3ff00000 	.word	0x3ff00000
    728c:	3fe90000 	.word	0x3fe90000
    7290:	3fd20000 	.word	0x3fd20000
    7294:	f3af 8000 	nop.w

00007298 <__kernel_rem_pio2>:
    7298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    729c:	f5ad 7d1d 	sub.w	sp, sp, #628	; 0x274
    72a0:	1ed7      	subs	r7, r2, #3
    72a2:	930a      	str	r3, [sp, #40]	; 0x28
    72a4:	9ca6      	ldr	r4, [sp, #664]	; 0x298
    72a6:	4bb0      	ldr	r3, [pc, #704]	; (7568 <__kernel_rem_pio2+0x2d0>)
    72a8:	900b      	str	r0, [sp, #44]	; 0x2c
    72aa:	2518      	movs	r5, #24
    72ac:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
    72b0:	9e0a      	ldr	r6, [sp, #40]	; 0x28
    72b2:	9006      	str	r0, [sp, #24]
    72b4:	fb97 f3f5 	sdiv	r3, r7, r5
    72b8:	ea23 77e3 	bic.w	r7, r3, r3, asr #31
    72bc:	ea6f 0807 	mvn.w	r8, r7
    72c0:	fb05 2808 	mla	r8, r5, r8, r2
    72c4:	9ca7      	ldr	r4, [sp, #668]	; 0x29c
    72c6:	9105      	str	r1, [sp, #20]
    72c8:	9a06      	ldr	r2, [sp, #24]
    72ca:	1e71      	subs	r1, r6, #1
    72cc:	1a7e      	subs	r6, r7, r1
    72ce:	eb04 0986 	add.w	r9, r4, r6, lsl #2
    72d2:	9102      	str	r1, [sp, #8]
    72d4:	eb01 0b02 	add.w	fp, r1, r2
    72d8:	ad22      	add	r5, sp, #136	; 0x88
    72da:	2400      	movs	r4, #0
    72dc:	455c      	cmp	r4, fp
    72de:	dc0c      	bgt.n	72fa <__kernel_rem_pio2+0x62>
    72e0:	42f4      	cmn	r4, r6
    72e2:	d404      	bmi.n	72ee <__kernel_rem_pio2+0x56>
    72e4:	f859 0024 	ldr.w	r0, [r9, r4, lsl #2]
    72e8:	f7f9 fbdc 	bl	aa4 <__aeabi_i2d>
    72ec:	e001      	b.n	72f2 <__kernel_rem_pio2+0x5a>
    72ee:	2000      	movs	r0, #0
    72f0:	2100      	movs	r1, #0
    72f2:	e9e5 0102 	strd	r0, r1, [r5, #8]!
    72f6:	3401      	adds	r4, #1
    72f8:	e7f0      	b.n	72dc <__kernel_rem_pio2+0x44>
    72fa:	f50d 7ce4 	add.w	ip, sp, #456	; 0x1c8
    72fe:	2600      	movs	r6, #0
    7300:	9806      	ldr	r0, [sp, #24]
    7302:	4286      	cmp	r6, r0
    7304:	dc27      	bgt.n	7356 <__kernel_rem_pio2+0xbe>
    7306:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    7308:	980b      	ldr	r0, [sp, #44]	; 0x2c
    730a:	1931      	adds	r1, r6, r4
    730c:	aa24      	add	r2, sp, #144	; 0x90
    730e:	f1a0 0b08 	sub.w	fp, r0, #8
    7312:	eb02 0ac1 	add.w	sl, r2, r1, lsl #3
    7316:	2400      	movs	r4, #0
    7318:	2500      	movs	r5, #0
    731a:	f04f 0900 	mov.w	r9, #0
    731e:	9b02      	ldr	r3, [sp, #8]
    7320:	4599      	cmp	r9, r3
    7322:	dc14      	bgt.n	734e <__kernel_rem_pio2+0xb6>
    7324:	e9fb 2302 	ldrd	r2, r3, [fp, #8]!
    7328:	e97a 0102 	ldrd	r0, r1, [sl, #-8]!
    732c:	f8cd c004 	str.w	ip, [sp, #4]
    7330:	f7f9 fc1e 	bl	b70 <__aeabi_dmul>
    7334:	4602      	mov	r2, r0
    7336:	460b      	mov	r3, r1
    7338:	4620      	mov	r0, r4
    733a:	4629      	mov	r1, r5
    733c:	f7f9 fa66 	bl	80c <__adddf3>
    7340:	f109 0901 	add.w	r9, r9, #1
    7344:	4604      	mov	r4, r0
    7346:	460d      	mov	r5, r1
    7348:	f8dd c004 	ldr.w	ip, [sp, #4]
    734c:	e7e7      	b.n	731e <__kernel_rem_pio2+0x86>
    734e:	e9ec 4502 	strd	r4, r5, [ip, #8]!
    7352:	3601      	adds	r6, #1
    7354:	e7d4      	b.n	7300 <__kernel_rem_pio2+0x68>
    7356:	9906      	ldr	r1, [sp, #24]
    7358:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
    735a:	f8dd b018 	ldr.w	fp, [sp, #24]
    735e:	ae10      	add	r6, sp, #64	; 0x40
    7360:	eb06 0581 	add.w	r5, r6, r1, lsl #2
    7364:	eb03 0787 	add.w	r7, r3, r7, lsl #2
    7368:	950c      	str	r5, [sp, #48]	; 0x30
    736a:	970e      	str	r7, [sp, #56]	; 0x38
    736c:	ea4f 09cb 	mov.w	r9, fp, lsl #3
    7370:	aa9c      	add	r2, sp, #624	; 0x270
    7372:	eb02 0409 	add.w	r4, r2, r9
    7376:	e954 4528 	ldrd	r4, r5, [r4, #-160]	; 0xa0
    737a:	a874      	add	r0, sp, #464	; 0x1d0
    737c:	4481      	add	r9, r0
    737e:	f04f 0a00 	mov.w	sl, #0
    7382:	ebca 060b 	rsb	r6, sl, fp
    7386:	2e00      	cmp	r6, #0
    7388:	4620      	mov	r0, r4
    738a:	4629      	mov	r1, r5
    738c:	dd23      	ble.n	73d6 <__kernel_rem_pio2+0x13e>
    738e:	2200      	movs	r2, #0
    7390:	4b76      	ldr	r3, [pc, #472]	; (756c <__kernel_rem_pio2+0x2d4>)
    7392:	f7f9 fbed 	bl	b70 <__aeabi_dmul>
    7396:	f7f9 fe85 	bl	10a4 <__aeabi_d2iz>
    739a:	f7f9 fb83 	bl	aa4 <__aeabi_i2d>
    739e:	2200      	movs	r2, #0
    73a0:	4b73      	ldr	r3, [pc, #460]	; (7570 <__kernel_rem_pio2+0x2d8>)
    73a2:	4606      	mov	r6, r0
    73a4:	460f      	mov	r7, r1
    73a6:	f7f9 fbe3 	bl	b70 <__aeabi_dmul>
    73aa:	4602      	mov	r2, r0
    73ac:	460b      	mov	r3, r1
    73ae:	4620      	mov	r0, r4
    73b0:	4629      	mov	r1, r5
    73b2:	f7f9 fa29 	bl	808 <__aeabi_dsub>
    73b6:	f7f9 fe75 	bl	10a4 <__aeabi_d2iz>
    73ba:	ad10      	add	r5, sp, #64	; 0x40
    73bc:	4632      	mov	r2, r6
    73be:	f845 002a 	str.w	r0, [r5, sl, lsl #2]
    73c2:	463b      	mov	r3, r7
    73c4:	e979 0102 	ldrd	r0, r1, [r9, #-8]!
    73c8:	f7f9 fa20 	bl	80c <__adddf3>
    73cc:	f10a 0a01 	add.w	sl, sl, #1
    73d0:	4604      	mov	r4, r0
    73d2:	460d      	mov	r5, r1
    73d4:	e7d5      	b.n	7382 <__kernel_rem_pio2+0xea>
    73d6:	4642      	mov	r2, r8
    73d8:	f000 fbf6 	bl	7bc8 <scalbn>
    73dc:	2200      	movs	r2, #0
    73de:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
    73e2:	460d      	mov	r5, r1
    73e4:	4607      	mov	r7, r0
    73e6:	f7f9 fbc3 	bl	b70 <__aeabi_dmul>
    73ea:	f000 fb69 	bl	7ac0 <floor>
    73ee:	2200      	movs	r2, #0
    73f0:	4b60      	ldr	r3, [pc, #384]	; (7574 <__kernel_rem_pio2+0x2dc>)
    73f2:	f7f9 fbbd 	bl	b70 <__aeabi_dmul>
    73f6:	4602      	mov	r2, r0
    73f8:	460b      	mov	r3, r1
    73fa:	4638      	mov	r0, r7
    73fc:	4629      	mov	r1, r5
    73fe:	f7f9 fa03 	bl	808 <__aeabi_dsub>
    7402:	4604      	mov	r4, r0
    7404:	460e      	mov	r6, r1
    7406:	f7f9 fe4d 	bl	10a4 <__aeabi_d2iz>
    740a:	9008      	str	r0, [sp, #32]
    740c:	f7f9 fb4a 	bl	aa4 <__aeabi_i2d>
    7410:	4602      	mov	r2, r0
    7412:	460b      	mov	r3, r1
    7414:	4620      	mov	r0, r4
    7416:	4631      	mov	r1, r6
    7418:	f7f9 f9f6 	bl	808 <__aeabi_dsub>
    741c:	f1b8 0f00 	cmp.w	r8, #0
    7420:	4604      	mov	r4, r0
    7422:	460d      	mov	r5, r1
    7424:	dd16      	ble.n	7454 <__kernel_rem_pio2+0x1bc>
    7426:	f10b 37ff 	add.w	r7, fp, #4294967295
    742a:	a810      	add	r0, sp, #64	; 0x40
    742c:	f1c8 0318 	rsb	r3, r8, #24
    7430:	f850 1027 	ldr.w	r1, [r0, r7, lsl #2]
    7434:	9e08      	ldr	r6, [sp, #32]
    7436:	fa41 f203 	asr.w	r2, r1, r3
    743a:	18b0      	adds	r0, r6, r2
    743c:	fa02 f303 	lsl.w	r3, r2, r3
    7440:	aa10      	add	r2, sp, #64	; 0x40
    7442:	1ac9      	subs	r1, r1, r3
    7444:	f842 1027 	str.w	r1, [r2, r7, lsl #2]
    7448:	f1c8 0717 	rsb	r7, r8, #23
    744c:	9008      	str	r0, [sp, #32]
    744e:	fa41 fa07 	asr.w	sl, r1, r7
    7452:	e010      	b.n	7476 <__kernel_rem_pio2+0x1de>
    7454:	d107      	bne.n	7466 <__kernel_rem_pio2+0x1ce>
    7456:	f10b 33ff 	add.w	r3, fp, #4294967295
    745a:	a910      	add	r1, sp, #64	; 0x40
    745c:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
    7460:	ea4f 5ae2 	mov.w	sl, r2, asr #23
    7464:	e007      	b.n	7476 <__kernel_rem_pio2+0x1de>
    7466:	2200      	movs	r2, #0
    7468:	4b43      	ldr	r3, [pc, #268]	; (7578 <__kernel_rem_pio2+0x2e0>)
    746a:	f7f9 fe07 	bl	107c <__aeabi_dcmpge>
    746e:	b930      	cbnz	r0, 747e <__kernel_rem_pio2+0x1e6>
    7470:	f04f 0a00 	mov.w	sl, #0
    7474:	e056      	b.n	7524 <__kernel_rem_pio2+0x28c>
    7476:	f1ba 0f00 	cmp.w	sl, #0
    747a:	dc02      	bgt.n	7482 <__kernel_rem_pio2+0x1ea>
    747c:	e052      	b.n	7524 <__kernel_rem_pio2+0x28c>
    747e:	f04f 0a02 	mov.w	sl, #2
    7482:	9e08      	ldr	r6, [sp, #32]
    7484:	2300      	movs	r3, #0
    7486:	1c70      	adds	r0, r6, #1
    7488:	9008      	str	r0, [sp, #32]
    748a:	af10      	add	r7, sp, #64	; 0x40
    748c:	461e      	mov	r6, r3
    748e:	455b      	cmp	r3, fp
    7490:	da0f      	bge.n	74b2 <__kernel_rem_pio2+0x21a>
    7492:	f857 1b04 	ldr.w	r1, [r7], #4
    7496:	b91e      	cbnz	r6, 74a0 <__kernel_rem_pio2+0x208>
    7498:	b149      	cbz	r1, 74ae <__kernel_rem_pio2+0x216>
    749a:	f1c1 7280 	rsb	r2, r1, #16777216	; 0x1000000
    749e:	e003      	b.n	74a8 <__kernel_rem_pio2+0x210>
    74a0:	f1c1 16ff 	rsb	r6, r1, #16711935	; 0xff00ff
    74a4:	f506 427f 	add.w	r2, r6, #65280	; 0xff00
    74a8:	f847 2c04 	str.w	r2, [r7, #-4]
    74ac:	2601      	movs	r6, #1
    74ae:	3301      	adds	r3, #1
    74b0:	e7ed      	b.n	748e <__kernel_rem_pio2+0x1f6>
    74b2:	f1b8 0f00 	cmp.w	r8, #0
    74b6:	dd1c      	ble.n	74f2 <__kernel_rem_pio2+0x25a>
    74b8:	f1b8 0f01 	cmp.w	r8, #1
    74bc:	d00e      	beq.n	74dc <__kernel_rem_pio2+0x244>
    74be:	f1b8 0f02 	cmp.w	r8, #2
    74c2:	d116      	bne.n	74f2 <__kernel_rem_pio2+0x25a>
    74c4:	f10b 33ff 	add.w	r3, fp, #4294967295
    74c8:	a910      	add	r1, sp, #64	; 0x40
    74ca:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
    74ce:	f022 477f 	bic.w	r7, r2, #4278190080	; 0xff000000
    74d2:	f427 0040 	bic.w	r0, r7, #12582912	; 0xc00000
    74d6:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
    74da:	e00a      	b.n	74f2 <__kernel_rem_pio2+0x25a>
    74dc:	f10b 33ff 	add.w	r3, fp, #4294967295
    74e0:	a910      	add	r1, sp, #64	; 0x40
    74e2:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
    74e6:	f022 477f 	bic.w	r7, r2, #4278190080	; 0xff000000
    74ea:	f427 0000 	bic.w	r0, r7, #8388608	; 0x800000
    74ee:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
    74f2:	f1ba 0f02 	cmp.w	sl, #2
    74f6:	d115      	bne.n	7524 <__kernel_rem_pio2+0x28c>
    74f8:	4622      	mov	r2, r4
    74fa:	462b      	mov	r3, r5
    74fc:	2000      	movs	r0, #0
    74fe:	491f      	ldr	r1, [pc, #124]	; (757c <__kernel_rem_pio2+0x2e4>)
    7500:	f7f9 f982 	bl	808 <__aeabi_dsub>
    7504:	4604      	mov	r4, r0
    7506:	460d      	mov	r5, r1
    7508:	b166      	cbz	r6, 7524 <__kernel_rem_pio2+0x28c>
    750a:	4642      	mov	r2, r8
    750c:	2000      	movs	r0, #0
    750e:	491b      	ldr	r1, [pc, #108]	; (757c <__kernel_rem_pio2+0x2e4>)
    7510:	f000 fb5a 	bl	7bc8 <scalbn>
    7514:	4602      	mov	r2, r0
    7516:	460b      	mov	r3, r1
    7518:	4620      	mov	r0, r4
    751a:	4629      	mov	r1, r5
    751c:	f7f9 f974 	bl	808 <__aeabi_dsub>
    7520:	4604      	mov	r4, r0
    7522:	460d      	mov	r5, r1
    7524:	4620      	mov	r0, r4
    7526:	4629      	mov	r1, r5
    7528:	2200      	movs	r2, #0
    752a:	2300      	movs	r3, #0
    752c:	f7f9 fd88 	bl	1040 <__aeabi_dcmpeq>
    7530:	2800      	cmp	r0, #0
    7532:	d069      	beq.n	7608 <__kernel_rem_pio2+0x370>
    7534:	f10b 31ff 	add.w	r1, fp, #4294967295
    7538:	465d      	mov	r5, fp
    753a:	2200      	movs	r2, #0
    753c:	9806      	ldr	r0, [sp, #24]
    753e:	3d01      	subs	r5, #1
    7540:	4285      	cmp	r5, r0
    7542:	db04      	blt.n	754e <__kernel_rem_pio2+0x2b6>
    7544:	a810      	add	r0, sp, #64	; 0x40
    7546:	f850 4025 	ldr.w	r4, [r0, r5, lsl #2]
    754a:	4322      	orrs	r2, r4
    754c:	e7f6      	b.n	753c <__kernel_rem_pio2+0x2a4>
    754e:	2a00      	cmp	r2, #0
    7550:	f040 81e8 	bne.w	7924 <__kernel_rem_pio2+0x68c>
    7554:	2501      	movs	r5, #1
    7556:	f06f 0003 	mvn.w	r0, #3
    755a:	4368      	muls	r0, r5
    755c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    755e:	581f      	ldr	r7, [r3, r0]
    7560:	b977      	cbnz	r7, 7580 <__kernel_rem_pio2+0x2e8>
    7562:	3501      	adds	r5, #1
    7564:	e7f7      	b.n	7556 <__kernel_rem_pio2+0x2be>
    7566:	bf00      	nop
    7568:	0000c608 	.word	0x0000c608
    756c:	3e700000 	.word	0x3e700000
    7570:	41700000 	.word	0x41700000
    7574:	40200000 	.word	0x40200000
    7578:	3fe00000 	.word	0x3fe00000
    757c:	3ff00000 	.word	0x3ff00000
    7580:	990a      	ldr	r1, [sp, #40]	; 0x28
    7582:	ae24      	add	r6, sp, #144	; 0x90
    7584:	eb0b 0201 	add.w	r2, fp, r1
    7588:	ab74      	add	r3, sp, #464	; 0x1d0
    758a:	eb06 00c2 	add.w	r0, r6, r2, lsl #3
    758e:	eb03 07cb 	add.w	r7, r3, fp, lsl #3
    7592:	f10b 0401 	add.w	r4, fp, #1
    7596:	900f      	str	r0, [sp, #60]	; 0x3c
    7598:	970d      	str	r7, [sp, #52]	; 0x34
    759a:	2600      	movs	r6, #0
    759c:	eb0b 0105 	add.w	r1, fp, r5
    75a0:	428c      	cmp	r4, r1
    75a2:	dc2f      	bgt.n	7604 <__kernel_rem_pio2+0x36c>
    75a4:	980e      	ldr	r0, [sp, #56]	; 0x38
    75a6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    75a8:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
    75ac:	eb02 0906 	add.w	r9, r2, r6
    75b0:	f7f9 fa78 	bl	aa4 <__aeabi_i2d>
    75b4:	e9c9 0100 	strd	r0, r1, [r9]
    75b8:	2000      	movs	r0, #0
    75ba:	2100      	movs	r1, #0
    75bc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    75be:	e9cd 0108 	strd	r0, r1, [sp, #32]
    75c2:	f1a3 0a08 	sub.w	sl, r3, #8
    75c6:	2700      	movs	r7, #0
    75c8:	9902      	ldr	r1, [sp, #8]
    75ca:	428f      	cmp	r7, r1
    75cc:	dc11      	bgt.n	75f2 <__kernel_rem_pio2+0x35a>
    75ce:	eba9 03c7 	sub.w	r3, r9, r7, lsl #3
    75d2:	e9d3 2300 	ldrd	r2, r3, [r3]
    75d6:	e9fa 0102 	ldrd	r0, r1, [sl, #8]!
    75da:	f7f9 fac9 	bl	b70 <__aeabi_dmul>
    75de:	4602      	mov	r2, r0
    75e0:	460b      	mov	r3, r1
    75e2:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
    75e6:	f7f9 f911 	bl	80c <__adddf3>
    75ea:	3701      	adds	r7, #1
    75ec:	e9cd 0108 	strd	r0, r1, [sp, #32]
    75f0:	e7ea      	b.n	75c8 <__kernel_rem_pio2+0x330>
    75f2:	9f0d      	ldr	r7, [sp, #52]	; 0x34
    75f4:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
    75f8:	19ba      	adds	r2, r7, r6
    75fa:	e9c2 0102 	strd	r0, r1, [r2, #8]
    75fe:	3401      	adds	r4, #1
    7600:	3608      	adds	r6, #8
    7602:	e7cb      	b.n	759c <__kernel_rem_pio2+0x304>
    7604:	468b      	mov	fp, r1
    7606:	e6b1      	b.n	736c <__kernel_rem_pio2+0xd4>
    7608:	4620      	mov	r0, r4
    760a:	4629      	mov	r1, r5
    760c:	f1c8 0200 	rsb	r2, r8, #0
    7610:	f000 fada 	bl	7bc8 <scalbn>
    7614:	2200      	movs	r2, #0
    7616:	4b8f      	ldr	r3, [pc, #572]	; (7854 <__kernel_rem_pio2+0x5bc>)
    7618:	4604      	mov	r4, r0
    761a:	460d      	mov	r5, r1
    761c:	f7f9 fd2e 	bl	107c <__aeabi_dcmpge>
    7620:	b330      	cbz	r0, 7670 <__kernel_rem_pio2+0x3d8>
    7622:	2200      	movs	r2, #0
    7624:	4b8c      	ldr	r3, [pc, #560]	; (7858 <__kernel_rem_pio2+0x5c0>)
    7626:	4620      	mov	r0, r4
    7628:	4629      	mov	r1, r5
    762a:	f7f9 faa1 	bl	b70 <__aeabi_dmul>
    762e:	f7f9 fd39 	bl	10a4 <__aeabi_d2iz>
    7632:	f7f9 fa37 	bl	aa4 <__aeabi_i2d>
    7636:	2200      	movs	r2, #0
    7638:	4b86      	ldr	r3, [pc, #536]	; (7854 <__kernel_rem_pio2+0x5bc>)
    763a:	4606      	mov	r6, r0
    763c:	460f      	mov	r7, r1
    763e:	f7f9 fa97 	bl	b70 <__aeabi_dmul>
    7642:	4602      	mov	r2, r0
    7644:	460b      	mov	r3, r1
    7646:	4620      	mov	r0, r4
    7648:	4629      	mov	r1, r5
    764a:	f7f9 f8dd 	bl	808 <__aeabi_dsub>
    764e:	f7f9 fd29 	bl	10a4 <__aeabi_d2iz>
    7652:	ab10      	add	r3, sp, #64	; 0x40
    7654:	4639      	mov	r1, r7
    7656:	f843 002b 	str.w	r0, [r3, fp, lsl #2]
    765a:	4630      	mov	r0, r6
    765c:	f7f9 fd22 	bl	10a4 <__aeabi_d2iz>
    7660:	f10b 0b01 	add.w	fp, fp, #1
    7664:	a910      	add	r1, sp, #64	; 0x40
    7666:	f108 0818 	add.w	r8, r8, #24
    766a:	f841 002b 	str.w	r0, [r1, fp, lsl #2]
    766e:	e006      	b.n	767e <__kernel_rem_pio2+0x3e6>
    7670:	4620      	mov	r0, r4
    7672:	4629      	mov	r1, r5
    7674:	f7f9 fd16 	bl	10a4 <__aeabi_d2iz>
    7678:	ae10      	add	r6, sp, #64	; 0x40
    767a:	f846 002b 	str.w	r0, [r6, fp, lsl #2]
    767e:	4642      	mov	r2, r8
    7680:	2000      	movs	r0, #0
    7682:	4976      	ldr	r1, [pc, #472]	; (785c <__kernel_rem_pio2+0x5c4>)
    7684:	f000 faa0 	bl	7bc8 <scalbn>
    7688:	ae10      	add	r6, sp, #64	; 0x40
    768a:	ea4f 09cb 	mov.w	r9, fp, lsl #3
    768e:	ab74      	add	r3, sp, #464	; 0x1d0
    7690:	eb06 078b 	add.w	r7, r6, fp, lsl #2
    7694:	4604      	mov	r4, r0
    7696:	460d      	mov	r5, r1
    7698:	eb03 0809 	add.w	r8, r3, r9
    769c:	2600      	movs	r6, #0
    769e:	eb16 0f0b 	cmn.w	r6, fp
    76a2:	d419      	bmi.n	76d8 <__kernel_rem_pio2+0x440>
    76a4:	eb08 01c6 	add.w	r1, r8, r6, lsl #3
    76a8:	f857 0026 	ldr.w	r0, [r7, r6, lsl #2]
    76ac:	9102      	str	r1, [sp, #8]
    76ae:	f7f9 f9f9 	bl	aa4 <__aeabi_i2d>
    76b2:	4602      	mov	r2, r0
    76b4:	460b      	mov	r3, r1
    76b6:	4620      	mov	r0, r4
    76b8:	4629      	mov	r1, r5
    76ba:	f7f9 fa59 	bl	b70 <__aeabi_dmul>
    76be:	9a02      	ldr	r2, [sp, #8]
    76c0:	4b65      	ldr	r3, [pc, #404]	; (7858 <__kernel_rem_pio2+0x5c0>)
    76c2:	e9c2 0100 	strd	r0, r1, [r2]
    76c6:	4620      	mov	r0, r4
    76c8:	4629      	mov	r1, r5
    76ca:	2200      	movs	r2, #0
    76cc:	f7f9 fa50 	bl	b70 <__aeabi_dmul>
    76d0:	3e01      	subs	r6, #1
    76d2:	4604      	mov	r4, r0
    76d4:	460d      	mov	r5, r1
    76d6:	e7e2      	b.n	769e <__kernel_rem_pio2+0x406>
    76d8:	a974      	add	r1, sp, #464	; 0x1d0
    76da:	af4a      	add	r7, sp, #296	; 0x128
    76dc:	4489      	add	r9, r1
    76de:	2500      	movs	r5, #0
    76e0:	ebc5 000b 	rsb	r0, r5, fp
    76e4:	2800      	cmp	r0, #0
    76e6:	db26      	blt.n	7736 <__kernel_rem_pio2+0x49e>
    76e8:	2000      	movs	r0, #0
    76ea:	2100      	movs	r1, #0
    76ec:	e9cd 0102 	strd	r0, r1, [sp, #8]
    76f0:	ea4f 0cc5 	mov.w	ip, r5, lsl #3
    76f4:	4e5a      	ldr	r6, [pc, #360]	; (7860 <__kernel_rem_pio2+0x5c8>)
    76f6:	ebcc 0809 	rsb	r8, ip, r9
    76fa:	2400      	movs	r4, #0
    76fc:	9a06      	ldr	r2, [sp, #24]
    76fe:	4294      	cmp	r4, r2
    7700:	dd05      	ble.n	770e <__kernel_rem_pio2+0x476>
    7702:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    7706:	3501      	adds	r5, #1
    7708:	e9e7 0102 	strd	r0, r1, [r7, #8]!
    770c:	e7e8      	b.n	76e0 <__kernel_rem_pio2+0x448>
    770e:	42ac      	cmp	r4, r5
    7710:	dcf7      	bgt.n	7702 <__kernel_rem_pio2+0x46a>
    7712:	eb08 03c4 	add.w	r3, r8, r4, lsl #3
    7716:	e9d3 2300 	ldrd	r2, r3, [r3]
    771a:	e9f6 0102 	ldrd	r0, r1, [r6, #8]!
    771e:	f7f9 fa27 	bl	b70 <__aeabi_dmul>
    7722:	4602      	mov	r2, r0
    7724:	460b      	mov	r3, r1
    7726:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    772a:	f7f9 f86f 	bl	80c <__adddf3>
    772e:	3401      	adds	r4, #1
    7730:	e9cd 0102 	strd	r0, r1, [sp, #8]
    7734:	e7e2      	b.n	76fc <__kernel_rem_pio2+0x464>
    7736:	9aa6      	ldr	r2, [sp, #664]	; 0x298
    7738:	2a03      	cmp	r2, #3
    773a:	f200 80ec 	bhi.w	7916 <__kernel_rem_pio2+0x67e>
    773e:	e8df f002 	tbb	[pc, r2]
    7742:	0206      	.short	0x0206
    7744:	0a02      	.short	0x0a02
    7746:	2400      	movs	r4, #0
    7748:	465d      	mov	r5, fp
    774a:	4621      	mov	r1, r4
    774c:	e023      	b.n	7796 <__kernel_rem_pio2+0x4fe>
    774e:	2600      	movs	r6, #0
    7750:	465d      	mov	r5, fp
    7752:	4634      	mov	r4, r6
    7754:	e005      	b.n	7762 <__kernel_rem_pio2+0x4ca>
    7756:	ad4c      	add	r5, sp, #304	; 0x130
    7758:	eb05 04cb 	add.w	r4, r5, fp, lsl #3
    775c:	4626      	mov	r6, r4
    775e:	465d      	mov	r5, fp
    7760:	e055      	b.n	780e <__kernel_rem_pio2+0x576>
    7762:	2d00      	cmp	r5, #0
    7764:	db0c      	blt.n	7780 <__kernel_rem_pio2+0x4e8>
    7766:	a94c      	add	r1, sp, #304	; 0x130
    7768:	eb01 03c5 	add.w	r3, r1, r5, lsl #3
    776c:	4630      	mov	r0, r6
    776e:	4621      	mov	r1, r4
    7770:	e9d3 2300 	ldrd	r2, r3, [r3]
    7774:	f7f9 f84a 	bl	80c <__adddf3>
    7778:	3d01      	subs	r5, #1
    777a:	4606      	mov	r6, r0
    777c:	460c      	mov	r4, r1
    777e:	e7f0      	b.n	7762 <__kernel_rem_pio2+0x4ca>
    7780:	f1ba 0f00 	cmp.w	sl, #0
    7784:	d001      	beq.n	778a <__kernel_rem_pio2+0x4f2>
    7786:	f104 4400 	add.w	r4, r4, #2147483648	; 0x80000000
    778a:	9805      	ldr	r0, [sp, #20]
    778c:	4632      	mov	r2, r6
    778e:	4623      	mov	r3, r4
    7790:	e9c0 2300 	strd	r2, r3, [r0]
    7794:	e0bf      	b.n	7916 <__kernel_rem_pio2+0x67e>
    7796:	2d00      	cmp	r5, #0
    7798:	db0a      	blt.n	77b0 <__kernel_rem_pio2+0x518>
    779a:	ae4c      	add	r6, sp, #304	; 0x130
    779c:	eb06 02c5 	add.w	r2, r6, r5, lsl #3
    77a0:	4620      	mov	r0, r4
    77a2:	e9d2 2300 	ldrd	r2, r3, [r2]
    77a6:	f7f9 f831 	bl	80c <__adddf3>
    77aa:	3d01      	subs	r5, #1
    77ac:	4604      	mov	r4, r0
    77ae:	e7f2      	b.n	7796 <__kernel_rem_pio2+0x4fe>
    77b0:	460d      	mov	r5, r1
    77b2:	f1ba 0f00 	cmp.w	sl, #0
    77b6:	d001      	beq.n	77bc <__kernel_rem_pio2+0x524>
    77b8:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
    77bc:	9805      	ldr	r0, [sp, #20]
    77be:	4622      	mov	r2, r4
    77c0:	460b      	mov	r3, r1
    77c2:	e9c0 2300 	strd	r2, r3, [r0]
    77c6:	ab4c      	add	r3, sp, #304	; 0x130
    77c8:	e9d3 0100 	ldrd	r0, r1, [r3]
    77cc:	4622      	mov	r2, r4
    77ce:	462b      	mov	r3, r5
    77d0:	f7f9 f81a 	bl	808 <__aeabi_dsub>
    77d4:	2501      	movs	r5, #1
    77d6:	4606      	mov	r6, r0
    77d8:	460c      	mov	r4, r1
    77da:	455d      	cmp	r5, fp
    77dc:	dc0c      	bgt.n	77f8 <__kernel_rem_pio2+0x560>
    77de:	aa4c      	add	r2, sp, #304	; 0x130
    77e0:	eb02 03c5 	add.w	r3, r2, r5, lsl #3
    77e4:	4630      	mov	r0, r6
    77e6:	4621      	mov	r1, r4
    77e8:	e9d3 2300 	ldrd	r2, r3, [r3]
    77ec:	f7f9 f80e 	bl	80c <__adddf3>
    77f0:	3501      	adds	r5, #1
    77f2:	4606      	mov	r6, r0
    77f4:	460c      	mov	r4, r1
    77f6:	e7f0      	b.n	77da <__kernel_rem_pio2+0x542>
    77f8:	f1ba 0f00 	cmp.w	sl, #0
    77fc:	d001      	beq.n	7802 <__kernel_rem_pio2+0x56a>
    77fe:	f104 4400 	add.w	r4, r4, #2147483648	; 0x80000000
    7802:	9905      	ldr	r1, [sp, #20]
    7804:	4632      	mov	r2, r6
    7806:	4623      	mov	r3, r4
    7808:	e9c1 2302 	strd	r2, r3, [r1, #8]
    780c:	e083      	b.n	7916 <__kernel_rem_pio2+0x67e>
    780e:	2d00      	cmp	r5, #0
    7810:	dd28      	ble.n	7864 <__kernel_rem_pio2+0x5cc>
    7812:	e9d6 8900 	ldrd	r8, r9, [r6]
    7816:	e956 0102 	ldrd	r0, r1, [r6, #-8]
    781a:	4642      	mov	r2, r8
    781c:	464b      	mov	r3, r9
    781e:	e9cd 0106 	strd	r0, r1, [sp, #24]
    7822:	f7f8 fff3 	bl	80c <__adddf3>
    7826:	e9cd 0102 	strd	r0, r1, [sp, #8]
    782a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    782e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
    7832:	f7f8 ffe9 	bl	808 <__aeabi_dsub>
    7836:	4602      	mov	r2, r0
    7838:	460b      	mov	r3, r1
    783a:	4640      	mov	r0, r8
    783c:	4649      	mov	r1, r9
    783e:	f7f8 ffe5 	bl	80c <__adddf3>
    7842:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    7846:	e9c6 0100 	strd	r0, r1, [r6]
    784a:	3d01      	subs	r5, #1
    784c:	e966 2302 	strd	r2, r3, [r6, #-8]!
    7850:	e7dd      	b.n	780e <__kernel_rem_pio2+0x576>
    7852:	bf00      	nop
    7854:	41700000 	.word	0x41700000
    7858:	3e700000 	.word	0x3e700000
    785c:	3ff00000 	.word	0x3ff00000
    7860:	0000c610 	.word	0x0000c610
    7864:	465d      	mov	r5, fp
    7866:	2d01      	cmp	r5, #1
    7868:	dd1f      	ble.n	78aa <__kernel_rem_pio2+0x612>
    786a:	e9d4 6700 	ldrd	r6, r7, [r4]
    786e:	e954 8902 	ldrd	r8, r9, [r4, #-8]
    7872:	4632      	mov	r2, r6
    7874:	463b      	mov	r3, r7
    7876:	4640      	mov	r0, r8
    7878:	4649      	mov	r1, r9
    787a:	f7f8 ffc7 	bl	80c <__adddf3>
    787e:	e9cd 0106 	strd	r0, r1, [sp, #24]
    7882:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    7886:	4640      	mov	r0, r8
    7888:	4649      	mov	r1, r9
    788a:	f7f8 ffbd 	bl	808 <__aeabi_dsub>
    788e:	4602      	mov	r2, r0
    7890:	460b      	mov	r3, r1
    7892:	4630      	mov	r0, r6
    7894:	4639      	mov	r1, r7
    7896:	f7f8 ffb9 	bl	80c <__adddf3>
    789a:	e9c4 0100 	strd	r0, r1, [r4]
    789e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
    78a2:	3d01      	subs	r5, #1
    78a4:	e964 0102 	strd	r0, r1, [r4, #-8]!
    78a8:	e7dd      	b.n	7866 <__kernel_rem_pio2+0x5ce>
    78aa:	2400      	movs	r4, #0
    78ac:	465e      	mov	r6, fp
    78ae:	4625      	mov	r5, r4
    78b0:	2e01      	cmp	r6, #1
    78b2:	dd0c      	ble.n	78ce <__kernel_rem_pio2+0x636>
    78b4:	ab4c      	add	r3, sp, #304	; 0x130
    78b6:	eb03 02c6 	add.w	r2, r3, r6, lsl #3
    78ba:	4620      	mov	r0, r4
    78bc:	4629      	mov	r1, r5
    78be:	e9d2 2300 	ldrd	r2, r3, [r2]
    78c2:	f7f8 ffa3 	bl	80c <__adddf3>
    78c6:	3e01      	subs	r6, #1
    78c8:	4604      	mov	r4, r0
    78ca:	460d      	mov	r5, r1
    78cc:	e7f0      	b.n	78b0 <__kernel_rem_pio2+0x618>
    78ce:	f1ba 0f00 	cmp.w	sl, #0
    78d2:	d10f      	bne.n	78f4 <__kernel_rem_pio2+0x65c>
    78d4:	ae4c      	add	r6, sp, #304	; 0x130
    78d6:	e9d6 0100 	ldrd	r0, r1, [r6]
    78da:	9e05      	ldr	r6, [sp, #20]
    78dc:	aa4e      	add	r2, sp, #312	; 0x138
    78de:	e9c6 0100 	strd	r0, r1, [r6]
    78e2:	e9d2 0100 	ldrd	r0, r1, [r2]
    78e6:	462b      	mov	r3, r5
    78e8:	4622      	mov	r2, r4
    78ea:	e9c6 0102 	strd	r0, r1, [r6, #8]
    78ee:	e9c6 2304 	strd	r2, r3, [r6, #16]
    78f2:	e010      	b.n	7916 <__kernel_rem_pio2+0x67e>
    78f4:	9e05      	ldr	r6, [sp, #20]
    78f6:	9b4c      	ldr	r3, [sp, #304]	; 0x130
    78f8:	994d      	ldr	r1, [sp, #308]	; 0x134
    78fa:	6033      	str	r3, [r6, #0]
    78fc:	9b4f      	ldr	r3, [sp, #316]	; 0x13c
    78fe:	9a4e      	ldr	r2, [sp, #312]	; 0x138
    7900:	6134      	str	r4, [r6, #16]
    7902:	f101 4000 	add.w	r0, r1, #2147483648	; 0x80000000
    7906:	f105 4500 	add.w	r5, r5, #2147483648	; 0x80000000
    790a:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
    790e:	6070      	str	r0, [r6, #4]
    7910:	60b2      	str	r2, [r6, #8]
    7912:	60f1      	str	r1, [r6, #12]
    7914:	6175      	str	r5, [r6, #20]
    7916:	9c08      	ldr	r4, [sp, #32]
    7918:	f004 0007 	and.w	r0, r4, #7
    791c:	f50d 7d1d 	add.w	sp, sp, #628	; 0x274
    7920:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7924:	f1a8 0818 	sub.w	r8, r8, #24
    7928:	468b      	mov	fp, r1
    792a:	aa10      	add	r2, sp, #64	; 0x40
    792c:	f852 402b 	ldr.w	r4, [r2, fp, lsl #2]
    7930:	2c00      	cmp	r4, #0
    7932:	f47f aea4 	bne.w	767e <__kernel_rem_pio2+0x3e6>
    7936:	f10b 3bff 	add.w	fp, fp, #4294967295
    793a:	f1a8 0818 	sub.w	r8, r8, #24
    793e:	e7f4      	b.n	792a <__kernel_rem_pio2+0x692>

00007940 <__kernel_sin>:
    7940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7944:	b085      	sub	sp, #20
    7946:	e9cd 2300 	strd	r2, r3, [sp]
    794a:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
    794e:	f1b2 5f79 	cmp.w	r2, #1044381696	; 0x3e400000
    7952:	4681      	mov	r9, r0
    7954:	4688      	mov	r8, r1
    7956:	d204      	bcs.n	7962 <__kernel_sin+0x22>
    7958:	f7f9 fba4 	bl	10a4 <__aeabi_d2iz>
    795c:	2800      	cmp	r0, #0
    795e:	f000 808c 	beq.w	7a7a <__kernel_sin+0x13a>
    7962:	464a      	mov	r2, r9
    7964:	4643      	mov	r3, r8
    7966:	4648      	mov	r0, r9
    7968:	4641      	mov	r1, r8
    796a:	f7f9 f901 	bl	b70 <__aeabi_dmul>
    796e:	464a      	mov	r2, r9
    7970:	4643      	mov	r3, r8
    7972:	4604      	mov	r4, r0
    7974:	460d      	mov	r5, r1
    7976:	f7f9 f8fb 	bl	b70 <__aeabi_dmul>
    797a:	a343      	add	r3, pc, #268	; (adr r3, 7a88 <__kernel_sin+0x148>)
    797c:	e9d3 2300 	ldrd	r2, r3, [r3]
    7980:	4682      	mov	sl, r0
    7982:	468b      	mov	fp, r1
    7984:	4620      	mov	r0, r4
    7986:	4629      	mov	r1, r5
    7988:	f7f9 f8f2 	bl	b70 <__aeabi_dmul>
    798c:	a340      	add	r3, pc, #256	; (adr r3, 7a90 <__kernel_sin+0x150>)
    798e:	e9d3 2300 	ldrd	r2, r3, [r3]
    7992:	f7f8 ff39 	bl	808 <__aeabi_dsub>
    7996:	4602      	mov	r2, r0
    7998:	460b      	mov	r3, r1
    799a:	4620      	mov	r0, r4
    799c:	4629      	mov	r1, r5
    799e:	f7f9 f8e7 	bl	b70 <__aeabi_dmul>
    79a2:	a33d      	add	r3, pc, #244	; (adr r3, 7a98 <__kernel_sin+0x158>)
    79a4:	e9d3 2300 	ldrd	r2, r3, [r3]
    79a8:	f7f8 ff30 	bl	80c <__adddf3>
    79ac:	4602      	mov	r2, r0
    79ae:	460b      	mov	r3, r1
    79b0:	4620      	mov	r0, r4
    79b2:	4629      	mov	r1, r5
    79b4:	f7f9 f8dc 	bl	b70 <__aeabi_dmul>
    79b8:	a339      	add	r3, pc, #228	; (adr r3, 7aa0 <__kernel_sin+0x160>)
    79ba:	e9d3 2300 	ldrd	r2, r3, [r3]
    79be:	f7f8 ff23 	bl	808 <__aeabi_dsub>
    79c2:	4602      	mov	r2, r0
    79c4:	460b      	mov	r3, r1
    79c6:	4620      	mov	r0, r4
    79c8:	4629      	mov	r1, r5
    79ca:	f7f9 f8d1 	bl	b70 <__aeabi_dmul>
    79ce:	a336      	add	r3, pc, #216	; (adr r3, 7aa8 <__kernel_sin+0x168>)
    79d0:	e9d3 2300 	ldrd	r2, r3, [r3]
    79d4:	f7f8 ff1a 	bl	80c <__adddf3>
    79d8:	4606      	mov	r6, r0
    79da:	980e      	ldr	r0, [sp, #56]	; 0x38
    79dc:	460f      	mov	r7, r1
    79de:	b9b8      	cbnz	r0, 7a10 <__kernel_sin+0xd0>
    79e0:	4632      	mov	r2, r6
    79e2:	463b      	mov	r3, r7
    79e4:	4620      	mov	r0, r4
    79e6:	4629      	mov	r1, r5
    79e8:	f7f9 f8c2 	bl	b70 <__aeabi_dmul>
    79ec:	a330      	add	r3, pc, #192	; (adr r3, 7ab0 <__kernel_sin+0x170>)
    79ee:	e9d3 2300 	ldrd	r2, r3, [r3]
    79f2:	f7f8 ff09 	bl	808 <__aeabi_dsub>
    79f6:	4602      	mov	r2, r0
    79f8:	460b      	mov	r3, r1
    79fa:	4650      	mov	r0, sl
    79fc:	4659      	mov	r1, fp
    79fe:	f7f9 f8b7 	bl	b70 <__aeabi_dmul>
    7a02:	4602      	mov	r2, r0
    7a04:	460b      	mov	r3, r1
    7a06:	4648      	mov	r0, r9
    7a08:	4641      	mov	r1, r8
    7a0a:	f7f8 feff 	bl	80c <__adddf3>
    7a0e:	e032      	b.n	7a76 <__kernel_sin+0x136>
    7a10:	2200      	movs	r2, #0
    7a12:	4b29      	ldr	r3, [pc, #164]	; (7ab8 <__kernel_sin+0x178>)
    7a14:	e9dd 0100 	ldrd	r0, r1, [sp]
    7a18:	f7f9 f8aa 	bl	b70 <__aeabi_dmul>
    7a1c:	4632      	mov	r2, r6
    7a1e:	e9cd 0102 	strd	r0, r1, [sp, #8]
    7a22:	463b      	mov	r3, r7
    7a24:	4650      	mov	r0, sl
    7a26:	4659      	mov	r1, fp
    7a28:	f7f9 f8a2 	bl	b70 <__aeabi_dmul>
    7a2c:	4602      	mov	r2, r0
    7a2e:	460b      	mov	r3, r1
    7a30:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    7a34:	f7f8 fee8 	bl	808 <__aeabi_dsub>
    7a38:	4602      	mov	r2, r0
    7a3a:	460b      	mov	r3, r1
    7a3c:	4620      	mov	r0, r4
    7a3e:	4629      	mov	r1, r5
    7a40:	f7f9 f896 	bl	b70 <__aeabi_dmul>
    7a44:	e9dd 2300 	ldrd	r2, r3, [sp]
    7a48:	f7f8 fede 	bl	808 <__aeabi_dsub>
    7a4c:	a318      	add	r3, pc, #96	; (adr r3, 7ab0 <__kernel_sin+0x170>)
    7a4e:	e9d3 2300 	ldrd	r2, r3, [r3]
    7a52:	4604      	mov	r4, r0
    7a54:	460d      	mov	r5, r1
    7a56:	4650      	mov	r0, sl
    7a58:	4659      	mov	r1, fp
    7a5a:	f7f9 f889 	bl	b70 <__aeabi_dmul>
    7a5e:	4602      	mov	r2, r0
    7a60:	460b      	mov	r3, r1
    7a62:	4620      	mov	r0, r4
    7a64:	4629      	mov	r1, r5
    7a66:	f7f8 fed1 	bl	80c <__adddf3>
    7a6a:	4602      	mov	r2, r0
    7a6c:	460b      	mov	r3, r1
    7a6e:	4648      	mov	r0, r9
    7a70:	4641      	mov	r1, r8
    7a72:	f7f8 fec9 	bl	808 <__aeabi_dsub>
    7a76:	4681      	mov	r9, r0
    7a78:	4688      	mov	r8, r1
    7a7a:	4648      	mov	r0, r9
    7a7c:	4641      	mov	r1, r8
    7a7e:	b005      	add	sp, #20
    7a80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7a84:	f3af 8000 	nop.w
    7a88:	5acfd57c 	.word	0x5acfd57c
    7a8c:	3de5d93a 	.word	0x3de5d93a
    7a90:	8a2b9ceb 	.word	0x8a2b9ceb
    7a94:	3e5ae5e6 	.word	0x3e5ae5e6
    7a98:	57b1fe7d 	.word	0x57b1fe7d
    7a9c:	3ec71de3 	.word	0x3ec71de3
    7aa0:	19c161d5 	.word	0x19c161d5
    7aa4:	3f2a01a0 	.word	0x3f2a01a0
    7aa8:	1110f8a6 	.word	0x1110f8a6
    7aac:	3f811111 	.word	0x3f811111
    7ab0:	55555549 	.word	0x55555549
    7ab4:	3fc55555 	.word	0x3fc55555
    7ab8:	3fe00000 	.word	0x3fe00000
    7abc:	f3af 8000 	nop.w

00007ac0 <floor>:
    7ac0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    7ac4:	e9cd 0100 	strd	r0, r1, [sp]
    7ac8:	9c01      	ldr	r4, [sp, #4]
    7aca:	9d00      	ldr	r5, [sp, #0]
    7acc:	f3c4 570a 	ubfx	r7, r4, #20, #11
    7ad0:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
    7ad4:	2e13      	cmp	r6, #19
    7ad6:	dc35      	bgt.n	7b44 <floor+0x84>
    7ad8:	2e00      	cmp	r6, #0
    7ada:	da15      	bge.n	7b08 <floor+0x48>
    7adc:	a336      	add	r3, pc, #216	; (adr r3, 7bb8 <floor+0xf8>)
    7ade:	e9d3 2300 	ldrd	r2, r3, [r3]
    7ae2:	f7f8 fe93 	bl	80c <__adddf3>
    7ae6:	2200      	movs	r2, #0
    7ae8:	2300      	movs	r3, #0
    7aea:	f7f9 fad1 	bl	1090 <__aeabi_dcmpgt>
    7aee:	2800      	cmp	r0, #0
    7af0:	d059      	beq.n	7ba6 <floor+0xe6>
    7af2:	2c00      	cmp	r4, #0
    7af4:	da55      	bge.n	7ba2 <floor+0xe2>
    7af6:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
    7afa:	4831      	ldr	r0, [pc, #196]	; (7bc0 <floor+0x100>)
    7afc:	432b      	orrs	r3, r5
    7afe:	bf18      	it	ne
    7b00:	4604      	movne	r4, r0
    7b02:	f04f 0500 	mov.w	r5, #0
    7b06:	e04e      	b.n	7ba6 <floor+0xe6>
    7b08:	4f2e      	ldr	r7, [pc, #184]	; (7bc4 <floor+0x104>)
    7b0a:	fa47 f706 	asr.w	r7, r7, r6
    7b0e:	ea07 0204 	and.w	r2, r7, r4
    7b12:	ea52 0305 	orrs.w	r3, r2, r5
    7b16:	d048      	beq.n	7baa <floor+0xea>
    7b18:	a327      	add	r3, pc, #156	; (adr r3, 7bb8 <floor+0xf8>)
    7b1a:	e9d3 2300 	ldrd	r2, r3, [r3]
    7b1e:	f7f8 fe75 	bl	80c <__adddf3>
    7b22:	2200      	movs	r2, #0
    7b24:	2300      	movs	r3, #0
    7b26:	f7f9 fab3 	bl	1090 <__aeabi_dcmpgt>
    7b2a:	2800      	cmp	r0, #0
    7b2c:	d03b      	beq.n	7ba6 <floor+0xe6>
    7b2e:	2c00      	cmp	r4, #0
    7b30:	da04      	bge.n	7b3c <floor+0x7c>
    7b32:	f44f 1580 	mov.w	r5, #1048576	; 0x100000
    7b36:	fa45 f606 	asr.w	r6, r5, r6
    7b3a:	19a4      	adds	r4, r4, r6
    7b3c:	ea24 0407 	bic.w	r4, r4, r7
    7b40:	2500      	movs	r5, #0
    7b42:	e030      	b.n	7ba6 <floor+0xe6>
    7b44:	2e33      	cmp	r6, #51	; 0x33
    7b46:	dd07      	ble.n	7b58 <floor+0x98>
    7b48:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
    7b4c:	d12d      	bne.n	7baa <floor+0xea>
    7b4e:	4602      	mov	r2, r0
    7b50:	460b      	mov	r3, r1
    7b52:	f7f8 fe5b 	bl	80c <__adddf3>
    7b56:	e02a      	b.n	7bae <floor+0xee>
    7b58:	f2a7 4313 	subw	r3, r7, #1043	; 0x413
    7b5c:	f04f 38ff 	mov.w	r8, #4294967295
    7b60:	fa28 f803 	lsr.w	r8, r8, r3
    7b64:	ea18 0f05 	tst.w	r8, r5
    7b68:	d01f      	beq.n	7baa <floor+0xea>
    7b6a:	a313      	add	r3, pc, #76	; (adr r3, 7bb8 <floor+0xf8>)
    7b6c:	e9d3 2300 	ldrd	r2, r3, [r3]
    7b70:	f7f8 fe4c 	bl	80c <__adddf3>
    7b74:	2200      	movs	r2, #0
    7b76:	2300      	movs	r3, #0
    7b78:	f7f9 fa8a 	bl	1090 <__aeabi_dcmpgt>
    7b7c:	b198      	cbz	r0, 7ba6 <floor+0xe6>
    7b7e:	2c00      	cmp	r4, #0
    7b80:	da0c      	bge.n	7b9c <floor+0xdc>
    7b82:	2e14      	cmp	r6, #20
    7b84:	d101      	bne.n	7b8a <floor+0xca>
    7b86:	3401      	adds	r4, #1
    7b88:	e008      	b.n	7b9c <floor+0xdc>
    7b8a:	f5c7 6786 	rsb	r7, r7, #1072	; 0x430
    7b8e:	2101      	movs	r1, #1
    7b90:	1cf8      	adds	r0, r7, #3
    7b92:	fa01 f700 	lsl.w	r7, r1, r0
    7b96:	19ed      	adds	r5, r5, r7
    7b98:	bf28      	it	cs
    7b9a:	1864      	addcs	r4, r4, r1
    7b9c:	ea25 0508 	bic.w	r5, r5, r8
    7ba0:	e001      	b.n	7ba6 <floor+0xe6>
    7ba2:	2500      	movs	r5, #0
    7ba4:	462c      	mov	r4, r5
    7ba6:	9401      	str	r4, [sp, #4]
    7ba8:	9500      	str	r5, [sp, #0]
    7baa:	e9dd 0100 	ldrd	r0, r1, [sp]
    7bae:	e8bd 81fc 	ldmia.w	sp!, {r2, r3, r4, r5, r6, r7, r8, pc}
    7bb2:	bf00      	nop
    7bb4:	f3af 8000 	nop.w
    7bb8:	8800759c 	.word	0x8800759c
    7bbc:	7e37e43c 	.word	0x7e37e43c
    7bc0:	bff00000 	.word	0xbff00000
    7bc4:	000fffff 	.word	0x000fffff

00007bc8 <scalbn>:
    7bc8:	b513      	push	{r0, r1, r4, lr}
    7bca:	4614      	mov	r4, r2
    7bcc:	aa01      	add	r2, sp, #4
    7bce:	f7fe f977 	bl	5ec0 <frexp>
    7bd2:	9a01      	ldr	r2, [sp, #4]
    7bd4:	18a2      	adds	r2, r4, r2
    7bd6:	b002      	add	sp, #8
    7bd8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    7bdc:	f000 b800 	b.w	7be0 <ldexp>

00007be0 <ldexp>:
    7be0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    7be4:	4690      	mov	r8, r2
    7be6:	e9cd 0100 	strd	r0, r1, [sp]
    7bea:	f7fe f903 	bl	5df4 <__fpclassifyd>
    7bee:	2802      	cmp	r0, #2
    7bf0:	e9dd 6700 	ldrd	r6, r7, [sp]
    7bf4:	dd08      	ble.n	7c08 <ldexp+0x28>
    7bf6:	4630      	mov	r0, r6
    7bf8:	4639      	mov	r1, r7
    7bfa:	2200      	movs	r2, #0
    7bfc:	2300      	movs	r3, #0
    7bfe:	4634      	mov	r4, r6
    7c00:	463d      	mov	r5, r7
    7c02:	f7f9 fa1d 	bl	1040 <__aeabi_dcmpeq>
    7c06:	b110      	cbz	r0, 7c0e <ldexp+0x2e>
    7c08:	4634      	mov	r4, r6
    7c0a:	463d      	mov	r5, r7
    7c0c:	e066      	b.n	7cdc <ldexp+0xfc>
    7c0e:	e89d 000c 	ldmia.w	sp, {r2, r3}
    7c12:	f3c3 510a 	ubfx	r1, r3, #20, #11
    7c16:	b999      	cbnz	r1, 7c40 <ldexp+0x60>
    7c18:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
    7c1c:	4313      	orrs	r3, r2
    7c1e:	d05d      	beq.n	7cdc <ldexp+0xfc>
    7c20:	2200      	movs	r2, #0
    7c22:	4b39      	ldr	r3, [pc, #228]	; (7d08 <ldexp+0x128>)
    7c24:	4c39      	ldr	r4, [pc, #228]	; (7d0c <ldexp+0x12c>)
    7c26:	4630      	mov	r0, r6
    7c28:	4639      	mov	r1, r7
    7c2a:	f7f8 ffa1 	bl	b70 <__aeabi_dmul>
    7c2e:	45a0      	cmp	r8, r4
    7c30:	e9cd 0100 	strd	r0, r1, [sp]
    7c34:	9b01      	ldr	r3, [sp, #4]
    7c36:	db3d      	blt.n	7cb4 <ldexp+0xd4>
    7c38:	f3c3 510a 	ubfx	r1, r3, #20, #11
    7c3c:	3936      	subs	r1, #54	; 0x36
    7c3e:	e00a      	b.n	7c56 <ldexp+0x76>
    7c40:	f240 72ff 	movw	r2, #2047	; 0x7ff
    7c44:	4291      	cmp	r1, r2
    7c46:	d106      	bne.n	7c56 <ldexp+0x76>
    7c48:	4630      	mov	r0, r6
    7c4a:	4639      	mov	r1, r7
    7c4c:	4632      	mov	r2, r6
    7c4e:	463b      	mov	r3, r7
    7c50:	f7f8 fddc 	bl	80c <__adddf3>
    7c54:	e040      	b.n	7cd8 <ldexp+0xf8>
    7c56:	eb01 0008 	add.w	r0, r1, r8
    7c5a:	f240 75fe 	movw	r5, #2046	; 0x7fe
    7c5e:	42a8      	cmp	r0, r5
    7c60:	dd0c      	ble.n	7c7c <ldexp+0x9c>
    7c62:	9c01      	ldr	r4, [sp, #4]
    7c64:	2c00      	cmp	r4, #0
    7c66:	a120      	add	r1, pc, #128	; (adr r1, 7ce8 <ldexp+0x108>)
    7c68:	e9d1 0100 	ldrd	r0, r1, [r1]
    7c6c:	da02      	bge.n	7c74 <ldexp+0x94>
    7c6e:	a120      	add	r1, pc, #128	; (adr r1, 7cf0 <ldexp+0x110>)
    7c70:	e9d1 0100 	ldrd	r0, r1, [r1]
    7c74:	a31c      	add	r3, pc, #112	; (adr r3, 7ce8 <ldexp+0x108>)
    7c76:	e9d3 2300 	ldrd	r2, r3, [r3]
    7c7a:	e02b      	b.n	7cd4 <ldexp+0xf4>
    7c7c:	2800      	cmp	r0, #0
    7c7e:	dd09      	ble.n	7c94 <ldexp+0xb4>
    7c80:	f023 42ff 	bic.w	r2, r3, #2139095040	; 0x7f800000
    7c84:	f422 03e0 	bic.w	r3, r2, #7340032	; 0x700000
    7c88:	ea43 5000 	orr.w	r0, r3, r0, lsl #20
    7c8c:	9001      	str	r0, [sp, #4]
    7c8e:	e9dd 4500 	ldrd	r4, r5, [sp]
    7c92:	e023      	b.n	7cdc <ldexp+0xfc>
    7c94:	f110 0f35 	cmn.w	r0, #53	; 0x35
    7c98:	da10      	bge.n	7cbc <ldexp+0xdc>
    7c9a:	f24c 3150 	movw	r1, #50000	; 0xc350
    7c9e:	4588      	cmp	r8, r1
    7ca0:	dcdf      	bgt.n	7c62 <ldexp+0x82>
    7ca2:	9d01      	ldr	r5, [sp, #4]
    7ca4:	2d00      	cmp	r5, #0
    7ca6:	a114      	add	r1, pc, #80	; (adr r1, 7cf8 <ldexp+0x118>)
    7ca8:	e9d1 0100 	ldrd	r0, r1, [r1]
    7cac:	da02      	bge.n	7cb4 <ldexp+0xd4>
    7cae:	a114      	add	r1, pc, #80	; (adr r1, 7d00 <ldexp+0x120>)
    7cb0:	e9d1 0100 	ldrd	r0, r1, [r1]
    7cb4:	a310      	add	r3, pc, #64	; (adr r3, 7cf8 <ldexp+0x118>)
    7cb6:	e9d3 2300 	ldrd	r2, r3, [r3]
    7cba:	e00b      	b.n	7cd4 <ldexp+0xf4>
    7cbc:	f023 42ff 	bic.w	r2, r3, #2139095040	; 0x7f800000
    7cc0:	f422 03e0 	bic.w	r3, r2, #7340032	; 0x700000
    7cc4:	3036      	adds	r0, #54	; 0x36
    7cc6:	ea43 5400 	orr.w	r4, r3, r0, lsl #20
    7cca:	9401      	str	r4, [sp, #4]
    7ccc:	e9dd 0100 	ldrd	r0, r1, [sp]
    7cd0:	4b0f      	ldr	r3, [pc, #60]	; (7d10 <ldexp+0x130>)
    7cd2:	2200      	movs	r2, #0
    7cd4:	f7f8 ff4c 	bl	b70 <__aeabi_dmul>
    7cd8:	4604      	mov	r4, r0
    7cda:	460d      	mov	r5, r1
    7cdc:	4620      	mov	r0, r4
    7cde:	4629      	mov	r1, r5
    7ce0:	e8bd 81fc 	ldmia.w	sp!, {r2, r3, r4, r5, r6, r7, r8, pc}
    7ce4:	f3af 8000 	nop.w
    7ce8:	8800759c 	.word	0x8800759c
    7cec:	7e37e43c 	.word	0x7e37e43c
    7cf0:	8800759c 	.word	0x8800759c
    7cf4:	fe37e43c 	.word	0xfe37e43c
    7cf8:	c2f8f359 	.word	0xc2f8f359
    7cfc:	01a56e1f 	.word	0x01a56e1f
    7d00:	c2f8f359 	.word	0xc2f8f359
    7d04:	81a56e1f 	.word	0x81a56e1f
    7d08:	43500000 	.word	0x43500000
    7d0c:	ffff3cb0 	.word	0xffff3cb0
    7d10:	3c900000 	.word	0x3c900000
    7d14:	f3af 8000 	nop.w

00007d18 <__init_cpp>:
    7d18:	b510      	push	{r4, lr}
    7d1a:	4c0c      	ldr	r4, [pc, #48]	; (7d4c <__init_cpp+0x34>)
    7d1c:	4b0c      	ldr	r3, [pc, #48]	; (7d50 <__init_cpp+0x38>)
    7d1e:	429c      	cmp	r4, r3
    7d20:	d003      	beq.n	7d2a <__init_cpp+0x12>
    7d22:	f854 0b04 	ldr.w	r0, [r4], #4
    7d26:	4780      	blx	r0
    7d28:	e7f8      	b.n	7d1c <__init_cpp+0x4>
    7d2a:	4c0a      	ldr	r4, [pc, #40]	; (7d54 <__init_cpp+0x3c>)
    7d2c:	480a      	ldr	r0, [pc, #40]	; (7d58 <__init_cpp+0x40>)
    7d2e:	4284      	cmp	r4, r0
    7d30:	d003      	beq.n	7d3a <__init_cpp+0x22>
    7d32:	f854 3b04 	ldr.w	r3, [r4], #4
    7d36:	4798      	blx	r3
    7d38:	e7f8      	b.n	7d2c <__init_cpp+0x14>
    7d3a:	4c08      	ldr	r4, [pc, #32]	; (7d5c <__init_cpp+0x44>)
    7d3c:	4908      	ldr	r1, [pc, #32]	; (7d60 <__init_cpp+0x48>)
    7d3e:	428c      	cmp	r4, r1
    7d40:	d003      	beq.n	7d4a <__init_cpp+0x32>
    7d42:	f854 2b04 	ldr.w	r2, [r4], #4
    7d46:	4790      	blx	r2
    7d48:	e7f8      	b.n	7d3c <__init_cpp+0x24>
    7d4a:	bd10      	pop	{r4, pc}
    7d4c:	0000c658 	.word	0x0000c658
    7d50:	0000c658 	.word	0x0000c658
    7d54:	0000c658 	.word	0x0000c658
    7d58:	0000c658 	.word	0x0000c658
    7d5c:	0000c658 	.word	0x0000c658
    7d60:	0000c658 	.word	0x0000c658

00007d64 <__fini_cpp>:
    7d64:	b510      	push	{r4, lr}
    7d66:	4c08      	ldr	r4, [pc, #32]	; (7d88 <__fini_cpp+0x24>)
    7d68:	4b08      	ldr	r3, [pc, #32]	; (7d8c <__fini_cpp+0x28>)
    7d6a:	429c      	cmp	r4, r3
    7d6c:	d003      	beq.n	7d76 <__fini_cpp+0x12>
    7d6e:	f854 2b04 	ldr.w	r2, [r4], #4
    7d72:	4790      	blx	r2
    7d74:	e7f8      	b.n	7d68 <__fini_cpp+0x4>
    7d76:	4c06      	ldr	r4, [pc, #24]	; (7d90 <__fini_cpp+0x2c>)
    7d78:	4806      	ldr	r0, [pc, #24]	; (7d94 <__fini_cpp+0x30>)
    7d7a:	4284      	cmp	r4, r0
    7d7c:	d003      	beq.n	7d86 <__fini_cpp+0x22>
    7d7e:	f854 1d04 	ldr.w	r1, [r4, #-4]!
    7d82:	4788      	blx	r1
    7d84:	e7f8      	b.n	7d78 <__fini_cpp+0x14>
    7d86:	bd10      	pop	{r4, pc}
    7d88:	0000c658 	.word	0x0000c658
    7d8c:	0000c658 	.word	0x0000c658
    7d90:	0000c658 	.word	0x0000c658
    7d94:	0000c658 	.word	0x0000c658

00007d98 <__copy_rom_section>:
    7d98:	4288      	cmp	r0, r1
    7d9a:	d01e      	beq.n	7dda <__copy_rom_section+0x42>
    7d9c:	b1ea      	cbz	r2, 7dda <__copy_rom_section+0x42>
    7d9e:	078b      	lsls	r3, r1, #30
    7da0:	d109      	bne.n	7db6 <__copy_rom_section+0x1e>
    7da2:	0783      	lsls	r3, r0, #30
    7da4:	d107      	bne.n	7db6 <__copy_rom_section+0x1e>
    7da6:	2a03      	cmp	r2, #3
    7da8:	d905      	bls.n	7db6 <__copy_rom_section+0x1e>
    7daa:	f851 3b04 	ldr.w	r3, [r1], #4
    7dae:	3a04      	subs	r2, #4
    7db0:	f840 3b04 	str.w	r3, [r0], #4
    7db4:	e7f2      	b.n	7d9c <__copy_rom_section+0x4>
    7db6:	07cb      	lsls	r3, r1, #31
    7db8:	d409      	bmi.n	7dce <__copy_rom_section+0x36>
    7dba:	07c3      	lsls	r3, r0, #31
    7dbc:	d407      	bmi.n	7dce <__copy_rom_section+0x36>
    7dbe:	2a01      	cmp	r2, #1
    7dc0:	d905      	bls.n	7dce <__copy_rom_section+0x36>
    7dc2:	f831 3b02 	ldrh.w	r3, [r1], #2
    7dc6:	3a02      	subs	r2, #2
    7dc8:	f820 3b02 	strh.w	r3, [r0], #2
    7dcc:	e7e6      	b.n	7d9c <__copy_rom_section+0x4>
    7dce:	f811 3b01 	ldrb.w	r3, [r1], #1
    7dd2:	3a01      	subs	r2, #1
    7dd4:	f800 3b01 	strb.w	r3, [r0], #1
    7dd8:	e7e0      	b.n	7d9c <__copy_rom_section+0x4>
    7dda:	4770      	bx	lr

00007ddc <__copy_rom_sections_to_ram>:
    7ddc:	b510      	push	{r4, lr}
    7dde:	4c0a      	ldr	r4, [pc, #40]	; (7e08 <__copy_rom_sections_to_ram+0x2c>)
    7de0:	b18c      	cbz	r4, 7e06 <__copy_rom_sections_to_ram+0x2a>
    7de2:	3408      	adds	r4, #8
    7de4:	f854 1c08 	ldr.w	r1, [r4, #-8]
    7de8:	b131      	cbz	r1, 7df8 <__copy_rom_sections_to_ram+0x1c>
    7dea:	f854 0c04 	ldr.w	r0, [r4, #-4]
    7dee:	f854 2b0c 	ldr.w	r2, [r4], #12
    7df2:	f7ff ffd1 	bl	7d98 <__copy_rom_section>
    7df6:	e7f5      	b.n	7de4 <__copy_rom_sections_to_ram+0x8>
    7df8:	f854 3c04 	ldr.w	r3, [r4, #-4]
    7dfc:	2b00      	cmp	r3, #0
    7dfe:	d1f4      	bne.n	7dea <__copy_rom_sections_to_ram+0xe>
    7e00:	6820      	ldr	r0, [r4, #0]
    7e02:	2800      	cmp	r0, #0
    7e04:	d1f1      	bne.n	7dea <__copy_rom_sections_to_ram+0xe>
    7e06:	bd10      	pop	{r4, pc}
    7e08:	0000c684 	.word	0x0000c684

00007e0c <__destroy_global_chain>:
    7e0c:	4b04      	ldr	r3, [pc, #16]	; (7e20 <__destroy_global_chain+0x14>)
    7e0e:	b510      	push	{r4, lr}
    7e10:	681c      	ldr	r4, [r3, #0]
    7e12:	b124      	cbz	r4, 7e1e <__destroy_global_chain+0x12>
    7e14:	6861      	ldr	r1, [r4, #4]
    7e16:	68a0      	ldr	r0, [r4, #8]
    7e18:	4788      	blx	r1
    7e1a:	6824      	ldr	r4, [r4, #0]
    7e1c:	e7f9      	b.n	7e12 <__destroy_global_chain+0x6>
    7e1e:	bd10      	pop	{r4, pc}
    7e20:	1fffe05c 	.word	0x1fffe05c

00007e24 <__init_registers>:
    7e24:	4b07      	ldr	r3, [pc, #28]	; (7e44 <skip_sp+0x6>)
    7e26:	4618      	mov	r0, r3
    7e28:	2800      	cmp	r0, #0
    7e2a:	f000 8008 	beq.w	7e3e <skip_sp>
    7e2e:	4685      	mov	sp, r0
    7e30:	b081      	sub	sp, #4
    7e32:	f04f 0000 	mov.w	r0, #0
    7e36:	ea6f 0000 	mvn.w	r0, r0
    7e3a:	9000      	str	r0, [sp, #0]
    7e3c:	b001      	add	sp, #4

00007e3e <skip_sp>:
    7e3e:	46f7      	mov	pc, lr
    7e40:	4770      	bx	lr
    7e42:	bf00      	nop
    7e44:	20000000 	.word	0x20000000

00007e48 <__init_user>:
    7e48:	46f7      	mov	pc, lr
    7e4a:	4770      	bx	lr
	...

00007e6c <atan_24pi_q31_t>:
    7e6c:	3812 8229 7d3e 8229 c27b 8229 07c9 822a     .8).>}).{.)...*.
    7e7c:	4d29 822a 929a 822a d81c 822a 1db0 822b     )M*...*...*...+.
    7e8c:	6356 822b a90c 822b eed5 822b 34af 822c     Vc+...+...+..4,.
    7e9c:	7a9a 822c c097 822c 06a6 822d 4cc6 822d     .z,...,...-..L-.
    7eac:	92f8 822d d93b 822d 1f90 822e 65f7 822e     ..-.;.-......e..
    7ebc:	ac70 822e f2fb 822e 3997 822f 8046 822f     p........9/.F./.
    7ecc:	c706 822f 0dd8 8230 54bc 8230 9bb1 8230     ../...0..T0...0.
    7edc:	e2b9 8230 29d3 8231 70ff 8231 b83d 8231     ..0..)1..p1.=.1.
    7eec:	ff8d 8231 46ef 8232 8e64 8232 d5ea 8232     ..1..F2.d.2...2.
    7efc:	1d83 8233 652e 8233 aceb 8233 f4ba 8233     ..3..e3...3...3.
    7f0c:	3c9c 8234 8490 8234 cc96 8234 14af 8235     .<4...4...4...5.
    7f1c:	5cda 8235 a518 8235 ed68 8235 35ca 8236     .\5...5.h.5..56.
    7f2c:	7e3f 8236 c6c7 8236 0f61 8237 580e 8237     ?~6...6.a.7..X7.
    7f3c:	a0ce 8237 e9a0 8237 3284 8238 7b7c 8238     ..7...7..28.|{8.
    7f4c:	c486 8238 0da3 8239 56d3 8239 a016 8239     ..8...9..V9...9.
    7f5c:	e96b 8239 32d4 823a 7c4f 823a c5dd 823a     k.9..2:.O|:...:.
    7f6c:	0f7f 823b 5933 823b a2fa 823b ecd5 823b     ..;.3Y;...;...;.
    7f7c:	36c2 823c 80c3 823c cad6 823c 14fd 823d     .6<...<...<...=.
    7f8c:	5f37 823d a984 823d f3e5 823d 3e59 823e     7_=...=...=.Y>>.
    7f9c:	88e0 823e d37b 823e 1e29 823f 68ea 823f     ..>.{.>.).?..h?.
    7fac:	b3bf 823f fea7 823f 49a3 8240 94b2 8240     ..?...?..I@...@.
    7fbc:	dfd5 8240 2b0b 8241 7655 8241 c1b3 8241     ..@..+A.UvA...A.
    7fcc:	0d24 8242 58a9 8242 a442 8242 efee 8242     $.B..XB.B.B...B.
    7fdc:	3baf 8243 8783 8243 d36b 8243 1f67 8244     .;C...C.k.C.g.D.
    7fec:	6b77 8244 b79b 8244 03d2 8245 501e 8245     wkD...D...E..PE.
    7ffc:	9c7e 8245 e8f2 8245 357a 8246 8216 8246     ~.E...E.z5F...F.
    800c:	cec6 8246 1b8b 8247 6864 8247 b551 8247     ..F...G.dhG.Q.G.
    801c:	0252 8248 4f67 8248 9c91 8248 e9d0 8248     R.H.gOH...H...H.
    802c:	3723 8249 848a 8249 d205 8249 1f96 824a     #7I...I...I...J.
    803c:	6d3a 824a baf4 824a 08c2 824b 56a4 824b     :mJ...J...K..VK.
    804c:	a49b 824b f2a7 824b 40c8 824c 8efe 824c     ..K...K..@L...L.
    805c:	dd48 824c 2ba7 824d 7a1b 824d c8a4 824d     H.L..+M..zM...M.
    806c:	1742 824e 65f4 824e b4bc 824e 0399 824f     B.N..eN...N...O.
    807c:	528b 824f a192 824f f0ae 824f 3fdf 8250     .RO...O...O..?P.
    808c:	8f25 8250 de81 8250 2df2 8251 7d78 8251     %.P...P..-Q.x}Q.
    809c:	cd14 8251 1cc5 8252 6c8b 8252 bc67 8252     ..Q...R..lR.g.R.
    80ac:	0c58 8253 5c5e 8253 ac7b 8253 fcac 8253     X.S.^\S.{.S...S.
    80bc:	4cf4 8254 9d51 8254 edc4 8254 3e4c 8255     .LT.Q.T...T.L>U.
    80cc:	8eea 8255 df9e 8255 3068 8256 8147 8256     ..U...U.h0V.G.V.
    80dc:	d23c 8256 2348 8257 7469 8257 c5a0 8257     <.V.H#W.itW...W.
    80ec:	16ed 8258 6851 8258 b9ca 8258 0b5a 8259     ..X.QhX...X.Z.Y.
    80fc:	5cff 8259 aebb 8259 008d 825a 5275 825a     .\Y...Y...Z.uRZ.
    810c:	a474 825a f689 825a 48b4 825b 9af6 825b     t.Z...Z..H[...[.
    811c:	ed4e 825b 3fbd 825c 9242 825c e4dd 825c     N.[..?\.B.\...\.
    812c:	3790 825d 8a59 825d dd38 825d 302e 825e     .7].Y.].8.]..0^.
    813c:	833b 825e d65f 825e 2999 825f 7ceb 825f     ;.^._.^..)_..|_.
    814c:	d053 825f 23d2 8260 7768 8260 cb15 8260     S._..#`.hw`...`.
    815c:	1ed9 8261 72b4 8261 c6a6 8261 1ab0 8262     ..a..ra...a...b.
    816c:	6ed0 8262 c308 8262 1757 8263 6bbd 8263     .nb...b.W.c..kc.
    817c:	c03b 8263 14d0 8264 697c 8264 be40 8264     ;.c...d.|id.@.d.
    818c:	131b 8265 680e 8265 bd18 8265 123a 8266     ..e..he...e.:.f.
    819c:	6773 8266 bcc4 8266 122d 8267 67ae 8267     sgf...f.-.g..gg.
    81ac:	bd46 8267 12f6 8268 68be 8268 be9e 8268     F.g...h..hh...h.
    81bc:	1496 8269 6aa6 8269 c0ce 8269 170d 826a     ..i..ji...i...j.
    81cc:	6d65 826a c3d6 826a 1a5e 826b 70fe 826b     emj...j.^.k..pk.
    81dc:	c7b7 826b 1e88 826c 7571 826c cc73 826c     ..k...l.qul.s.l.
    81ec:	238d 826d 7ac0 826d d20b 826d 296e 826e     .#m..zm...m.n)n.
    81fc:	80eb 826e d87f 826e 302d 826f 87f3 826f     ..n...n.-0o...o.
    820c:	dfd2 826f 37c9 8270 8fda 8270 e803 8270     ..o..7p...p...p.
    821c:	4045 8271 98a0 8271 f114 8271 49a1 8272     E@q...q...q..Ir.
    822c:	a248 8272 fb07 8272 53df 8273 acd1 8273     H.r...r..Ss...s.
    823c:	05dc 8274 5f00 8274 b83d 8274 1194 8275     ..t.._t.=.t...u.
    824c:	6b04 8275 c48e 8275 1e31 8276 77ed 8276     .ku...u.1.v..wv.
    825c:	d1c4 8276 2bb3 8277 85bd 8277 dfe0 8277     ..v..+w...w...w.
    826c:	3a1d 8278 9473 8278 eee4 8278 496e 8279     .:x.s.x...x.nIy.
    827c:	a412 8279 fed1 8279 59a9 827a b49b 827a     ..y...y..Yz...z.
    828c:	0fa7 827b 6ace 827b c60e 827b 2169 827c     ..{..j{...{.i!|.
    829c:	7cde 827c d86e 827c 3417 827d 8fdc 827d     .||.n.|..4}...}.
    82ac:	ebba 827d 47b3 827e a3c7 827e fff5 827e     ..}..G~...~...~.
    82bc:	5c3e 827f b8a1 827f 151f 8280 71b8 8280     >\...........q..
    82cc:	ce6c 8280 2b3a 8281 8824 8281 e528 8281     l...:+..$...(...
    82dc:	4247 8282 9f82 8282 fcd7 8282 5a48 8283     GB..........HZ..
    82ec:	b7d4 8283 157a 8284 733d 8284 d11a 8284     ....z...=s......
    82fc:	2f13 8285 8d27 8285 eb57 8285 49a2 8286     ./..'...W....I..
    830c:	a809 8286 068b 8287 6529 8287 c3e3 8287     ........)e......
    831c:	22b8 8288 81a9 8288 e0b6 8288 3fdf 8289     ."...........?..
    832c:	9f23 8289 fe84 8289 5e01 828a bd9a 828a     #........^......
    833c:	1d4e 828b 7d1f 828b dd0d 828b 3d16 828c     N....}.......=..
    834c:	9d3c 828c fd7e 828c 5ddd 828d be58 828d     <...~....]..X...
    835c:	1eef 828e 7fa3 828e e074 828e 4161 828f     ........t...aA..
    836c:	a26b 828f 0392 8290 64d5 8290 c636 8290     k........d..6...
    837c:	27b3 8291 894d 8291 eb05 8291 4cd9 8292     .'..M........L..
    838c:	aeca 8292 10d9 8293 7305 8293 d54e 8293     .........s..N...
    839c:	37b4 8294 9a38 8294 fcd9 8294 5f97 8295     .7..8........_..
    83ac:	c273 8295 256d 8296 8884 8296 ebb9 8296     s...m%..........
    83bc:	4f0b 8297 b27c 8297 160a 8298 79b6 8298     .O..|........y..
    83cc:	dd80 8298 4168 8299 a56e 8299 0992 829a     ....hA..n.......
    83dc:	6dd4 829a d235 829a 36b3 829b 9b50 829b     .m..5....6..P...
    83ec:	000c 829c 64e5 829c c9de 829c 2ef4 829d     .....d..........
    83fc:	9429 829d f97d 829d 5ef0 829e c481 829e     )...}....^......
    840c:	2a31 829f 9000 829f f5ee 829f 5bfb 82a0     1*...........[..
    841c:	c226 82a0 2871 82a1 8edb 82a1 f564 82a1     &...q(......d...
    842c:	5c0d 82a2 c2d4 82a2 29bb 82a3 90c1 82a3     .\.......)......
    843c:	f7e7 82a3 5f2c 82a4 c691 82a4 2e16 82a5     ....,_..........
    844c:	95ba 82a5 fd7e 82a5 6561 82a6 cd65 82a6     ....~...ae..e...
    845c:	3588 82a7 9dcc 82a7 062f 82a8 6eb3 82a8     .5....../....n..
    846c:	d756 82a8 401a 82a9 a8fe 82a9 1202 82aa     V....@..........
    847c:	7b27 82aa e46c 82aa 4dd2 82ab b758 82ab     '{..l....M..X...
    848c:	20ff 82ac 8ac6 82ac f4ae 82ac 5eb7 82ad     . ...........^..
    849c:	c8e1 82ad 332c 82ae 9d97 82ae 0824 82af     ....,3......$...
    84ac:	72d2 82af dda0 82af 4890 82b0 b3a2 82b0     .r.......H......
    84bc:	1ed4 82b1 8a28 82b1 f59e 82b1 6135 82b2     ....(.......5a..
    84cc:	cced 82b2 38c7 82b3 a4c3 82b3 10e1 82b4     .....8..........
    84dc:	7d20 82b4 e981 82b4 5604 82b5 c2aa 82b5      }.......V......
    84ec:	2f71 82b6 9c5a 82b6 0966 82b7 7693 82b7     q/..Z...f....v..
    84fc:	e3e4 82b7 5156 82b8 beeb 82b8 2ca2 82b9     ....VQ.......,..
    850c:	9a7c 82b9 0879 82ba 7698 82ba e4da 82ba     |...y....v......
    851c:	533f 82bb c1c7 82bb 3071 82bc 9f3f 82bc     ?S......q0..?...
    852c:	0e30 82bd 7d44 82bd ec7b 82bd 5bd5 82be     0...D}..{....[..
    853c:	cb53 82be 3af4 82bf aab8 82bf 1aa1 82c0     S....:..........
    854c:	8aac 82c0 fadc 82c0 6b2f 82c1 dba6 82c1     ......../k......
    855c:	4c41 82c2 bcff 82c2 2de2 82c3 9ee9 82c3     AL.......-......
    856c:	1014 82c4 8163 82c4 f2d6 82c4 646e 82c5     ....c.......nd..
    857c:	d62a 82c5 480b 82c6 ba10 82c6 2c3a 82c7     *....H......:,..
    858c:	9e89 82c7 10fc 82c8 8394 82c8 f651 82c8     ............Q...
    859c:	6933 82c9 dc3a 82c9 4f66 82ca c2b7 82ca     3i..:...fO......
    85ac:	362e 82cb a9c9 82cb 1d8b 82cc 9171 82cc     .6..........q...
    85bc:	057d 82cd 79af 82cd ee07 82cd 6284 82ce     }....y.......b..
    85cc:	d727 82ce 4bf0 82cf c0de 82cf 35f3 82d0     '....K.......5..
    85dc:	ab2e 82d0 208f 82d1 9617 82d1 0bc4 82d2     ..... ..........
    85ec:	8198 82d2 f793 82d2 6db4 82d3 e3fc 82d3     .........m......
    85fc:	5a6a 82d4 d0ff 82d4 47bb 82d5 be9e 82d5     jZ.......G......
    860c:	35a8 82d6 acd9 82d6 2431 82d7 9bb0 82d7     .5......1$......
    861c:	1357 82d8 8b25 82d8 031a 82d9 7b37 82d9     W...%.......7{..
    862c:	f37b 82d9 6be7 82da e47b 82da 5d37 82db     {....k..{...7]..
    863c:	d61b 82db 4f26 82dc c85a 82dc 41b5 82dd     ....&O..Z....A..
    864c:	bb39 82dd 34e6 82de aeba 82de 28b7 82df     9....4.......(..
    865c:	a2dd 82df 1d2b 82e0 97a2 82e0 1241 82e1     ....+.......A...
    866c:	8d0a 82e1 07fb 82e2 8315 82e2 fe59 82e2     ............Y...
    867c:	79c5 82e3 f55b 82e3 711a 82e4 ed03 82e4     .y..[....q......
    868c:	6915 82e5 e550 82e5 61b5 82e6 de44 82e6     .i..P....a..D...
    869c:	5afd 82e7 d7e0 82e7 54ec 82e8 d223 82e8     .Z.......T..#...
    86ac:	4f84 82e9 cd0f 82e9 4ac4 82ea c8a4 82ea     .O.......J......
    86bc:	46ae 82eb c4e3 82eb 4342 82ec c1cc 82ec     .F......BC......
    86cc:	4081 82ed bf61 82ed 3e6c 82ee bda1 82ee     .@..a...l>......
    86dc:	3d02 82ef bc8f 82ef 3c46 82f0 bc29 82f0     .=......F<..)...
    86ec:	3c37 82f1 bc72 82f1 3cd7 82f2 bd69 82f2     7<..r....<..i...
    86fc:	3e26 82f3 bf0f 82f3 4024 82f4 c166 82f4     &>......$@..f...
    870c:	42d3 82f5 c46d 82f5 4633 82f6 c826 82f6     .B..m...3F..&...
    871c:	4a45 82f7 cc91 82f7 4f09 82f8 d1af 82f8     EJ.......O......
    872c:	5481 82f9 d780 82f9 5aad 82fa de06 82fa     .T.......Z......
    873c:	618d 82fb e541 82fb 6923 82fc ed32 82fc     .a..A...#i..2...
    874c:	716f 82fd f5d9 82fd 7a72 82fe ff38 82fe     oq......rz..8...
    875c:	842c 82ff 094f 8300 8e9f 8300 141e 8301     ,...O...........
    876c:	99cc 8301 1fa7 8302 a5b2 8302 2beb 8303     .............+..
    877c:	b253 8303 38e9 8304 bfaf 8304 46a3 8305     S....8.......F..
    878c:	cdc7 8305 551a 8306 dc9d 8306 644f 8307     .....U......Od..
    879c:	ec30 8307 7441 8308 fc82 8308 84f2 8309     0...At..........
    87ac:	0d93 830a 9663 830a 1f64 830b a895 830b     ....c...d.......
    87bc:	31f6 830c bb87 830c 454a 830d cf3c 830d     .1......JE..<...
    87cc:	5960 830e e3b4 830e 6e39 830f f8f0 830f     `Y......9n......
    87dc:	83d7 8310 0ef0 8311 9a3a 8311 25b5 8312     ........:....%..
    87ec:	b162 8312 3d41 8313 c951 8313 5593 8314     b...A=..Q....U..
    87fc:	e207 8314 6eae 8315 fb86 8315 8891 8316     .....n..........
    880c:	15ce 8317 a33d 8317 30df 8318 beb4 8318     ....=....0......
    881c:	4cbc 8319 daf6 8319 6963 831a f804 831a     .L......ci......
    882c:	86d8 831b 15df 831c a51a 831c 3488 831d     .............4..
    883c:	c42a 831d 53ff 831e e409 831e 7446 831f     *....S......Ft..
    884c:	04b8 8320 955d 8320 2637 8321 b746 8321     .. .]. .7&!.F.!.
    885c:	4889 8322 da00 8322 6bad 8323 fd8e 8323     .H"..."..k#...#.
    886c:	8fa5 8324 21f0 8325 b471 8325 4726 8326     ..$..!%.q.%.&G&.
    887c:	da12 8326 6d33 8327 0089 8328 9416 8328     ..&.3m'...(...(.
    888c:	27d8 8329 bbd0 8329 4fff 832a e463 832a     .')...)..O*.c.*.
    889c:	78fe 832b 0dd0 832c a2d8 832c 3817 832d     .x+...,...,..8-.
    88ac:	cd8d 832d 6339 832e f91d 832e 8f38 832f     ..-.9c......8./.
    88bc:	258a 8330 bc13 8330 52d5 8331 e9cd 8331     .%0...0..R1...1.
    88cc:	80fe 8332 1866 8333 b007 8333 47e0 8334     ..2.f.3...3..G4.
    88dc:	dff1 8334 783a 8335 10bc 8336 a976 8336     ..4.:x5...6.v.6.
    88ec:	4269 8337 db96 8337 74fb 8338 0e99 8339     iB7...7..t8...9.
    88fc:	a870 8339 4281 833a dccc 833a 7750 833b     p.9..B:...:.Pw;.
    890c:	120e 833c ad05 833c 4837 833d e3a3 833d     ..<...<.7H=...=.
    891c:	7f49 833e 1b2a 833f b745 833f 539a 8340     I.>.*.?.E.?..S@.
    892c:	f02b 8340 8cf6 8341 29fd 8342 c73e 8342     +.@...A..)B.>.B.
    893c:	64bb 8343 0274 8344 a067 8344 3e97 8345     .dC.t.D.g.D..>E.
    894c:	dd03 8345 7baa 8346 1a8d 8347 b9ad 8347     ..E..{F...G...G.
    895c:	5909 8348 f8a2 8348 9877 8349 3889 834a     .YH...H.w.I..8J.
    896c:	d8d8 834a 7964 834b 1a2d 834c bb33 834c     ..J.dyK.-.L.3.L.
    897c:	5c77 834d fdf9 834d 9fb8 834e 41b5 834f     w\M...M...N..AO.
    898c:	e3f0 834f 8669 8350 2921 8351 cc17 8351     ..O.i.P.!)Q...Q.
    899c:	6f4b 8352 12be 8353 b670 8353 5a61 8354     KoR...S.p.S.aZT.
    89ac:	fe91 8354 a300 8355 47af 8356 ec9e 8356     ..T...U..GV...V.
    89bc:	91cc 8357 3739 8358 dce7 8358 82d5 8359     ..W.97X...X...Y.
    89cc:	2903 835a cf72 835a 7621 835b 1d11 835c     .)Z.r.Z.!v[...\.
    89dc:	c442 835c 6bb4 835d 1367 835e bb5b 835e     B.\..k].g.^.[.^.
    89ec:	6391 835f 0c08 8360 b4c1 8360 5dbc 8361     .c_...`...`..]a.
    89fc:	06f9 8362 b079 8362 5a3a 8363 043e 8364     ..b.y.b.:Zc.>.d.
    8a0c:	ae85 8364 590f 8365 03dc 8366 aeeb 8366     ..d..Ye...f...f.
    8a1c:	5a3e 8367 05d5 8368 b1af 8368 5dcc 8369     >Zg...h...h..]i.
    8a2c:	0a2e 836a b6d4 836a 63be 836b 10ec 836c     ..j...j..ck...l.
    8a3c:	be5f 836c 6c17 836d 1a13 836e c855 836e     _.l..lm...n.U.n.
    8a4c:	76db 836f 25a7 8370 d4b8 8370 8410 8371     .vo..%p...p...q.
    8a5c:	33ac 8372 e38f 8372 93b8 8373 4428 8374     .3r...r...s.(Dt.
    8a6c:	f4de 8374 a5da 8375 571d 8376 08a8 8377     ..t...u..Wv...w.
    8a7c:	ba79 8377 6c92 8378 1ef2 8379 d19a 8379     y.w..lx...y...y.
    8a8c:	8489 837a 37c1 837b eb40 837b 9f09 837c     ..z..7{.@.{...|.
    8a9c:	5319 837d 0772 837e bc14 837e 70ff 837f     .S}.r.~...~..p..
    8aac:	2634 8380 dbb1 8380 9178 8381 4789 8382     4&......x....G..
    8abc:	fde4 8382 b488 8383 6b77 8384 22b1 8385     ........wk..."..
    8acc:	da35 8385 9203 8386 4a1d 8387 0282 8388     5........J......
    8adc:	bb32 8388 742d 8389 2d74 838a e707 838a     2...-t..t-......
    8aec:	a0e6 838b 5b11 838c 1589 838d d04d 838d     .....[......M...
    8afc:	8b5e 838e 46bc 838f 0267 8390 be5f 8390     ^....F..g..._...
    8b0c:	7aa5 8391 3739 8392 f41a 8392 b149 8393     .z..97......I...
    8b1c:	6ec7 8394 2c93 8395 eaae 8395 a917 8396     .n...,..........
    8b2c:	67d0 8397 26d8 8398 e62f 8398 a5d6 8399     .g...&../.......
    8b3c:	65cc 839a 2613 839b e6a9 839b a790 839c     .e...&..........
    8b4c:	68c8 839d 2a50 839e ec2a 839e ae54 839f     .h..P*..*...T...
    8b5c:	70d0 83a0 339d 83a1 f6bc 83a1 ba2e 83a2     .p...3..........
    8b6c:	7df1 83a3 4206 83a4 066f 83a5 cb2a 83a5     .}...B..o...*...
    8b7c:	9038 83a6 5599 83a7 1b4d 83a8 e155 83a8     8....U..M...U...
    8b8c:	a7b1 83a9 6e61 83aa 3565 83ab fcbe 83ab     ....an..e5......
    8b9c:	c46b 83ac 8c6d 83ad 54c4 83ae 1d71 83af     k...m....T..q...
    8bac:	e673 83af afca 83b0 7978 83b1 437b 83b2     s.......xy..{C..
    8bbc:	0dd5 83b3 d886 83b3 a38d 83b4 6eeb 83b5     .............n..
    8bcc:	3aa0 83b6 06ad 83b7 d312 83b7 9fce 83b8     .:..............
    8bdc:	6ce3 83b9 3a4f 83ba 0815 83bb d633 83bb     .l..O:......3...
    8bec:	a4aa 83bc 737a 83bd 42a4 83be 1227 83bf     ....zs...B..'...
    8bfc:	e205 83bf b23c 83c0 82ce 83c1 53ba 83c2     ....<........S..
    8c0c:	2501 83c3 f6a3 83c3 c8a0 83c4 9af9 83c5     .%..............
    8c1c:	6dae 83c6 40bf 83c7 142b 83c8 e7f5 83c8     .m...@..+.......
    8c2c:	bc1b 83c9 909d 83ca 657d 83cb 3abb 83cc     ........}e...:..
    8c3c:	1056 83cd e64f 83cd bca6 83ce 935b 83cf     V...O.......[...
    8c4c:	6a6f 83d0 41e2 83d1 19b4 83d2 f1e5 83d2     oj...A..........
    8c5c:	ca76 83d3 a366 83d4 7cb7 83d5 5668 83d6     v...f....|..hV..
    8c6c:	307a 83d7 0aec 83d8 e5c0 83d8 c0f5 83d9     z0..............
    8c7c:	9c8b 83da 7883 83db 54de 83dc 319b 83dd     .....x...T...1..
    8c8c:	0eba 83de ec3c 83de ca22 83df a86a 83e0     ....<..."...j...
    8c9c:	8717 83e1 6627 83e2 459c 83e3 2575 83e4     ....'f...E..u%..
    8cac:	05b2 83e5 e655 83e5 c75d 83e6 a8ca 83e7     ....U...].......
    8cbc:	8a9d 83e8 6cd6 83e9 4f76 83ea 327c 83eb     .....l..vO..|2..
    8ccc:	15e9 83ec f9bd 83ec ddf8 83ed c29b 83ee     ................
    8cdc:	a7a7 83ef 8d1a 83f0 72f6 83f1 593a 83f2     .........r..:Y..
    8cec:	3fe8 83f3 26ff 83f4 0e7f 83f5 f66a 83f5     .?...&......j...
    8cfc:	debf 83f6 c77e 83f7 b0a8 83f8 9a3d 83f9     ....~.......=...
    8d0c:	843d 83fa 6ea9 83fb 5981 83fc 44c5 83fd     =....n...Y...D..
    8d1c:	3076 83fe 1c93 83ff 091e 8400 f616 8400     v0..............
    8d2c:	e37c 8401 d14f 8402 bf91 8403 ae41 8404     |...O.......A...
    8d3c:	9d61 8405 8cef 8406 7ced 8407 6d5b 8408     a........|..[m..
    8d4c:	5e39 8409 4f87 840a 4146 840b 3376 840c     9^...O..FA..v3..
    8d5c:	2617 840d 192a 840e 0caf 840f 00a6 8410     .&..*...........
    8d6c:	f510 8410 e9ed 8411 df3c 8412 d500 8413     ........<.......
    8d7c:	cb37 8414 c1e2 8415 b902 8416 b097 8417     7...............
    8d8c:	a8a1 8418 a120 8419 9a15 841a 9380 841b     .... ...........
    8d9c:	8d61 841c 87ba 841d 8289 841e 7dd0 841f     a............}..
    8dac:	798f 8420 75c5 8421 7274 8422 6f9c 8423     .y ..u!.tr"..o#.
    8dbc:	6d3d 8424 6b58 8425 69ec 8426 68fa 8427     =m$.Xk%..i&..h'.
    8dcc:	6883 8428 6887 8429 6906 842a 6a00 842b     .h(..h)..i*..j+.
    8ddc:	6b76 842c 6d68 842d 6fd7 842e 72c3 842f     vk,.hm-..o...r/.
    8dec:	762c 8430 7a13 8431 7e78 8432 835b 8433     ,v0..z1.x~2.[.3.
    8dfc:	88bd 8434 8e9d 8435 94fe 8436 9bde 8437     ..4...5...6...7.
    8e0c:	a33e 8438 ab1f 8439 b380 843a bc63 843b     >.8...9...:.c.;.
    8e1c:	c5c7 843c cfae 843d da16 843e e502 843f     ..<...=...>...?.
    8e2c:	f070 8440 fc63 8441 08d9 8443 15d3 8444     p.@.c.A...C...D.
    8e3c:	2352 8445 3155 8446 3fdf 8447 4eee 8448     R#E.U1F..?G..NH.
    8e4c:	5e83 8449 6e9f 844a 7f41 844b 906b 844c     .^I..nJ.A.K.k.L.
    8e5c:	a21d 844d b457 844e c71a 844f da65 8450     ..M.W.N...O.e.P.
    8e6c:	ee3a 8451 0298 8453 1781 8454 2cf4 8455     :.Q...S...T..,U.
    8e7c:	42f2 8456 597b 8457 7091 8458 8832 8459     .BV.{YW..pX.2.Y.
    8e8c:	a060 845a b91b 845b d263 845c ec39 845d     `.Z...[.c.\.9.].
    8e9c:	069e 845f 2191 8460 3d13 8461 5925 8462     .._..!`..=a.%Yb.
    8eac:	75c6 8463 92f8 8464 b0bb 8465 cf0f 8466     .uc...d...e...f.
    8ebc:	edf5 8467 0d6d 8469 2d77 846a 4e15 846b     ..g.m.i.w-j..Nk.
    8ecc:	6f45 846c 910a 846d b363 846e d650 846f     Eol...m.c.n.P.o.
    8edc:	f9d3 8470 1deb 8472 429a 8473 67df 8474     ..p...r..Bs..gt.
    8eec:	8dbb 8475 b42f 8476 db3a 8477 02de 8479     ..u./.v.:.w...y.
    8efc:	2b1a 847a 53f0 847b 7d60 847c a769 847d     .+z..S{.`}|.i.}.
    8f0c:	d20e 847e fd4e 847f 2929 8481 55a0 8482     ..~.N...))...U..
    8f1c:	82b4 8483 b065 8484 deb4 8485 0da0 8487     ....e...........
    8f2c:	3d2b 8488 6d55 8489 9e1f 848a cf88 848b     +=..Um..........
    8f3c:	0192 848d 343d 848e 678a 848f 9b78 8490     ....=4...g..x...
    8f4c:	d009 8491 053c 8493 3b13 8494 718f 8495     ....<....;...q..
    8f5c:	a8ae 8496 e073 8497 18dd 8499 51ed 849a     ....s........Q..
    8f6c:	8ba3 849b c601 849c 0106 849e 3cb3 849f     .............<..
    8f7c:	7909 84a0 b608 84a1 f3b1 84a2 3204 84a4     .y...........2..
    8f8c:	7101 84a5 b0aa 84a6 f0ff 84a7 3200 84a9     .q...........2..
    8f9c:	73ae 84aa b609 84ab f912 84ac 3cca 84ae     .s...........<..
    8fac:	8131 84af c648 84b0 0c0f 84b2 5286 84b3     1...H........R..
    8fbc:	99af 84b4 e18a 84b5 2a17 84b7 7357 84b8     .........*..Ws..
    8fcc:	bd4b 84b9 07f3 84bb 5350 84bc 9f62 84bd     K.......PS..b...
    8fdc:	ec2a 84be 39a8 84c0 87de 84c1 d6cb 84c2     *....9..........
    8fec:	2671 84c4 76cf 84c5 c7e7 84c6 19b9 84c8     q&...v..........
    8ffc:	6c45 84c9 bf8d 84ca 1390 84cc 6850 84cd     El..........Ph..
    900c:	bdcd 84ce 1408 84d0 6b01 84d1 c2b9 84d2     .........k......
    901c:	1b31 84d4 7469 84d5 ce61 84d6 291b 84d8     1...it..a....)..
    902c:	8498 84d9 e0d6 84da 3dd9 84dc 9b9f 84dd     .........=......
    903c:	fa29 84de 597a 84e0 b990 84e1 1a6c 84e3     )...zY......l...
    904c:	7c10 84e4 de7c 84e5 41b0 84e7 a5ad 84e8     .|..|....A......
    905c:	0a75 84ea 7007 84eb d664 84ec 3d8d 84ee     u....p..d....=..
    906c:	a583 84ef 0e46 84f1 77d7 84f2 e237 84f3     ....F....w..7...
    907c:	4d66 84f5 b965 84f6 2634 84f8 93d6 84f9     fM..e...4&......
    908c:	0249 84fb 718f 84fc e1a9 84fd 5297 84ff     I....q.......R..
    909c:	c45a 8500 36f3 8502 aa62 8503 1ea8 8505     Z....6..b.......
    90ac:	93c7 8506 09be 8508 808e 8509 f838 850a     ............8...
    90bc:	70bd 850c ea1e 850d 645b 850f df76 8510     .p......[d..v...
    90cc:	5b6e 8512 d845 8513 55fb 8515 d491 8516     n[..E....U......
    90dc:	5408 8518 d461 8519 559d 851b d7bb 851c     .T..a....U......
    90ec:	5abe 851e dea5 851f 6373 8521 e926 8522     .Z......sc!.&.".
    90fc:	6fc1 8524 f744 8525 7faf 8527 0905 8529     .o$.D.%...'...).
    910c:	9344 852a 1e6f 852c aa87 852d 378b 852f     D.*.o.,...-..7/.
    911c:	c57c 8530 545d 8532 e42d 8533 74ed 8535     |.0.]T2.-.3..t5.
    912c:	069e 8537 9941 8538 2cd7 853a c161 853b     ..7.A.8..,:.a.;.
    913c:	56df 853d ed53 853e 84bd 8540 1d1e 8542     .V=.S.>...@...B.
    914c:	b677 8543 50c9 8545 ec14 8546 885b 8548     w.C..PE...F.[.H.
    915c:	259d 854a c3dc 854b 6317 854d 0352 854f     .%J...K..cM.R.O.
    916c:	a48b 8550 46c5 8552 e9ff 8553 8e3c 8555     ..P..FR...S.<.U.
    917c:	337b 8557 d9bf 8558 8107 855a 2954 855c     {3W...X...Z.T)\.
    918c:	d2a9 855d 7d05 855f 286a 8561 d4d8 8562     ..]..}_.j(a...b.
    919c:	8250 8564 30d5 8566 e065 8567 9103 8569     P.d..0f.e.g...i.
    91ac:	42b0 856b f56b 856c a938 856e 5e15 8570     .Bk.k.l.8.n..^p.
    91bc:	1405 8572 cb09 8573 8321 8575 3c4e 8577     ..r...s.!.u.N<w.
    91cc:	f692 8578 b1ed 857a 6e61 857c 2bee 857e     ..x...z.an|..+~.
    91dc:	ea96 857f aa5a 8581 6b3b 8583 2d39 8585     ....Z...;k..9-..
    91ec:	f056 8586 b493 8588 79f1 858a 4071 858c     V........y..q@..
    91fc:	0814 858e d0dc 858f 9ac9 8591 65dc 8593     .............e..
    920c:	3217 8595 ff7b 8596 ce08 8598 9dc0 859a     .2..{...........
    921c:	6ea5 859c 40b7 859e 13f7 85a0 e866 85a1     .n...@......f...
    922c:	be06 85a3 94d8 85a5 6cdd 85a7 4616 85a9     .........l...F..
    923c:	2084 85ab fc29 85ac d906 85ae b71b 85b0     . ..)...........
    924c:	966b 85b2 76f6 85b4 58bd 85b6 3bc3 85b8     k....v...X...;..
    925c:	2007 85ba 058b 85bc ec51 85bd d459 85bf     . ......Q...Y...
    926c:	bda6 85c1 a838 85c3 9410 85c5 8130 85c7     ....8.......0...
    927c:	6f98 85c9 5f4c 85cb 504b 85cd 4296 85cf     .o..L_..KP...B..
    928c:	3630 85d1 2b1a 85d3 2154 85d5 18e0 85d7     06...+..T!......
    929c:	11c0 85d9 0bf5 85db 0780 85dd 0463 85df     ............c...
    92ac:	029e 85e1 0234 85e3 0325 85e5 0574 85e7     ....4...%...t...
    92bc:	0920 85e9 0e2d 85eb 149b 85ed 1c6c 85ef      ...-.......l...
    92cc:	25a0 85f1 303a 85f3 3c3b 85f5 49a5 85f7     .%..:0..;<...I..
    92dc:	5878 85f9 68b6 85fb 7a62 85fd 8d7b 85ff     xX...h..bz..{...
    92ec:	a204 8601 b7ff 8603 cf6c 8605 e84d 8607     ........l...M...
    92fc:	02a4 860a 1e72 860c 3bb9 860e 5a7b 8610     ....r....;..{Z..
    930c:	7ab8 8612 9c73 8614 bfac 8616 e466 8618     .z..s.......f...
    931c:	0aa3 861b 3263 861d 5ba8 861f 8675 8621     ....c2...[..u.!.
    932c:	b2ca 8623 e0a9 8625 1014 8628 410c 862a     ..#...%...(..A*.
    933c:	7394 862c a7ac 862e dd57 8630 1496 8633     .s,.....W.0...3.
    934c:	4d6a 8635 87d7 8637 c3dc 8639 017d 863c     jM5...7...9.}.<.
    935c:	40ba 863e 8196 8640 c411 8642 082f 8645     .@>...@...B./.E.
    936c:	4df1 8647 9558 8649 de66 864b 291d 864e     .MG.X.I.f.K..)N.
    937c:	757f 8650 c38e 8652 134b 8655 64b9 8657     .uP...R.K.U..dW.
    938c:	b7d9 8659 0cad 865c 6337 865e bb79 8660     ..Y...\.7c^.y.`.
    939c:	1574 8663 712b 8665 cea0 8667 2dd4 866a     t.c.+qe...g..-j.
    93ac:	8eca 866c f183 866e 5601 8671 bc46 8673     ..l...n..Vq.F.s.
    93bc:	2455 8676 8e2f 8678 f9d6 867a 674d 867d     U$v./.x...z.Mg}.
    93cc:	d695 867f 47b0 8682 baa0 8684 2f68 8687     .....G......h/..
    93dc:	a60a 8689 1e87 868c 98e2 868e 151d 8691     ................
    93ec:	9339 8693 133a 8696 9521 8698 18f0 869b     9...:...!.......
    93fc:	9eaa 869d 2651 86a0 afe7 86a2 3b6e 86a5     ....Q&......n;..
    940c:	c8e8 86a7 5858 86aa e9c0 86ac 7d22 86af     ....XX......"}..
    941c:	1281 86b2 a9de 86b4 433d 86b7 de9f 86b9     ........=C......
    942c:	7c06 86bc 1b76 86bf bcf0 86c1 6077 86c4     .|..v.......w`..
    943c:	060d 86c7 adb5 86c9 5771 86cc 0343 86cf     ........qW..C...
    944c:	b12e 86d1 6135 86d4 135a 86d7 c79f 86d9     ....5a..Z.......
    945c:	7e07 86dc 3694 86df f149 86e1 ae29 86e4     .~...6..I...)...
    946c:	6d36 86e7 2e73 86ea f1e2 86ec b786 86ef     6m..s...........
    947c:	7f62 86f2 4977 86f5 15ca 86f8 e45d 86fa     b...wI......]...
    948c:	b531 86fd 884b 8700 5dad 8703 3559 8706     1...K....]..Y5..
    949c:	0f52 8709 eb9c 870b ca38 870e ab2b 8711     R.......8...+...
    94ac:	8e75 8714 741c 8717 5c21 871a 4687 871d     u....t..!\...F..
    94bc:	3351 8720 2282 8723 141d 8726 0826 8729     Q3 .."#...&.&.).
    94cc:	fe9e 872b f78a 872e f2eb 8731 f0c6 8734     ..+.......1...4.
    94dc:	f11d 8737 f3f3 873a f94c 873d 012a 8741     ..7...:.L.=.*.A.
    94ec:	0b91 8744 1884 8747 2806 874a 3a1b 874d     ..D...G..(J..:M.
    94fc:	4ec5 8750 6607 8753 7fe6 8756 9c64 8759     .NP..fS...V.d.Y.
    950c:	bb85 875c dd4c 875f 01bc 8763 28da 8766     ..\.L._...c..(f.
    951c:	52a7 8769 7f28 876c ae60 876f e053 8772     .Ri.(.l.`.o.S.r.
    952c:	1504 8776 4c77 8779 86ae 877c c3af 877f     ..v.wLy...|.....
    953c:	037c 8783 4618 8786 8b89 8789 d3d0 878c     |....F..........
    954c:	1ef3 8790 6cf5 8793 bdd8 8796 11a3 879a     .....l..........
    955c:	6857 879d c1f9 87a0 1e8c 87a4 7e16 87a7     Wh...........~..
    956c:	e099 87aa 4619 87ae ae9a 87b1 1a21 87b5     .....F......!...
    957c:	88b2 87b8 fa4f 87bb 6efe 87bf e6c3 87c2     ....O....n......
    958c:	61a2 87c6 df9e 87c9 60bc 87cd e501 87d0     .a.......`......
    959c:	6c70 87d4 f70d 87d7 84de 87db 15e6 87df     pl..............
    95ac:	aa2a 87e2 41ae 87e6 dc77 87e9 7a88 87ed     *....A..w....z..
    95bc:	1be7 87f1 c098 87f4 68a0 87f8 1403 87fc     .........h......
    95cc:	c2c5 87ff 74ec 8803 2a7c 8807 e379 880a     .....t..|*..y...
    95dc:	9fea 880e 5fd1 8812 2335 8816 ea19 8819     ....._..5#......
    95ec:	b484 881d 8279 8821 53fe 8825 2918 8829     ....y.!..S%..)).
    95fc:	01cc 882d de1e 8830 be14 8834 a1b4 8838     ..-...0...4...8.
    960c:	8901 883c 7402 8840 62bc 8844 5534 8848     ..<..t@..bD.4UH.
    961c:	4b6f 884c 4573 8850 4345 8854 44eb 8858     oKL.sEP.ECT..DX.
    962c:	4a6a 885c 53c7 8860 6109 8864 7234 8868     jJ\..S`..ad.4rh.
    963c:	874f 886c a05f 8870 bd6a 8874 de76 8878     O.l._.p.j.t.v.x.
    964c:	0388 887d 2ca7 8881 59d8 8885 8b21 8889     ..}..,...Y..!...
    965c:	c088 888d fa14 8891 37cb 8896 79b2 889a     .........7...y..
    966c:	bfd0 889e 0a2b 88a3 58c9 88a7 abb1 88ab     ....+....X......
    967c:	02ea 88b0 5e78 88b4 be64 88b8 22b3 88bd     ....x^..d...."..
    968c:	8b6d 88c1 f897 88c5 6a39 88ca e059 88ce     m.......9j..Y...
    969c:	5afe 88d3 da2f 88d7 5df3 88dc e651 88e0     .Z../....]..Q...
    96ac:	734f 88e5 04f5 88ea 9b4b 88ee 3656 88f3     Os......K...V6..
    96bc:	d61f 88f7 7aad 88fc 2407 8901 d234 8905     .....z...$..4...
    96cc:	853c 890a 3d27 890f f9fc 8913 bbc3 8918     <...'=..........
    96dc:	8283 891d 4e44 8922 1f0f 8927 f4eb 892b     ....DN"...'...+.
    96ec:	cfe0 8930 aff6 8935 9535 893a 7fa6 893f     ..0...5.5.:...?.
    96fc:	6f50 8944 643c 8949 5e72 894e 5dfb 8953     PoD.<dI.r^N..]S.
    970c:	62e0 8958 6d28 895d 7cdd 8962 9207 8967     .bX.(m]..|b...g.
    971c:	acb0 896c ccdf 8971 f29e 8976 1df6 897c     ..l...q...v...|.
    972c:	4ef0 8981 8596 8986 c1ef 898b 0407 8991     .N..............
    973c:	4be6 8996 9996 899b ed20 89a0 468e 89a6     .K...... ....F..
    974c:	a5ea 89ab 0b3e 89b1 7693 89b6 e7f3 89bb     ....>....v......
    975c:	5f69 89c1 dcff 89c6 60bf 89cc eab3 89d1     i_.......`......
    976c:	7ae7 89d7 1163 89dd ae34 89e2 5163 89e8     .z..c...4...cQ..
    977c:	fafc 89ed ab09 89f3 6195 89f9 1ead 89ff     .........a......
    978c:	e259 8a04 aca7 8a0a 7da2 8a10 5554 8a16     Y........}..TU..
    979c:	33ca 8a1c 190f 8a22 0530 8a28 f837 8a2d     .3....".0.(.7.-.
    97ac:	f231 8a33 f32b 8a39 fb30 8a3f 0a4d 8a46     1.3.+.9.0.?.M.F.
    97bc:	208e 8a4c 3e00 8a52 62af 8a58 8ea9 8a5e     . L..>R..bX...^.
    97cc:	c1fa 8a64 fcaf 8a6a 3ed6 8a71 887c 8a77     ..d...j..>q.|.w.
    97dc:	d9ae 8a7d 327a 8a84 92ee 8a8a fb17 8a90     ..}.z2..........
    97ec:	6b02 8a97 e2c0 8a9d 625c 8aa4 e9e7 8aaa     .k......\b......
    97fc:	796e 8ab1 10ff 8ab8 b0aa 8abe 587e 8ac5     ny..........~X..
    980c:	0889 8acc c0db 8ad2 8183 8ad9 4a90 8ae0     .............J..
    981c:	1c12 8ae7 f619 8aed d8b4 8af4 c3f5 8afb     ................
    982c:	b7ea 8b02 b4a4 8b09 ba35 8b10 c8ac 8b17     ........5.......
    983c:	e01a 8b1e 0091 8b26 2a21 8b2d 5cdd 8b34     ......&.!*-..\4.
    984c:	98d5 8b3b de1b 8b42 2cc1 8b4a 84da 8b51     ..;...B..,J...Q.
    985c:	e677 8b58 51aa 8b60 c687 8b67 4521 8b6f     w.X..Q`...g.!Eo.
    986c:	cd89 8b76 5fd4 8b7e fc15 8b85 a25f 8b8d     ..v.._~....._...
    987c:	52c7 8b95 0d5f 8b9d d23d 8ba4 a174 8bac     .R.._...=...t...
    988c:	7b1a 8bb4 5f42 8bbc 4e03 8bc4 4771 8bcc     .{..B_...N..qG..
    989c:	4ba2 8bd4 5aab 8bdc 74a2 8be4 999f 8bec     .K...Z...t......
    98ac:	c9b5 8bf4 04fe 8bfd 4b8f 8c05 9d7f 8c0d     .........K......
    98bc:	fae6 8c15 63db 8c1e d876 8c26 58d0 8c2f     .....c..v.&..X/.
    98cc:	e500 8c37 7d20 8c40 2147 8c49 d190 8c51     ..7. }@.G!I...Q.
    98dc:	8e13 8c5a 56ea 8c63 2c30 8c6c 0dfe 8c75     ..Z..Vc.0,l...u.
    98ec:	fc70 8c7d f79f 8c86 ffa7 8c8f 14a4 8c99     p.}.............
    98fc:	36b1 8ca2 65ea 8cab a26b 8cb4 ec52 8cbd     .6...e..k...R...
    990c:	43ba 8cc7 a8c2 8cd0 1b88 8cda 9c28 8ce3     .C..........(...
    991c:	2ac2 8ced c774 8cf6 725c 8d00 2b9b 8d0a     .*..t...\r...+..
    992c:	f351 8d13 c99c 8d1d ae9e 8d27 a277 8d31     Q.........'.w.1.
    993c:	a549 8d3b b735 8d45 d85d 8d4f 08e3 8d5a     I.;.5.E.].O...Z.
    994c:	48eb 8d64 9897 8d6e f80b 8d78 676b 8d83     .Hd...n...x.kg..
    995c:	e6dc 8d8d 7682 8d98 1682 8da3 c703 8dad     .....v..........
    996c:	882a 8db8 5a1e 8dc3 3d06 8dce 310a 8dd9     *....Z...=...1..
    997c:	3652 8de4 4d07 8def 7551 8dfa af5a 8e05     R6...M..Qu..Z...
    998c:	fb4b 8e10 5951 8e1c c995 8e27 4c43 8e33     K...QY....'.CL3.
    999c:	e188 8e3e 898f 8e4a 4487 8e56 129e 8e62     ..>...J..DV...b.
    99ac:	f400 8e6d e8de 8e79 f168 8e85 0dcc 8e92     ..m...y.h.......
    99bc:	3e3c 8e9e 82ea 8eaa dc07 8eb6 49c6 8ec3     <>...........I..
    99cc:	cc5b 8ecf 63f9 8edc 10d4 8ee9 d323 8ef5     [....c......#...
    99dc:	ab1b 8f02 98f3 8f0f 9ce2 8f1c b721 8f29     ............!.).
    99ec:	e7e8 8f36 2f71 8f44 8df6 8f51 03b3 8f5f     ..6.q/D...Q..._.
    99fc:	90e3 8f6c 35c4 8f7a f292 8f87 c78c 8f95     ..l..5z.........
    9a0c:	b4f2 8fa3 bb03 8fb1 da00 8fbf 122b 8fce     ............+...
    9a1c:	63c7 8fdc cf18 8fea 5462 8ff9 f3ea 9007     .c......bT......
    9a2c:	adf7 9016 82d0 9025 72be 9034 7e0b 9043     ......%..r4..~C.
    9a3c:	a500 9052 e7e9 9061 4713 9071 c2cb 9080     ..R...a..Gq.....
    9a4c:	5b61 9090 1123 90a0 e463 90af d574 90bf     a[..#...c...t...
    9a5c:	e4a7 90cf 1253 90e0 5ecc 90f0 ca6a 9100     ....S....^..j...
    9a6c:	5584 9111 0075 9122 cb97 9132 b747 9143     .U..u."...2.G.C.
    9a7c:	c3e2 9154 f1c6 9165 4155 9177 b2ef 9188     ..T...e.UAw.....
    9a8c:	46f9 919a fdd7 91ab d7ee 91bd d5a8 91cf     .F..............
    9a9c:	f76d 91e1 3da7 91f4 a8c5 9206 3933 9219     m....=......39..
    9aac:	ef62 922b cbc3 923e ceca 9251 f8ec 9264     b.+...>...Q...d.
    9abc:	4aa0 9278 c45e 928b 66a2 929f 31e8 92b3     .Jx.^....f...1..
    9acc:	26b0 92c7 4578 92db 8ec5 92ef 031a 9304     .&..xE..........
    9adc:	a300 9318 6efe 932d 67a1 9342 8d75 9357     .....n-..gB.u.W.
    9aec:	e10a 936c 62f4 9382 13c5 9398 f416 93ad     ..l..b..........
    9afc:	0480 93c4 459e 93da b810 93f0 5c76 9407     .....E......v\..
    9b0c:	3375 941e 3db4 9435 7bdb 944c ee97 9463     u3...=5..{L...c.
    9b1c:	9697 947b 748f 9493 8932 94ab d53a 94c3     ..{..t..2...:...
    9b2c:	5962 94dc 1669 94f5 0d11 950e 3e1f 9527     bY..i........>'.
    9b3c:	aa5e 9540 5298 955a 379f 9574 5a46 958e     ^.@..RZ..7t.FZ..
    9b4c:	bb65 95a8 5bd6 95c3 3c7a 95de 5e34 95f9     e....[..z<..4^..
    9b5c:	c1eb 9614 688b 9630 5304 964c 8249 9668     .....h0..SL.I.h.
    9b6c:	f754 9684 b323 96a1 b6b6 96be 0315 96dc     T...#...........
    9b7c:	994b 96f9 7a69 9717 a785 9735 21b9 9754     K...iz....5..!T.
    9b8c:	ea26 9772 01f2 9792 6a48 97b1 2459 97d1     &.r.....Hj..Y$..
    9b9c:	315c 97f1 928e 9811 4931 9832 568f 9853     \1......1I2..VS.
    9bac:	bbf8 9874 7ac2 9896 944a 98b8 09f3 98db     ..t..z..J.......
    9bbc:	dd29 98fd 0f5d 9921 a20a 9944 96af 9968     )...].!...D...h.
    9bcc:	eed6 998c ac0f 99b1 cff3 99d6 5c23 99fc     ............#\..
    9bdc:	5248 9a22 b415 9a48 8346 9a6f c19d 9a96     HR"...H.F.o.....
    9bec:	70ea 9abe 9303 9ae6 29c9 9b0f 3728 9b38     .p.......)..(78.
    9bfc:	bd15 9b61 bd91 9b8b 3aa6 9bb6 366b 9be1     ..a......:..k6..
    9c0c:	b301 9c0c b296 9c38 3762 9c65 43ac 9c92     ......8.b7e..C..
    9c1c:	d9c5 9cbf fc0d 9ced acf0 9d1c eee8 9d4b     ..............K.
    9c2c:	c47d 9d7b 3046 9dac 34e6 9ddd d514 9e0e     }.{.F0...4......
    9c3c:	1391 9e41 f331 9e73 76d9 9ea7 a17b 9edb     ..A.1.s..v..{...
    9c4c:	761f 9f10 f7da 9f45 29d6 9f7c 0f4f 9fb3     .v....E..)|.O...
    9c5c:	ab93 9fea 0204 a023 1619 a05c eb5d a095     ......#...\.]...
    9c6c:	856e a0d0 e803 a10b 16e7 a148 15fe a185     n.........H.....
    9c7c:	e93f a1c2 94bf a201 1ca6 a241 853a a281     ?.........A.:...
    9c8c:	d2d8 a2c2 09f9 a305 2f30 a348 472e a38c     ........0/H..G..
    9c9c:	56c0 a3d1 62d0 a417 7067 a45e 84ae a4a6     .V...b..gp^.....
    9cac:	a4eb a4ef d689 a539 1f11 a585 8431 a5d1     ......9.....1...
    9cbc:	0bb9 a61f bb9e a66d 99fa a6bd ad0d a70e     ......m.........
    9ccc:	fb3e a760 8b1d a7b4 6362 a809 8af0 a85f     >.`.....bc...._.
    9cdc:	08d5 a8b7 e44a a90f 24b7 a96a d1b2 a9c5     ....J....$j.....
    9cec:	f2fe aa22 9091 aa81 b291 aae1 6158 ab43     ..".........XaC.
    9cfc:	a572 aba6 87a1 ac0b 10dc ac72 4a52 acda     r.........r.RJ..
    9d0c:	3d68 ad44 f3be adaf 772c ae1d d1c7 ae8c     h=D.....,w......
    9d1c:	0ddf aefe 3600 af71 54f6 afe6 75c9 b05d     .....6q..T...u].
    9d2c:	a3c2 b0d6 ea6a b151 558a b1cf f12c b24e     ....j.Q..U..,.N.
    9d3c:	c99d b2d0 eb69 b354 6362 b3db 3e9a b464     ....i.T.bc...>d.
    9d4c:	8a63 b4ef 5455 b57d aa46 b60d 9a4d b6a0     c...UT}.F...M...
    9d5c:	32c2 b736 823a b7ce 9787 b869 81b5 b907     .26.:.....i.....
    9d6c:	500c b9a8 1207 ba4c d756 baf2 afd9 bb9c     .P....L.V.......
    9d7c:	ab9e bc49 dad7 bcf9 4ddc bdad 1524 be64     ..I......M..$.d.
    9d8c:	413a bf1e e2be bfdb 0a56 c09d c8ac c161     :A......V.....a.
    9d9c:	2e63 c22a 4c0a c2f6 3216 c3c6 f0d5 c499     c.*..L...2......
    9dac:	985f c571 388d c64d e0e5 c72c a091 c810     _.q..8M...,.....
    9dbc:	8648 c8f8 a03d c9e4 fc13 cad4 a6bd cbc9     H...=...........
    9dcc:	ac75 ccc2 189d cdc0 f5ab cec1 4d0e cfc8     u............M..
    9ddc:	271b d0d3 8ae8 d1e2 7e3d d2f6 056c d40f     .'......=~..l...
    9dec:	233d d52c d8ce d64d 2576 d774 06a6 d89f     =#,...M.v%t.....
    9dfc:	77d0 d9ce 7248 db02 ed26 dc3a dd2f dd77     .w..Hr..&.:./.w.
    9e0c:	34bb deb9 e39b dffe d707 e148 f985 e296     .4........H.....
    9e1c:	32e0 e3e9 6816 e53f 7b4e e699 4bd6 e7f7     .2...h?.N{...K..
    9e2c:	b61d e958 93bc eabd bb75 ec25 0149 ed91     ..X.....u.%.I...
    9e3c:	3685 eeff 29d9 f070 a777 f1e3 7934 f359     .6...)p.w...4yY.
    9e4c:	66ae f4d1 357c f64b a957 f7c6 845a f943     .f..|5K.W...Z.C.
    9e5c:	8733 fac1 7162 fc40 017a fdc0 f563 ff3f     3...bq@.z...c.?.
    9e6c:	0a9d 00c0 fe86 023f 8e9e 03bf 78cd 053e     ......?......x>.
    9e7c:	7ba6 06bc 56a9 0839 ca84 09b4 9952 0b2e     .{...V9.....R...
    9e8c:	86cc 0ca6 5889 0e1c d627 0f8f c97b 1100     .....X..'...{...
    9e9c:	feb7 126e 448b 13da 6c44 1542 49e3 16a7     ..n..D..DlB..I..
    9eac:	b42a 1808 84b2 1966 97ea 1ac0 cd20 1c16     *.....f..... ...
    9ebc:	067b 1d69 28f9 1eb7 1c65 2001 cb45 2146     {.i..(..e.. E.F!
    9ecc:	22d1 2288 12da 23c5 8db8 24fd 8830 2631     ."."...#...$0.1&
    9edc:	f95a 2760 da8a 288b 2732 29b2 dcc3 2ad3     Z.`'...(2'.)...*
    9eec:	fa94 2bf0 81c3 2d09 7518 2e1d d8e5 2f2c     ...+...-.u....,/
    9efc:	b2f2 3037 0a55 313e e763 323f 538b 333d     ..70U.>1c.?2.S=3
    9f0c:	5943 3436 03ed 352b 5fc3 361b 79b8 3707     CY64..+5._.6.y.7
    9f1c:	5f6f 37ef 1f1b 38d3 c773 39b2 67a1 3a8e     o_.7...8s..9.g.:
    9f2c:	0f2b 3b66 cdea 3c39 b3f6 3d09 d19d 3dd5     +.f;..9<...=...=
    9f3c:	3754 3e9e f5aa 3f62 1d42 4024 bec6 40e1     T7.>..b?B.$@...@
    9f4c:	eadc 419b b224 4252 2529 4306 5462 43b6     ...A$.RB)%.CbT.C
    9f5c:	5027 4463 28aa 450d edf9 45b3 aff4 4657     'PcD.(.E...E..WF
    9f6c:	7e4b 46f8 6879 4796 7dc6 4831 cd3e 48c9     K~.Fyh.G.}1H>..H
    9f7c:	65b3 495f 55ba 49f2 abab 4a82 759d 4b10     .e_I.U.I...J.u.K
    9f8c:	c166 4b9b 9c9e 4c24 1497 4cab 3663 4d2f     f..K..$L...Lc6/M
    9f9c:	0ed4 4db1 aa76 4e30 1596 4eae 5c3e 4f29     ...Mv.0N...N>\)O
    9fac:	8a37 4fa2 ab0a 5019 ca00 508e f221 5101     7..O...P...P!..Q
    9fbc:	2e39 5173 88d4 51e2 0c42 5250 c298 52bb     9.sQ...QB.PR...R
    9fcc:	b5ae 5325 ef24 538d 785f 53f4 5a8e 5459     ..%S$..S_x.S.ZYT
    9fdc:	9ea8 54bc 4d6f 551e 6f6f 557e 0d02 55dd     ...ToM.Uoo~U...U
    9fec:	2e4e 563a db49 5695 1bb6 56f0 f72b 5748     N.:VI..V...V+.HW
    9ffc:	7510 57a0 9c9e 57f6 74e3 584b 04c2 589f     .u.W...W.tKX...X
    a00c:	52f3 58f1 6606 5942 4462 5992 f447 59e0     .R.X.fBYbD.YG..Y
    a01c:	7bcf 5a2e e0ef 5a7a 2977 5ac6 5b15 5b10     .{.Z..zZw).Z.[.[
    a02c:	7b52 5b59 8f99 5ba1 9d30 5be8 a940 5c2e     R{Y[...[0..[@..\
    a03c:	b8d2 5c73 d0d0 5cb7 f607 5cfa 2d28 5d3d     ..s\...\...\(-=]
    a04c:	7ac6 5d7e e35a 5dbe 6b41 5dfe 16c1 5e3d     .z~]Z..]Ak.]..=^
    a05c:	ea02 5e7a e919 5eb7 17fd 5ef4 7a92 5f2f     ..z^...^...^.z/_
    a06c:	14a3 5f6a e9e7 5fa3 fdfc 5fdc 546d 6015     ..j_..._..._mT.`
    a07c:	f0b1 604c d62a 6083 0826 60ba 89e1 60ef     ..L`*..`&..`...`
    a08c:	5e85 6124 8927 6158 0ccf 618c ec6f 61be     .^$a'.Xa...ao..a
    a09c:	2aec 61f1 cb1a 6222 cfba 6253 3b83 6284     .*.a.."b..Sb.;.b
    a0ac:	1118 62b4 5310 62e3 03f3 6312 263b 6340     ...b.S.b...c;&@c
    a0bc:	bc54 636d c89e 639a 4d6a 63c7 4cff 63f3     T.mc...cjM.c.L.c
    a0cc:	c995 641e c55a 6449 426f 6474 42eb 649e     ...dZ.IdoBtd.B.d
    a0dc:	c8d8 64c7 d637 64f0 6cfd 6519 8f16 6541     ...d7..d.l.e..Ae
    a0ec:	3e63 6569 7cba 6590 4beb 65b7 adb8 65dd     c>ie.|.e.K.e...e
    a0fc:	a3dd 6603 300d 6629 53f1 664e 112a 6673     ...f.0)f.SNf*.sf
    a10c:	6951 6697 5df6 66bb f0a3 66de 22d7 6702     Qi.f.].f...f.".g
    a11c:	f60d 6724 6bb6 6747 853e 6769 4408 678b     ..$g.kGg>.ig.D.g
    a12c:	a971 67ac b6cf 67cd 6d72 67ee cea4 680e     q..g...grm.g...h
    a13c:	dba7 682e 95b8 684e fe0e 686d 15da 688d     ...h..Nh..mh...h
    a14c:	de47 68ab 587b 68ca 8597 68e8 66b5 6906     G..h{X.h...h.f.i
    a15c:	fceb 6923 494a 6941 4cdd 695e 08ac 697b     ..#iJIAi.L^i..{i
    a16c:	7db7 6997 acfc 69b3 9775 69cf 3e15 69eb     .}.i...iu..i.>.i
    a17c:	a1cc 6a06 c386 6a21 a42a 6a3c 449b 6a57     ...j..!j*.<j.DWj
    a18c:	a5ba 6a71 c861 6a8b ad68 6aa5 55a2 6abf     ..qja..jh..j.U.j
    a19c:	c1e1 6ad8 f2ef 6af1 e997 6b0a a69e 6b23     ...j...j...k..#k
    a1ac:	2ac6 6b3c 76ce 6b54 8b71 6b6c 6969 6b84     .*<k.vTkq.lkii.k
    a1bc:	1169 6b9c 8425 6bb3 c24c 6bca cc8b 6be1     i..k%..kL..k...k
    a1cc:	a38a 6bf8 47f0 6c0f ba62 6c25 fb80 6c3b     ...k.G.lb.%l..;l
    a1dc:	0bea 6c52 ec3b 6c67 9d0c 6c7d 1ef6 6c93     ..Rl;.gl..}l...l
    a1ec:	728b 6ca8 985f 6cbd 9102 6cd2 5d00 6ce7     .r.l_..l...l.].l
    a1fc:	fce6 6cfb 713b 6d10 ba88 6d24 d950 6d38     ...l;q.m..$mP.8m
    a20c:	ce18 6d4c 995e 6d60 3ba2 6d74 b560 6d87     ..Lm^.`m.;tm`..m
    a21c:	0714 6d9b 3136 6dae 343d 6dc1 109e 6dd4     ...m61.m=4.m...m
    a22c:	c6cd 6de6 573b 6df9 c259 6e0b 0893 6e1e     ...m;W.mY..n...n
    a23c:	2a58 6e30 2812 6e42 0229 6e54 b907 6e65     X*0n.(Bn).Tn..en
    a24c:	4d11 6e77 beab 6e88 0e3a 6e9a 3c1e 6eab     .Mwn...n:..n.<.n
    a25c:	48b9 6ebc 3469 6ecd ff8b 6edd aa7c 6eee     .H.ni4.n...n|..n
    a26c:	3596 6eff a134 6f0f edad 6f1f 1b59 6f30     .5.n4..o...oY.0o
    a27c:	2a8c 6f40 1b9d 6f50 eedd 6f5f a49f 6f6f     .*@o..Po.._o..oo
    a28c:	3d35 6f7f b8ed 6f8e 1817 6f9e 5b00 6fad     5=.o...o...o.[.o
    a29c:	81f5 6fbc 8d42 6fcb 7d30 6fda 5209 6fe9     ...oB..o0}.o.R.o
    a2ac:	0c16 6ff8 ab9e 7006 30e8 7015 9c39 7023     ...o...p.0.p9.#p
    a2bc:	edd5 7031 2600 7040 44fd 704e 4b0e 705c     ..1p.&@p.DNp.K\p
    a2cc:	3874 706a 0d6e 7078 ca3c 7085 6f1d 7093     t8jpn.xp<..p.o.p
    a2dc:	fc4d 70a0 720a 70ae d08f 70bb 1818 70c9     M..p.r.p...p...p
    a2ec:	48df 70d6 631e 70e3 670d 70f0 54e5 70fd     .H.p.c.p.g.p.T.p
    a2fc:	2cdd 710a ef2c 7116 9c07 7123 33a5 7130     .,.q,..q..#q.30q
    a30c:	b63a 713c 23f9 7149 7d16 7155 c1c4 7161     :.<q.#Iq.}Uq..aq
    a31c:	f234 716d 0e98 717a 1722 7186 0c00 7192     4.mq..zq"..q...q
    a32c:	ed62 719d bb79 71a9 7671 71b5 1e78 71c1     b..qy..qqv.qx..q
    a33c:	b3bd 71cc 366b 71d8 a6af 71e3 04b5 71ef     ...qk6.q...q...q
    a34c:	50a6 71fa 8aaf 7205 b2f9 7210 c9ae 721b     .P.q...r...r...r
    a35c:	cef6 7226 c2fa 7231 a5e2 723c 77d6 7247     ..&r..1r..<r.wGr
    a36c:	38fd 7252 e97e 725c 897e 7267 1924 7272     .8Rr~.\r~.gr$.rr
    a37c:	9895 727c 07f5 7287 6769 7291 b715 729b     ..|r...rig.r...r
    a38c:	f71d 72a5 27a3 72b0 48cb 72ba 5ab7 72c4     ...r.'.r.H.r.Z.r
    a39c:	5d89 72ce 5162 72d8 3664 72e2 0caf 72ec     .].rbQ.rd6.r...r
    a3ac:	d465 72f5 8da4 72ff 388c 7309 d53e 7312     e..r...r.8.s>..s
    a3bc:	63d8 731c e478 7325 573e 732f bc46 7338     .c.sx.%s>W/sF.8s
    a3cc:	13ae 7342 5d95 734b 9a16 7354 c94f 735d     ..Bs.]Ks..TsO.]s
    a3dc:	eb5c 7366 0059 7370 0861 7379 0390 7382     \.fsY.psa.ys...s
    a3ec:	f202 738a d3d0 7393 a916 739c 71ed 73a5     ...s...s...s.q.s
    a3fc:	2e70 73ae deb9 73b6 82e0 73bf 1b00 73c8     p..s...s...s...s
    a40c:	a730 73d0 278a 73d9 9c25 73e1 051a 73ea     0..s.'.s%..s...s
    a41c:	6281 73f2 b471 73fa fb02 7402 364b 740b     .b.sq..s...tK6.t
    a42c:	6661 7413 8b5e 741b a555 7423 b45e 742b     af.t^..tU.#t^.+t
    a43c:	b88f 7433 b1fd 743b a0be 7443 84e6 744b     ..3t..;t..Ct..Kt
    a44c:	5e8c 7453 2dc3 745b f2a1 7462 ad39 746a     .^St.-[t..bt9.jt
    a45c:	5da1 7472 03eb 747a a02c 7481 3277 7489     .]rt..zt,..tw2.t
    a46c:	badf 7490 3979 7498 ae56 749f 1989 74a7     ...ty9.tV..t...t
    a47c:	7b26 74ae d33f 74b5 21e5 74bd 672b 74c4     &{.t?..t.!.t+g.t
    a48c:	a323 74cb d5df 74d2 ff6f 74d9 1fe6 74e1     #..t...to..t...t
    a49c:	3754 74e8 45cb 74ef 4b5c 74f6 4816 74fd     T7.t.E.t\K.t.H.t
    a4ac:	3c0b 7504 274c 750b 09e7 7512 e3ee 7518     .<.uL'.u...u...u
    a4bc:	b570 751f 7e7d 7526 3f25 752d f777 7533     p..u}~&u%?-uw.3u
    a4cc:	a782 753a 4f56 7541 ef01 7547 8692 754e     ..:uVOAu..Gu..Nu
    a4dc:	1619 7555 9da4 755b 1d40 7562 94fe 7568     ..Uu..[u@.bu..hu
    a4ec:	04e9 756f 6d12 7575 cd86 757b 2652 7582     ..ou.muu..{uR&.u
    a4fc:	7784 7588 c12a 758e 0351 7595 3e06 759b     .w.u*..uQ..u.>.u
    a50c:	7157 75a1 9d51 75a7 c200 75ad df72 75b3     Wq.uQ..u...ur..u
    a51c:	f5b3 75b9 04d0 75c0 0cd5 75c6 0dcf 75cc     ...u...u...u...u
    a52c:	07c9 75d2 fad0 75d7 e6f1 75dd cc36 75e3     ...u...u...u6..u
    a53c:	aaac 75e9 825e 75ef 5359 75f5 1da7 75fb     ...u^..uYS.u...u
    a54c:	e153 7600 9e6b 7606 54f7 760c 0504 7612     S..vk..v.T.v...v
    a55c:	ae9d 7617 51cc 761d ee9d 7622 8519 7628     ...v.Q.v.."v..(v
    a56c:	154d 762e 9f41 7633 2301 7639 a097 763e     M..vA.3v.#9v..>v
    a57c:	180d 7644 896d 7649 f4c2 764e 5a16 7654     ..Dvm.Iv..Nv.ZTv
    a58c:	b972 7659 12e0 765f 666a 7664 b41a 7669     r.Yv.._vjfdv..iv
    a59c:	fbf9 766e 3e11 7674 7a6a 7679 b110 767e     ..nv.>tvjzyv..~v
    a5ac:	e20a 7683 0d62 7689 3321 768e 5350 7693     ...vb..v!3.vPS.v
    a5bc:	6df9 7698 8323 769d 92d8 76a2 9d20 76a7     .m.v#..v...v ..v
    a5cc:	a205 76ac a18e 76b1 9bc4 76b6 90b0 76bb     ...v...v...v...v
    a5dc:	805a 76c0 6acb 76c5 500a 76ca 3020 76cf     Z..v.j.v.P.v 0.v
    a5ec:	0b15 76d4 e0f1 76d8 b1bc 76dd 7d7d 76e2     ...v...v...v}}.v
    a5fc:	443d 76e7 0604 76ec c2d9 76f0 7ac4 76f5     =D.v...v...v.z.v
    a60c:	2dcc 76fa dbf9 76fe 8553 7703 29e1 7708     .-.v...vS..w.).w
    a61c:	c9aa 770c 64b5 7711 fb0b 7715 8cb1 771a     ...w.d.w...w...w
    a62c:	19af 771f a20d 7723 25d1 7728 a502 772c     ...w..#w.%(w..,w
    a63c:	1fa7 7731 95c7 7735 0769 773a 7493 773e     ..1w..5wi.:w.t>w
    a64c:	dd4d 7742 419c 7747 a188 774b fd16 774f     M.Bw.AGw..Kw..Ow
    a65c:	544f 7754 a737 7758 f5d5 775c 4030 7761     OTTw7.Xw..\w0@aw
    a66c:	864e 7765 c835 7769 05ec 776e 3f78 7772     N.ew5.iw..nwx?rw
    a67c:	74df 7776 a628 777a d359 777e fc78 7782     .tvw(.zwY.~wx..w
    a68c:	218a 7787 4296 778b 5fa1 778f 78b1 7793     .!.w.B.w._.w.x.w
    a69c:	8dcc 7797 9ef7 779b ac39 779f b596 77a3     ...w...w9..w...w
    a6ac:	bb15 77a7 bcbb 77ab ba8d 77af b491 77b3     ...w...w...w...w
    a6bc:	aacc 77b7 9d44 77bb 8bfe 77bf 76ff 77c3     ...wD..w...w.v.w
    a6cc:	5e4c 77c7 41ec 77cb 21e2 77cf fe34 77d2     L^.w.A.w.!.w4..w
    a6dc:	d6e8 77d6 ac02 77da 7d87 77de 4b7c 77e2     ...w...w.}.w|K.w
    a6ec:	15e7 77e6 dccb 77e9 a02f 77ed 6016 77f1     ...w...w/..w.`.w
    a6fc:	1c87 77f5 d584 77f8 8b14 77fc 3d3b 7800     ...w...w...w;=.x
    a70c:	ebfd 7803 9760 7807 3f68 780b e419 780e     ...x`..xh?.x...x
    a71c:	8578 7812 2389 7816 be52 7819 55d6 781d     x..x.#.xR..x.U.x
    a72c:	ea1a 7820 7b22 7824 08f3 7828 9390 782b     .. x"{$x..(x..+x
    a73c:	1aff 782f 9f44 7832 2062 7836 9e5e 7839     ../xD.2xb 6x^.9x
    a74c:	193d 783d 9102 7840 05b1 7844 774e 7847     =.=x..@x..DxNwGx
    a75c:	e5df 784a 5166 784e b9e7 7851 1f67 7855     ..JxfQNx..Qxg.Ux
    a76c:	81ea 7858 e174 785b 3e07 785f 97a9 7862     ..Xxt.[x.>_x..bx
    a77c:	ee5d 7865 4228 7869 930b 786c e10d 786f     ].ex(Bix..lx..ox
    a78c:	2c30 7873 7477 7876 b9e8 7879 fc84 787c     0,sxwtvx..yx..|x
    a79c:	3c51 7880 7952 7883 b389 7886 eafc 7889     Q<.xRy.x...x...x
    a7ac:	1fad 788d 51a0 7890 80d8 7893 ad59 7896     ...x.Q.x...xY..x
    a7bc:	d726 7899 fe44 789c 22b4 78a0 447b 78a3     &..xD..x.".x{D.x
    a7cc:	639c 78a6 801a 78a9 99f9 78ac b13b 78af     .c.x...x...x;..x
    a7dc:	c5e5 78b2 d7fa 78b5 e77c 78b8 f46f 78bb     ...x...x|..xo..x
    a7ec:	fed6 78be 06b4 78c2 0c0d 78c5 0ee3 78c8     ...x...x...x...x
    a7fc:	0f3a 78cb 0d15 78ce 0876 78d1 0162 78d4     :..x...xv..xb..x
    a80c:	f7da 78d6 ebe3 78d9 dd7e 78dc ccaf 78df     ...x...x~..x...x
    a81c:	b979 78e2 a3df 78e5 8be4 78e8 718b 78eb     y..x...x...x.q.x
    a82c:	54d5 78ee 35c8 78f1 1464 78f4 f0ae 78f6     .T.x.5.xd..x...x
    a83c:	caa7 78f9 a253 78fc 77b5 78ff 4acf 7902     ...xS..x.w.x.J.y
    a84c:	1ba3 7905 ea36 7907 b689 790a 809e 790d     ...y6..y...y...y
    a85c:	487a 7910 0e1e 7913 d18d 7915 92ca 7918     zH.y...y...y...y
    a86c:	51d7 791b 0eb7 791e c96c 7920 81f9 7923     .Q.y...yl. y..#y
    a87c:	3861 7926 eca6 7928 9ecb 792b 4ed2 792e     a8&y..(y..+y.N.y
    a88c:	fcbd 7930 a88f 7933 524b 7936 f9f3 7938     ..0y..3yKR6y..8y
    a89c:	9f89 793b 4310 793e e48a 7940 83fa 7943     ..;y.C>y..@y..Cy
    a8ac:	2161 7946 bcc3 7948 5622 794b ed7f 794d     a!Fy..Hy"VKy..My
    a8bc:	82de 7950 1640 7953 a7a8 7955 3718 7958     ..Py@.Sy..Uy.7Xy
    a8cc:	c492 795a 5019 795d d9af 795f 6156 7962     ..Zy.P]y.._yVaby
    a8dc:	e710 7964 6adf 7967 ecc6 7969 6cc7 796c     ..dy.jgy..iy.lly
    a8ec:	eae3 796e 671e 7971 e179 7973 59f6 7976     ..ny.gqyy.sy.Yvy
    a8fc:	d098 7978 4560 797b b850 797d 296b 7980     ..xy`E{yP.}yk).y
    a90c:	98b3 7982 062a 7985 71d1 7987 dbab 7989     ...y*..y.q.y...y
    a91c:	43ba 798c a9ff 798e 0e7d 7991 7136 7993     .C.y...y}..y6q.y
    a92c:	d22c 7995 3160 7998 8ed5 799a ea8c 799c     ,..y`1.y...y...y
    a93c:	4487 799f 9cc9 79a1 f353 79a3 4827 79a6     .D.y...yS..y'H.y
    a94c:	9b47 79a8 ecb5 79aa 3c72 79ad 8a81 79af     G..y...yr<.y...y
    a95c:	d6e3 79b1 219a 79b4 6aa8 79b6 b20f 79b8     ...y.!.y.j.y...y
    a96c:	f7d1 79ba 3bef 79bd 7e6a 79bf bf46 79c1     ...y.;.yj~.yF..y
    a97c:	fe83 79c3 3c24 79c6 7829 79c8 b296 79ca     ...y$<.y)x.y...y
    a98c:	eb6a 79cc 22a9 79cf 5854 79d1 8c6c 79d3     j..y.".yTX.yl..y
    a99c:	bef4 79d5 efec 79d7 1f57 79da 4d36 79dc     ...y...yW..y6M.y
    a9ac:	798b 79de a458 79e0 cd9d 79e2 f55d 79e4     .y.yX..y...y]..y
    a9bc:	1b9a 79e7 4054 79e9 638d 79eb 8548 79ed     ...yT@.y.c.yH..y
    a9cc:	a585 79ef c447 79f1 e18e 79f3 fd5c 79f5     ...yG..y...y\..y
    a9dc:	17b3 79f8 3094 79fa 4801 79fc 5dfc 79fe     ...y.0.y.H.y.].y
    a9ec:	7285 7a00 859e 7a02 974a 7a04 a788 7a06     .r.z...zJ..z...z
    a9fc:	b65b 7a08 c3c5 7a0a cfc6 7a0c da60 7a0e     [..z...z...z`..z
    aa0c:	e394 7a10 eb65 7a12 f1d3 7a14 f6e0 7a16     ...ze..z...z...z
    aa1c:	fa8c 7a18 fcdb 7a1a fdcc 7a1c fd62 7a1e     ...z...z...zb..z
    aa2c:	fb9d 7a20 f880 7a22 f40b 7a24 ee40 7a26     .. z.."z..$z@.&z
    aa3c:	e720 7a28 deac 7a2a d4e6 7a2c c9d0 7a2e      .(z..*z..,z...z
    aa4c:	bd6a 7a30 afb5 7a32 a0b4 7a34 9068 7a36     j.0z..2z..4zh.6z
    aa5c:	7ed0 7a38 6bf0 7a3a 57c8 7a3c 425a 7a3e     .~8z.k:z.W<zZB>z
    aa6c:	2ba7 7a40 13af 7a42 fa75 7a43 dff9 7a45     .+@z..Bzu.Cz..Ez
    aa7c:	c43d 7a47 a743 7a49 890a 7a4b 6995 7a4d     =.GzC.Iz..Kz.iMz
    aa8c:	48e5 7a4f 26fa 7a51 03d7 7a53 df7c 7a54     .HOz.&Qz..Sz|.Tz
    aa9c:	b9ea 7a56 9323 7a58 6b28 7a5a 41fa 7a5c     ..Vz#.Xz(kZz.A\z
    aaac:	179a 7a5e ec09 7a5f bf49 7a61 915b 7a63     ..^z.._zI.az[.cz
    aabc:	6240 7a65 31f8 7a67 0085 7a69 cde9 7a6a     @bez.1gz..iz..jz
    aacc:	9a24 7a6c 6537 7a6e 2f24 7a70 f7ec 7a71     $.lz7enz$/pz..qz
    aadc:	bf8f 7a73 860f 7a75 4b6d 7a77 0faa 7a79     ..sz..uzmKwz..yz
    aaec:	d2c7 7a7a 94c5 7a7c 55a6 7a7e 156a 7a80     ..zz..|z.U~zj..z
    aafc:	d412 7a81 919f 7a83 4e13 7a85 096e 7a87     ...z...z.N.zn..z
    ab0c:	c3b2 7a88 7cdf 7a8a 34f7 7a8c ebfb 7a8d     ...z.|.z.4.z...z
    ab1c:	a1eb 7a8f 56c8 7a91 0a95 7a93 bd50 7a94     ...z.V.z...zP..z
    ab2c:	6efd 7a96 1f9b 7a98 cf2b 7a99 7db0 7a9b     .n.z...z+..z.}.z
    ab3c:	2b28 7a9d d796 7a9e 82fb 7aa0 2d57 7aa2     (+.z...z...zW-.z
    ab4c:	d6ac 7aa3 7ef9 7aa5 2641 7aa7 cc85 7aa8     ...z.~.zA&.z...z
    ab5c:	71c4 7aaa 1601 7aac b93b 7aad 5b75 7aaf     .q.z...z;..zu[.z
    ab6c:	fcae 7ab0 9ce9 7ab2 3c24 7ab4 da63 7ab5     ...z...z$<.zc..z
    ab7c:	77a5 7ab7 13ec 7ab9 af37 7aba 4989 7abc     .w.z...z7..z.I.z
    ab8c:	e2e2 7abd 7b43 7abf 12ad 7ac1 a921 7ac2     ...zC{.z...z!..z
    ab9c:	3e9f 7ac4 d329 7ac5 66bf 7ac7 f962 7ac8     .>.z)..z.f.zb..z
    abac:	8b13 7aca 1bd3 7acc aba3 7acd 3a84 7acf     ...z...z...z.:.z
    abbc:	c875 7ad0 5579 7ad2 e191 7ad3 6cbc 7ad5     u..zyU.z...z.l.z
    abcc:	f6fb 7ad6 8051 7ad8 08bc 7ada 903f 7adb     ...zQ..z...z?..z
    abdc:	16da 7add 9c8d 7ade 215b 7ae0 a542 7ae1     ...z...z[!.zB..z
    abec:	2845 7ae3 aa63 7ae4 2b9f 7ae6 abf8 7ae7     E(.zc..z.+.z...z
    abfc:	2b6f 7ae9 aa05 7aea 27bb 7aec a492 7aed     o+.z...z.'.z...z
    ac0c:	208a 7aef 9ba5 7af0 15e2 7af2 8f43 7af3     . .z...z...zC..z
    ac1c:	07c8 7af5 7f72 7af6 f642 7af7 6c39 7af9     ...zr..zB..z9l.z
    ac2c:	e158 7afa 559e 7afc c90d 7afd 3ba6 7aff     X..z.U.z...z.;.z
    ac3c:	ad69 7b00 1e57 7b02 8e71 7b03 fdb7 7b04     i..{W..{q..{...{
    ac4c:	6c2a 7b06 d9cc 7b07 469b 7b09 b29a 7b0a     *l.{...{.F.{...{
    ac5c:	1dc9 7b0c 8829 7b0d f1ba 7b0e 5a7d 7b10     ...{)..{...{}Z.{
    ac6c:	c273 7b11 299c 7b13 8ff9 7b14 f58b 7b15     s..{.).{...{...{
    ac7c:	5a53 7b17 be50 7b18 2184 7b1a 83f0 7b1b     SZ.{P..{.!.{...{
    ac8c:	e594 7b1c 4670 7b1e a686 7b1f 05d7 7b21     ...{pF.{...{..!{
    ac9c:	6461 7b22 c227 7b23 1f2a 7b25 7b68 7b26     ad"{'.#{*.%{h{&{
    acac:	d6e5 7b27 319f 7b29 8b97 7b2a e4cf 7b2b     ..'{.1){..*{..+{
    acbc:	3d47 7b2d 94ff 7b2e ebf8 7b2f 4233 7b31     G=-{...{../{3B1{
    accc:	97b0 7b32 ec70 7b33 4073 7b35 93bb 7b36     ..2{p.3{s@5{..6{
    acdc:	e647 7b37 3819 7b39 8931 7b3a d98f 7b3b     G.7{.89{1.:{..;{
    acec:	2935 7b3d 7822 7b3e c658 7b3f 13d6 7b41     5)={"x>{X.?{..A{
    acfc:	609e 7b42 acb0 7b43 f80d 7b44 42b5 7b46     .`B{..C{..D{.BF{
    ad0c:	8ca9 7b47 d5e9 7b48 1e76 7b4a 6651 7b4b     ..G{..H{v.J{QfK{
    ad1c:	ad7a 7b4c f3f1 7b4d 39b8 7b4f 7ecf 7b50     z.L{..M{.9O{.~P{
    ad2c:	c336 7b51 06ee 7b53 49f7 7b54 8c52 7b55     6.Q{..S{.IT{R.U{
    ad3c:	ce00 7b56 0f01 7b58 4f56 7b59 8eff 7b5a     ..V{..X{VOY{..Z{
    ad4c:	cdfc 7b5b 0c4f 7b5d 49f8 7b5e 86f7 7b5f     ..[{O.]{.I^{.._{
    ad5c:	c34d 7b60 fefa 7b61 39ff 7b63 745d 7b64     M.`{..a{.9c{]td{
    ad6c:	ae13 7b65 e723 7b66 1f8d 7b68 5752 7b69     ..e{#.f{..h{RWi{
    ad7c:	8e71 7b6a c4ed 7b6b fac4 7b6c 2ff7 7b6e     q.j{..k{..l{./n{
    ad8c:	6488 7b6f 9876 7b70 cbc3 7b71 fe6e 7b72     .do{v.p{..q{n.r{
    ad9c:	3078 7b74 61e1 7b75 92ab 7b76 c2d5 7b77     x0t{.au{..v{..w{
    adac:	f260 7b78 214c 7b7a 4f9b 7b7b 7d4c 7b7c     `.x{L!z{.O{{L}|{
    adbc:	aa60 7b7d d6d7 7b7e 02b2 7b80 2df2 7b81     `.}{..~{...{.-.{
    adcc:	5897 7b82 82a0 7b83 ac10 7b84 d4e6 7b85     .X.{...{...{...{
    addc:	fd22 7b86 24c6 7b88 4bd1 7b89 7245 7b8a     "..{.$.{.K.{Er.{
    adec:	9821 7b8b bd66 7b8c e215 7b8d 062d 7b8f     !..{f..{...{-..{
    adfc:	29b0 7b90 4c9d 7b91 6ef6 7b92 90bb 7b93     .).{.L.{.n.{...{
    ae0c:	b1eb 7b94 d289 7b95 f293 7b96 120b 7b98     ...{...{...{...{
    ae1c:	30f1 7b99 4f45 7b9a 6d08 7b9b 8a3a 7b9c     .0.{EO.{.m.{:..{
    ae2c:	a6db 7b9d c2ed 7b9e de6f 7b9f f962 7ba0     ...{...{o..{b..{
    ae3c:	13c7 7ba2 2d9d 7ba3 46e5 7ba4 5fa0 7ba5     ...{.-.{.F.{._.{
    ae4c:	77ce 7ba6 8f6f 7ba7 a685 7ba8 bd0e 7ba9     .w.{o..{...{...{
    ae5c:	d30c 7baa e87f 7bab fd68 7bac 11c6 7bae     ...{...{h..{...{
    ae6c:	259b 7baf 38e6 7bb0 4ba9 7bb1 5de3 7bb2     .%.{.8.{.K.{.].{
    ae7c:	6f95 7bb3 80bf 7bb4 9161 7bb5 a17d 7bb6     .o.{...{a..{}..{
    ae8c:	b112 7bb7 c021 7bb8 ceab 7bb9 dcae 7bba     ...{!..{...{...{
    ae9c:	ea2d 7bbb f727 7bbc 039d 7bbe 0f90 7bbf     -..{'..{...{...{
    aeac:	1afe 7bc0 25ea 7bc1 3052 7bc2 3a39 7bc3     ...{.%.{R0.{9:.{
    aebc:	439d 7bc4 4c80 7bc5 54e1 7bc6 5cc2 7bc7     .C.{.L.{.T.{.\.{
    aecc:	6422 7bc8 6b02 7bc9 7163 7bca 7743 7bcb     "d.{.k.{cq.{Cw.{
    aedc:	7ca5 7bcc 8188 7bcd 85ed 7bce 89d4 7bcf     .|.{...{...{...{
    aeec:	8d3d 7bd0 9029 7bd1 9298 7bd2 948a 7bd3     =..{)..{...{...{
    aefc:	9600 7bd4 96fa 7bd5 9779 7bd6 977d 7bd7     ...{...{y..{}..{
    af0c:	9706 7bd8 9614 7bd9 94a8 7bda 92c3 7bdb     ...{...{...{...{
    af1c:	9064 7bdc 8d8c 7bdd 8a3b 7bde 8671 7bdf     d..{...{;..{q..{
    af2c:	8230 7be0 7d77 7be1 7846 7be2 729f 7be3     0..{w}.{Fx.{.r.{
    af3c:	6c80 7be4 65eb 7be5 5ee0 7be6 575f 7be7     .l.{.e.{.^.{_W.{
    af4c:	4f69 7be8 46fe 7be9 3e1e 7bea 34c9 7beb     iO.{.F.{.>.{.4.{
    af5c:	2b00 7bec 20c4 7bed 1613 7bee 0af0 7bef     .+.{. .{...{...{
    af6c:	ff5a 7bef f351 7bf0 e6d6 7bf1 d9e9 7bf2     Z..{Q..{...{...{
    af7c:	cc8a 7bf3 beba 7bf4 b079 7bf5 a1c7 7bf6     ...{...{y..{...{
    af8c:	92a5 7bf7 8313 7bf8 7311 7bf9 629f 7bfa     ...{...{.s.{.b.{
    af9c:	51bf 7bfb 406f 7bfc 2eb1 7bfd 1c84 7bfe     .Q.{o@.{...{...{
    afac:	09ea 7bff f6e2 7bff e36d 7c00 cf8a 7c01     ...{...{m..|...|
    afbc:	bb3b 7c02 a67f 7c03 9157 7c04 7bc3 7c05     ;..|...|W..|.{.|
    afcc:	65c3 7c06 4f58 7c07 3882 7c08 2141 7c09     .e.|XO.|.8.|A!.|
    afdc:	0996 7c0a f181 7c0a d901 7c0b c018 7c0c     ...|...|...|...|
    afec:	a6c6 7c0d 8d0a 7c0e 72e6 7c0f 5859 7c10     ...|...|.r.|YX.|
    affc:	3d65 7c11 2208 7c12 0643 7c13 ea17 7c13     e=.|.".|C..|...|
    b00c:	cd84 7c14 b08a 7c15 932a 7c16 7563 7c17     ...|...|*..|cu.|
    b01c:	5736 7c18 38a3 7c19 19ab 7c1a fa4e 7c1a     6W.|.8.|...|N..|
    b02c:	da8b 7c1b ba64 7c1c 99d9 7c1d 78e9 7c1e     ...|d..|...|.x.|
    b03c:	5796 7c1f 35de 7c20 13c4 7c21 f146 7c21     .W.|.5 |..!|F.!|
    b04c:	ce65 7c22 ab22 7c23 877d 7c24 6375 7c25     e."|".#|}.$|uc%|
    b05c:	3f0b 7c26 1a40 7c27 f514 7c27 cf86 7c28     .?&|@.'|..'|..(|
    b06c:	a998 7c29 8349 7c2a 5c9a 7c2b 358a 7c2c     ..)|I.*|.\+|.5,|
    b07c:	0e1b 7c2d e64c 7c2d be1e 7c2e 9591 7c2f     ..-|L.-|...|../|
    b08c:	6ca5 7c30 435a 7c31 19b1 7c32 efaa 7c32     .l0|ZC1|..2|..2|
    b09c:	c545 7c33 9a83 7c34 6f63 7c35 43e5 7c36     E.3|..4|co5|.C6|
    b0ac:	180b 7c37 ebd5 7c37 bf41 7c38 9252 7c39     ..7|..7|A.8|R.9|
    b0bc:	6507 7c3a 3760 7c3b 095d 7c3c daff 7c3c     .e:|`7;|].<|..<|
    b0cc:	ac46 7c3d 7d32 7c3e 4dc4 7c3f 1dfb 7c40     F.=|2}>|.M?|..@|
    b0dc:	edd9 7c40 bd5c 7c41 8c86 7c42 5b56 7c43     ..@|\.A|..B|V[C|
    b0ec:	29cd 7c44 f7eb 7c44 c5b1 7c45 931d 7c46     .)D|..D|..E|..F|
    b0fc:	6032 7c47 2cee 7c48 f953 7c48 c560 7c49     2`G|.,H|S.H|`.I|
    b10c:	9115 7c4a 5c73 7c4b 277a 7c4c f22b 7c4c     ..J|s\K|z'L|+.L|
    b11c:	bc85 7c4d 8688 7c4e 5036 7c4f 198d 7c50     ..M|..N|6PO|..P|
    b12c:	e28f 7c50 ab3c 7c51 7393 7c52 3b95 7c53     ..P|<.Q|.sR|.;S|
    b13c:	0342 7c54 ca9b 7c54 919f 7c55 584f 7c56     B.T|..T|..U|OXV|
    b14c:	1eab 7c57 e4b3 7c57 aa67 7c58 6fc8 7c59     ..W|..W|g.X|.oY|
    b15c:	34d6 7c5a f991 7c5a bdfa 7c5b 820f 7c5c     .4Z|..Z|..[|..\|
    b16c:	45d2 7c5d 0944 7c5e cc63 7c5e 8f30 7c5f     .E]|D.^|c.^|0._|
    b17c:	51ac 7c60 13d6 7c61 d5b0 7c61 9738 7c62     .Q`|..a|..a|8.b|
    b18c:	5870 7c63 1957 7c64 d9ed 7c64 9a34 7c65     pXc|W.d|..d|4.e|
    b19c:	5a2a 7c66 19d1 7c67 d928 7c67 9830 7c68     *Zf|..g|(.g|0.h|
    b1ac:	56e9 7c69 1552 7c6a d36d 7c6a 9139 7c6b     .Vi|R.j|m.j|9.k|
    b1bc:	4eb7 7c6c 0be6 7c6d c8c7 7c6d 855b 7c6e     .Nl|..m|..m|[.n|
    b1cc:	41a1 7c6f fd99 7c6f b944 7c70 74a2 7c71     .Ao|..o|D.p|.tq|
    b1dc:	2fb3 7c72 ea77 7c72 a4ef 7c73 5f1a 7c74     ./r|w.r|..s|._t|
    b1ec:	18f9 7c75 d28c 7c75 8bd3 7c76 44ce 7c77     ..u|..u|..v|.Dw|
    b1fc:	fd7e 7c77 b5e3 7c78 6dfd 7c79 25cb 7c7a     ~.w|..x|.my|.%z|
    b20c:	dd4f 7c7a 9489 7c7b 4b78 7c7c 021c 7c7d     O.z|..{|xK||..}|
    b21c:	b877 7c7d 6e88 7c7e 244f 7c7f d9cc 7c7f     w.}|.n~|O$.|...|
    b22c:	8f01 7c80 43ec 7c81 f88e 7c81 ace7 7c82     ...|.C.|...|...|
    b23c:	60f7 7c83 14c0 7c84 c83f 7c84 7b77 7c85     .`.|...|?..|w{.|
    b24c:	2e66 7c86 e10e 7c86 936e 7c87 4587 7c88     f..|...|n..|.E.|
    b25c:	f758 7c88 a8e3 7c89 5a26 7c8a 0b22 7c8b     X..|...|&Z.|"..|
    b26c:	bbd8 7c8b 6c48 7c8c 1c71 7c8d cc54 7c8d     ...|Hl.|q..|T..|
    b27c:	7bf0 7c8e 2b48 7c8f da59 7c8f 8925 7c90     .{.|H+.|Y..|%..|
    b28c:	37ab 7c91 e5ed 7c91 93e9 7c92 41a1 7c93     .7.|...|...|.A.|
    b29c:	ef14 7c93 9c42 7c94 492c 7c95 f5d2 7c95     ...|B..|,I.|...|
    b2ac:	a234 7c96 4e51 7c97 fa2b 7c97 a5c2 7c98     4..|QN.|+..|...|
    b2bc:	5115 7c99 fc24 7c99 a6f1 7c9a 517b 7c9b     .Q.|$..|...|{Q.|
    b2cc:	fbc2 7c9b a5c6 7c9c 4f87 7c9d f907 7c9d     ...|...|.O.|...|
    b2dc:	a244 7c9e 4b3f 7c9f f3f8 7c9f 9c6f 7ca0     D..|?K.|...|o..|
    b2ec:	44a5 7ca1 ec99 7ca1 944c 7ca2 3bbe 7ca3     .D.|...|L..|.;.|
    b2fc:	e2ef 7ca3 89df 7ca4 308e 7ca5 d6fd 7ca5     ...|...|.0.|...|
    b30c:	7d2b 7ca6 2319 7ca7 c8c7 7ca7 6e34 7ca8     +}.|.#.|...|4n.|
    b31c:	1362 7ca9 b851 7ca9 5d00 7caa 016f 7cab     b..|Q..|.].|o..|
    b32c:	a59f 7cab 4990 7cac ed42 7cac 90b5 7cad     ...|.I.|B..|...|
    b33c:	33e9 7cae d6df 7cae 7997 7caf 1c10 7cb0     .3.|...|.y.|...|
    b34c:	be4b 7cb0 6048 7cb1 0207 7cb2 a389 7cb2     K..|H`.|...|...|
    b35c:	44cd 7cb3 e5d3 7cb3 869c 7cb4 2728 7cb5     .D.|...|...|('.|
    b36c:	c777 7cb5 6789 7cb6 075e 7cb7 a6f7 7cb7     w..|.g.|^..|...|
    b37c:	4653 7cb8 e573 7cb8 8456 7cb9 22fd 7cba     SF.|s..|V..|.".|
    b38c:	c169 7cba 5f99 7cbb fd8c 7cbb 9b45 7cbc     i..|._.|...|E..|
    b39c:	38c2 7cbd d603 7cbd 730a 7cbe 0fd5 7cbf     .8.|...|.s.|...|
    b3ac:	ac66 7cbf 48bb 7cc0 e4d6 7cc0 80b7 7cc1     f..|.H.|...|...|
    b3bc:	1c5d 7cc2 b7c9 7cc2 52fb 7cc3 edf2 7cc3     ]..|...|.R.|...|
    b3cc:	88b0 7cc4 2334 7cc5 bd7f 7cc5 5790 7cc6     ...|4#.|...|.W.|
    b3dc:	f167 7cc6 8b05 7cc7 246a 7cc8 bd97 7cc8     g..|...|j$.|...|
    b3ec:	568a 7cc9 ef44 7cc9 87c6 7cca 200f 7ccb     .V.|D..|...|. .|
    b3fc:	b820 7ccb 4ff9 7ccc e79a 7ccc 7f02 7ccd      ..|.O.|...|...|
    b40c:	1633 7cce ad2b 7cce 43ed 7ccf da76 7ccf     3..|+..|.C.|v..|
    b41c:	70c8 7cd0 06e3 7cd1 9cc7 7cd1 3273 7cd2     .p.|...|...|s2.|
    b42c:	c7e9 7cd2 5d28 7cd3 f230 7cd3 8702 7cd4     ...|(].|0..|...|
    b43c:	1b9d 7cd5 b001 7cd5 4430 7cd6 d828 7cd6     ...|...|0D.|(..|
    b44c:	6bea 7cd7 ff77 7cd7 92cd 7cd8 25ee 7cd9     .k.|w..|...|.%.|
    b45c:	b8da 7cd9 4b8f 7cda de10 7cda 705b 7cdb     ...|.K.|...|[p.|
    b46c:	0272 7cdc 9453 7cdc 2600 7cdd b777 7cdd     r..|S..|.&.|w..|
    b47c:	48ba 7cde d9c9 7cde 6aa3 7cdf fb48 7cdf     .H.|...|.j.|H..|
    b48c:	8bba 7ce0 1bf7 7ce1 ac01 7ce1 3bd6 7ce2     ...|...|...|.;.|
    b49c:	cb78 7ce2 5ae6 7ce3 ea21 7ce3 7928 7ce4     x..|.Z.|!..|(y.|
    b4ac:	07fc 7ce5 969d 7ce5 250a 7ce6 b344 7ce6     ...|...|.%.|D..|
    b4bc:	414c 7ce7 cf21 7ce7 5cc3 7ce8 ea32 7ce8     LA.|!..|.\.|2..|
    b4cc:	776f 7ce9 047a 7cea 9152 7cea 1df9 7ceb     ow.|z..|R..|...|
    b4dc:	aa6d 7ceb 36af 7cec c2bf 7cec 4e9e 7ced     m..|.6.|...|.N.|
    b4ec:	da4b 7ced 65c6 7cee f110 7cee 7c29 7cef     K..|.e.|...|)|.|
    b4fc:	0710 7cf0 91c7 7cf0 1c4c 7cf1 a6a0 7cf1     ...|...|L..|...|
    b50c:	30c4 7cf2 bab6 7cf2 4479 7cf3 ce0a 7cf3     .0.|...|yD.|...|
    b51c:	576b 7cf4 e09c 7cf4 699d 7cf5 f26d 7cf5     kW.|...|.i.|m..|
    b52c:	7b0e 7cf6 037e 7cf7 8bbf 7cf7 13d0 7cf8     .{.|~..|...|...|
    b53c:	9bb1 7cf8 2363 7cf9 aae6 7cf9 3239 7cfa     ...|c#.|...|92.|
    b54c:	b95d 7cfa 4051 7cfb c717 7cfb 4dad 7cfc     ]..|Q@.|...|.M.|
    b55c:	d415 7cfc 5a4e 7cfd e059 7cfd 6634 7cfe     ...|NZ.|Y..|4f.|
    b56c:	ebe2 7cfe 7161 7cff f6b1 7cff 7bd4 7d00     ...|aq.|...|.{.}
    b57c:	00c8 7d01 858e 7d01 0a27 7d02 8e91 7d02     ...}...}'..}...}
    b58c:	12ce 7d03 96dd 7d03 1abf 7d04 9e73 7d04     ...}...}...}s..}
    b59c:	21fa 7d05 a553 7d05 2880 7d06 ab7f 7d06     .!.}S..}.(.}...}
    b5ac:	2e51 7d07 b0f7 7d07 336f 7d08 b5bb 7d08     Q..}...}o3.}...}
    b5bc:	37da 7d09 b9cd 7d09 3b93 7d0a bd2d 7d0a     .7.}...}.;.}-..}
    b5cc:	3e9a 7d0b bfdc 7d0b 40f1 7d0c c1da 7d0c     .>.}...}.@.}...}
    b5dc:	4297 7d0d c329 7d0d 438e 7d0e c3c9 7d0e     .B.})..}.C.}...}
    b5ec:	43d7 7d0f c3ba 7d0f 4371 7d10 c2fe 7d10     .C.}...}qC.}...}
    b5fc:	425f 7d11 c194 7d11 409f 7d12 bf7f 7d12     _B.}...}.@.}...}
    b60c:	3e34 7d13 bcbe 7d13 3b1d 7d14 b952 7d14     4>.}...}.;.}R..}
    b61c:	375c 7d15 b53c 7d15 32f1 7d16 b07c 7d16     \7.}<..}.2.}|..}
    b62c:	2ddd 7d17 ab14 7d17 2820 7d18 a503 7d18     .-.}...} (.}...}
    b63c:	21bc 7d19 9e4b 7d19 1ab0 7d1a 96eb 7d1a     .!.}K..}...}...}
    b64c:	12fd 7d1b 8ee6 7d1b 0aa5 7d1c 863b 7d1c     ...}...}...};..}
    b65c:	01a7 7d1d 7ceb 7d1d f805 7d1d 72f6 7d1e     ...}.|.}...}.r.}
    b66c:	edbf 7d1e 685e 7d1f e2d5 7d1f 5d23 7d20     ...}^h.}...}#] }
    b67c:	d749 7d20 5146 7d21 cb1a 7d21 44c7 7d22     I. }FQ!}..!}.D"}
    b68c:	be4b 7d22 37a6 7d23 b0da 7d23 29e5 7d24     K."}.7#}..#}.)$}
    b69c:	a2c9 7d24 1b85 7d25 9419 7d25 0c85 7d26     ..$}..%}..%}..&}
    b6ac:	84c9 7d26 fce6 7d26 74db 7d27 eca9 7d27     ..&}..&}.t'}..'}
    b6bc:	6450 7d28 dbcf 7d28 5327 7d29 ca58 7d29     Pd(}..(}'S)}X.)}
    b6cc:	4162 7d2a b845 7d2a 2f01 7d2b a596 7d2b     bA*}E.*}./+}..+}
    b6dc:	1c04 7d2c 924c 7d2c 086d 7d2d 7e68 7d2d     ..,}L.,}m.-}h~-}
    b6ec:	f43c 7d2d 69e9 7d2e df71 7d2e 54d2 7d2f     <.-}.i.}q..}.T/}
    b6fc:	ca0d 7d2f 3f22 7d30 b410 7d30 28d9 7d31     ../}"?0}..0}.(1}
    b70c:	9d7c 7d31 11f9 7d32 8651 7d32 fa83 7d32     |.1}..2}Q.2}..2}
    b71c:	6e8f 7d33 e275 7d33 5637 7d34 c9d2 7d34     .n3}u.3}7V4}..4}
    b72c:	3d49 7d35 b09a 7d35 23c6 7d36 96cd 7d36     I=5}..5}.#6}..6}
    b73c:	09af 7d37 7c6c 7d37 ef04 7d37 6177 7d38     ..7}l|7}..7}wa8}
    b74c:	d3c6 7d38 45f0 7d39 b7f5 7d39 29d6 7d3a     ..8}.E9}..9}.):}
    b75c:	9b92 7d3a 0d2a 7d3b 7e9d 7d3b efec 7d3b     ..:}*.;}.~;}..;}
    b76c:	6117 7d3c d21e 7d3c 4301 7d3d b3bf 7d3d     .a<}..<}.C=}..=}
    b77c:	245a 7d3e 94d1 7d3e 0524 7d3f 7554 7d3f     Z$>}..>}$.?}Tu?}
    b78c:	e55f 7d3f 5548 7d40 c50c 7d40 34ad 7d41     _.?}HU@}..@}.4A}
    b79c:	a42b 7d41 1385 7d42 82bc 7d42 f1d0 7d42     +.A}..B}..B}..B}
    b7ac:	60c1 7d43 cf8f 7d43 3e39 7d44 acc1 7d44     .`C}..C}9>D}..D}
    b7bc:	1b26 7d45 8968 7d45 f787 7d45 6584 7d46     &.E}h.E}..E}.eF}
    b7cc:	d35e 7d46 4115 7d47 aeaa 7d47 1c1c 7d48     ^.F}.AG}..G}..H}
    b7dc:	896d 7d48 f69a 7d48 63a6 7d49 d08f 7d49     m.H}..H}.cI}..I}
    b7ec:	3d56 7d4a a9fc 7d4a 167f 7d4b 82e0 7d4b     V=J}..J}..K}..K}
    b7fc:	ef1f 7d4b 5b3d 7d4c c739 7d4c 3313 7d4d     ..K}=[L}9.L}.3M}
    b80c:	9ecb 7d4d 0a62 7d4e 75d8 7d4e e12c 7d4e     ..M}b.N}.uN},.N}
    b81c:	4c5e 7d4f b770 7d4f 2260 7d50 8d2e 7d50     ^LO}p.O}`"P}..P}
    b82c:	f7dc 7d50 6269 7d51 ccd4 7d51 371f 7d52     ..P}ibQ}..Q}.7R}
    b83c:	a149 7d52 0b52 7d53 753a 7d53 df01 7d53     I.R}R.S}:uS}..S}
    b84c:	48a8 7d54 b22e 7d54 1b94 7d55 84d9 7d55     .HT}..T}..U}..U}
    b85c:	edfe 7d55 5702 7d56 bfe6 7d56 28aa 7d57     ..U}.WV}..V}.(W}
    b86c:	914d 7d57 f9d1 7d57 6234 7d58 ca78 7d58     M.W}..W}4bX}x.X}
    b87c:	329b 7d59 9a9f 7d59 0282 7d5a 6a46 7d5a     .2Y}..Y}..Z}FjZ}
    b88c:	d1ea 7d5a 396f 7d5b a0d4 7d5b 0819 7d5c     ..Z}o9[}..[}..\}
    b89c:	6f3f 7d5c d645 7d5c 3d2c 7d5d a3f3 7d5d     ?o\}E.\},=]}..]}
    b8ac:	0a9c 7d5e 7125 7d5e d78f 7d5e 3dda 7d5f     ..^}%q^}..^}.=_}
    b8bc:	a405 7d5f 0a12 7d60 7000 7d60 d5cf 7d60     .._}..`}.p`}..`}
    b8cc:	3b7f 7d61 a110 7d61 0683 7d62 6bd7 7d62     .;a}..a}..b}.kb}
    b8dc:	d10c 7d62 3622 7d63 9b1b 7d63 fff4 7d63     ..b}"6c}..c}..c}
    b8ec:	64b0 7d64 c94d 7d64 2dcb 7d65 922c 7d65     .dd}M.d}.-e},.e}
    b8fc:	f66e 7d65 5a92 7d66 be98 7d66 2280 7d67     n.e}.Zf}..f}."g}
    b90c:	864a 7d67 e9f6 7d67 4d84 7d68 b0f5 7d68     J.g}..g}.Mh}..h}
    b91c:	1447 7d69 777c 7d69 da93 7d69 3d8d 7d6a     G.i}|wi}..i}.=j}
    b92c:	a069 7d6a 0327 7d6b 65c8 7d6b c84c 7d6b     i.j}'.k}.ek}L.k}
    b93c:	2ab2 7d6c 8cfb 7d6c ef27 7d6c 5136 7d6d     .*l}..l}'.l}6Qm}
    b94c:	b327 7d6d 14fb 7d6e 76b3 7d6e d84d 7d6e     '.m}..n}.vn}M.n}
    b95c:	39ca 7d6f 9b2b 7d6f fc6e 7d6f 5d95 7d70     .9o}+.o}n.o}.]p}
    b96c:	be9f 7d70 1f8c 7d71 805d 7d71 e111 7d71     ..p}..q}].q}..q}
    b97c:	41a8 7d72 a223 7d72 0282 7d73 62c4 7d73     .Ar}#.r}..s}.bs}
    b98c:	c2ea 7d73 22f3 7d74 82e1 7d74 e2b2 7d74     ..s}."t}..t}..t}
    b99c:	4266 7d75 a1ff 7d75 017c 7d76 60dd 7d76     fBu}..u}|.v}.`v}
    b9ac:	c021 7d76 1f4a 7d77 7e57 7d77 dd48 7d77     !.v}J.w}W~w}H.w}
    b9bc:	3c1d 7d78 9ad7 7d78 f975 7d78 57f7 7d79     .<x}..x}u.x}.Wy}
    b9cc:	b65e 7d79 14a9 7d7a 72d9 7d7a d0ed 7d7a     ^.y}..z}.rz}..z}
    b9dc:	2ee6 7d7b 8cc3 7d7b ea86 7d7b 482c 7d7c     ..{}..{}..{},H|}
    b9ec:	a5b8 7d7c 0329 7d7d 607e 7d7d bdb9 7d7d     ..|}).}}~`}}..}}
    b9fc:	1ad8 7d7e 77dc 7d7e d4c6 7d7e 3194 7d7f     ..~}.w~}..~}.1.}
    ba0c:	8e48 7d7f eae1 7d7f 475f 7d80 a3c2 7d80     H..}...}_G.}...}
    ba1c:	000b 7d81 5c39 7d81 b84d 7d81 1446 7d82     ...}9\.}M..}F..}
    ba2c:	7024 7d82 cbe9 7d82 2792 7d83 8322 7d83     $p.}...}.'.}"..}
    ba3c:	de97 7d83 39f2 7d84 9532 7d84 f059 7d84     ...}.9.}2..}Y..}
    ba4c:	4b65 7d85 a657 7d85 012f 7d86 5bee 7d86     eK.}W..}/..}.[.}
    ba5c:	b692 7d86 111c 7d87 6b8d 7d87 c5e3 7d87     ...}...}.k.}...}
    ba6c:	2020 7d88 7a43 7d88 d44d 7d88 2e3c 7d89       .}Cz.}M..}<..}
    ba7c:	8813 7d89 e1cf 7d89 3b72 7d8a 94fc 7d8a     ...}...}r;.}...}
    ba8c:	ee6c 7d8a 47c3 7d8b a100 7d8b fa24 7d8b     l..}.G.}...}$..}
    ba9c:	532f 7d8c ac21 7d8c 04f9 7d8d 5db8 7d8d     /S.}!..}...}.].}
    baac:	b65f 7d8d 0eec 7d8e 6760 7d8e bfbb 7d8e     _..}...}`g.}...}
    babc:	17fd 7d8f 7026 7d8f c837 7d8f 202e 7d90     ...}&p.}7..}. .}
    bacc:	780d 7d90 cfd3 7d90 2781 7d91 7f15 7d91     .x.}...}.'.}...}
    badc:	d692 7d91 2df5 7d92 8540 7d92 dc73 7d92     ...}.-.}@..}s..}
    baec:	338d 7d93 8a8f 7d93 e178 7d93 3849 7d94     .3.}...}x..}I8.}
    bafc:	8f02 7d94 e5a2 7d94 3c2a 7d95 929b 7d95     ...}...}*<.}...}
    bb0c:	e8f3 7d95 3f32 7d96 955a 7d96 eb6a 7d96     ...}2?.}Z..}j..}
    bb1c:	4162 7d97 9742 7d97 ed0a 7d97 42ba 7d98     bA.}B..}...}.B.}
    bb2c:	9852 7d98 edd3 7d98 433c 7d99 988d 7d99     R..}...}<C.}...}
    bb3c:	edc6 7d99 42e8 7d9a 97f2 7d9a ece5 7d9a     ...}.B.}...}...}
    bb4c:	41c0 7d9b 9684 7d9b eb30 7d9b 3fc5 7d9c     .A.}...}0..}.?.}
    bb5c:	9443 7d9c e8a9 7d9c 3cf8 7d9d 9130 7d9d     C..}...}.<.}0..}
    bb6c:	e550 7d9d 395a 7d9e 8d4c 7d9e e127 7d9e     P..}Z9.}L..}'..}
    bb7c:	34eb 7d9f 8898 7d9f dc2e 7d9f 2fad 7da0     .4.}...}...}./.}
    bb8c:	8315 7da0 d667 7da0 29a1 7da1 7cc5 7da1     ...}g..}.).}.|.}
    bb9c:	cfd2 7da1 22c8 7da2 75a7 7da2 c870 7da2     ...}.".}.u.}p..}
    bbac:	1b23 7da3 6dbe 7da3 c043 7da3 12b2 7da4     #..}.m.}C..}...}
    bbbc:	650a 7da4 b74c 7da4 0977 7da5 5b8c 7da5     .e.}L..}w..}.[.}
    bbcc:	ad8b 7da5 ff73 7da5 5145 7da6 a301 7da6     ...}s..}EQ.}...}
    bbdc:	f4a6 7da6 4636 7da7 97af 7da7 e913 7da7     ...}6F.}...}...}
    bbec:	3a60 7da8 8b97 7da8 dcb8 7da8 2dc4 7da9     `:.}...}...}.-.}
    bbfc:	7eb9 7da9 cf98 7da9 2062 7daa 7116 7daa     .~.}...}b .}.q.}
    bc0c:	c1b4 7daa 123c 7dab 62af 7dab b30c 7dab     ...}<..}.b.}...}
    bc1c:	0354 7dac 5385 7dac a3a2 7dac f3a8 7dac     T..}.S.}...}...}
    bc2c:	4399 7dad 9375 7dad e33b 7dad 32ec 7dae     .C.}u..};..}.2.}
    bc3c:	8288 7dae d20e 7dae 217f 7daf 70db 7daf     ...}...}.!.}.p.}
    bc4c:	c021 7daf 0f52 7db0 5e6e 7db0 ad75 7db0     !..}R..}n^.}u..}
    bc5c:	fc67 7db0 4b44 7db1 9a0c 7db1 e8be 7db1     g..}DK.}...}...}
    bc6c:	375c 7db2 85e5 7db2 d459 7db2 22b8 7db3     \7.}...}Y..}.".}
    bc7c:	7102 7db3 bf38 7db3 0d59 7db4 5b65 7db4     .q.}8..}Y..}e[.}
    bc8c:	a95c 7db4 f73e 7db4 450c 7db5 92c6 7db5     \..}>..}.E.}...}
    bc9c:	e06a 7db5 2dfb 7db6 7b76 7db6 c8dd 7db6     j..}.-.}v{.}...}
    bcac:	1630 7db7 636f 7db7 b099 7db7 fdae 7db7     0..}oc.}...}...}
    bcbc:	4aaf 7db8 979c 7db8 e475 7db8 313a 7db9     .J.}...}u..}:1.}
    bccc:	7dea 7db9 ca86 7db9 170e 7dba 6382 7dba     .}.}...}...}.c.}
    bcdc:	afe2 7dba fc2e 7dba 4865 7dbb 9489 7dbb     ...}...}eH.}...}
    bcec:	e099 7dbb 2c95 7dbc 787d 7dbc c451 7dbc     ...}.,.}}x.}Q..}
    bcfc:	1012 7dbd 5bbe 7dbd a757 7dbd f2dc 7dbd     ...}.[.}W..}...}
    bd0c:	3e4d 7dbe 89ab 7dbe d4f5 7dbe 202b 7dbf     M>.}...}...}+ .}
    bd1c:	6b4e 7dbf b65d 7dbf 0159 7dc0 4c41 7dc0     Nk.}]..}Y..}AL.}
    bd2c:	9716 7dc0 e1d7 7dc0 2c85 7dc1 7720 7dc1     ...}...}.,.} w.}
    bd3c:	c1a7 7dc1 0c1b 7dc2 567c 7dc2 a0c9 7dc2     ...}...}|V.}...}
    bd4c:	eb03 7dc2 352a 7dc3 7f3d 7dc3 c93e 7dc3     ...}*5.}=..}>..}
    bd5c:	132b 7dc4 5d06 7dc4 a6cd 7dc4 f081 7dc4     +..}.].}...}...}
    bd6c:	3a23 7dc5 83b1 7dc5 cd2c 7dc5 1695 7dc6     #:.}...},..}...}
    bd7c:	5fea 7dc6 a92d 7dc6 f25d 7dc6 3b7a 7dc7     ._.}-..}]..}z;.}
    bd8c:	8484 7dc7 cd7c 7dc7 1660 7dc8 5f32 7dc8     ...}|..}`..}2_.}
    bd9c:	a7f2 7dc8 f09f 7dc8 3939 7dc9 81c1 7dc9     ...}...}99.}...}
    bdac:	ca36 7dc9 1298 7dca 5ae8 7dca a326 7dca     6..}...}.Z.}&..}
    bdbc:	eb51 7dca 336a 7dcb 7b70 7dcb c364 7dcb     Q..}j3.}p{.}d..}
    bdcc:	0b46 7dcc 5315 7dcc 9ad2 7dcc e27d 7dcc     F..}.S.}...}}..}
    bddc:	2a16 7dcd 719c 7dcd b911 7dcd 0073 7dce     .*.}.q.}...}s..}
    bdec:	47c3 7dce 8f01 7dce d62d 7dce 1d47 7dcf     .G.}...}-..}G..}
    bdfc:	644f 7dcf ab44 7dcf f228 7dcf 38fa 7dd0     Od.}D..}(..}.8.}
    be0c:	7fba 7dd0 c669 7dd0 0d05 7dd1 5390 7dd1     ...}i..}...}.S.}
    be1c:	9a09 7dd1 e070 7dd1 26c5 7dd2 6d08 7dd2     ...}p..}.&.}.m.}
    be2c:	b33a 7dd2 f95a 7dd2 3f69 7dd3 8566 7dd3     :..}Z..}i?.}f..}
    be3c:	cb51 7dd3 112b 7dd4 56f4 7dd4 9caa 7dd4     Q..}+..}.V.}...}
    be4c:	e250 7dd4 27e4 7dd5 6d66 7dd5 b2d7 7dd5     P..}.'.}fm.}...}
    be5c:	f837 7dd5 3d85 7dd6 82c2 7dd6 c7ee 7dd6     7..}.=.}...}...}

0000be6c <sine_q31_t>:
    be6c:	0000 0000 2abf 0324 d97c 0647 9049 096a     .....*$.|.G.I.j.
    be7c:	d35e 0c8b 272b 0fab 106e 12c8 1444 15e2     ^...+'..n...D...
    be8c:	b83c 18f8 826a 1c0b f97b 1f19 a4c5 2223     <...j...{.....#"
    be9c:	0c5d 2528 b928 2826 34eb 2b1f 0a62 2e11     ].(%(.&(.4.+b...
    beac:	c54d 30fb f287 33de 2013 36ba dd32 398c     M..0...3. .62..9
    bebc:	ba70 3c56 49b7 3f17 1e64 41ce cd50 447a     p.V<.I.?d..AP.zD
    becc:	ece6 471c 1533 49b4 dff3 4c3f e8a4 4ebf     ...G3..I..?L...N
    bedc:	cc94 5133 2aef 539b a4d2 55f5 dd54 5842     ..3Q.*.S...UT.BX
    beec:	7999 5a82 20df 5cb4 7c89 5ed7 382f 60ec     .y.Z. .\.|.^/8.`
    befc:	01ac 62f2 8925 64e8 811f 66cf 9e80 68a6     ...b%..d...f...h
    bf0c:	98a3 6a6d 295f 6c24 0d14 6dca 02b1 6f5f     ..mj_)$l...m.._o
    bf1c:	cbc5 70e2 2c84 7255 ebd0 73b5 d344 7504     ...p.,Ur...sD..u
    bf2c:	af3c 7641 4eda 776c 8413 7884 23b0 798a     <.Av.Nlw...x.#.y
    bf3c:	055a 7a7d 039d 7b5d fbed 7c29 ceb1 7ce3     Z.}z..]{..)|...|
    bf4c:	5f3f 7d8a 93e9 7e1d 55fb 7e9d 91c3 7f09     ?_.}...~.U.~....
    bf5c:	368e 7f62 36b3 7fa7 878d 7fd8 2181 7ff6     .6b..6.......!..
    bf6c:	ffff 7fff 2181 7ff6 878d 7fd8 36b3 7fa7     .....!.......6..
    bf7c:	368e 7f62 91c3 7f09 55fb 7e9d 93e9 7e1d     .6b......U.~...~
    bf8c:	5f3f 7d8a ceb1 7ce3 fbed 7c29 039d 7b5d     ?_.}...|..)|..]{
    bf9c:	055a 7a7d 23b0 798a 8413 7884 4eda 776c     Z.}z.#.y...x.Nlw
    bfac:	af3c 7641 d344 7504 ebd0 73b5 2c84 7255     <.AvD..u...s.,Ur
    bfbc:	cbc5 70e2 02b1 6f5f 0d14 6dca 295f 6c24     ...p.._o...m_)$l
    bfcc:	98a3 6a6d 9e80 68a6 811f 66cf 8925 64e8     ..mj...h...f%..d
    bfdc:	01ac 62f2 382f 60ec 7c89 5ed7 20df 5cb4     ...b/8.`.|.^. .\
    bfec:	7999 5a82 dd54 5842 a4d2 55f5 2aef 539b     .y.ZT.BX...U.*.S
    bffc:	cc94 5133 e8a4 4ebf dff3 4c3f 1533 49b4     ..3Q...N..?L3..I
    c00c:	ece6 471c cd50 447a 1e64 41ce 49b7 3f17     ...GP.zDd..A.I.?
    c01c:	ba70 3c56 dd32 398c 2013 36ba f287 33de     p.V<2..9. .6...3
    c02c:	c54d 30fb 0a62 2e11 34eb 2b1f b928 2826     M..0b....4.+(.&(
    c03c:	0c5d 2528 a4c5 2223 f97b 1f19 826a 1c0b     ].(%..#"{...j...
    c04c:	b83c 18f8 1444 15e2 106e 12c8 272b 0fab     <...D...n...+'..
    c05c:	d35e 0c8b 9049 096a d97c 0647 2abf 0324     ^...I.j.|.G..*$.
    c06c:	0000 0000 d541 fcdb 2684 f9b8 6fb7 f695     ....A....&...o..
    c07c:	2ca2 f374 d8d5 f054 ef92 ed37 ebbc ea1d     .,t...T...7.....
    c08c:	47c4 e707 7d96 e3f4 0685 e0e6 5b3b dddc     .G...}......;[..
    c09c:	f3a3 dad7 46d8 d7d9 cb15 d4e0 f59e d1ee     .....F..........
    c0ac:	3ab3 cf04 0d79 cc21 dfed c945 22ce c673     .:..y.!...E.."s.
    c0bc:	4590 c3a9 b649 c0e8 e19c be31 32b0 bb85     .E..I.....1..2..
    c0cc:	131a b8e3 eacd b64b 200d b3c0 175c b140     ......K.. ..\.@.
    c0dc:	336c aecc d511 ac64 5b2e aa0a 22ac a7bd     l3....d..[..."..
    c0ec:	8667 a57d df21 a34b 8377 a128 c7d1 9f13     g.}.!.K.w.(.....
    c0fc:	fe54 9d0d 76db 9b17 7ee1 9930 6180 9759     T....v...~0..aY.
    c10c:	675d 9592 d6a1 93db f2ec 9235 fd4f 90a0     ]g........5.O...
    c11c:	343b 8f1d d37c 8daa 1430 8c4a 2cbc 8afb     ;4..|...0.J..,..
    c12c:	50c4 89be b126 8893 7bed 877b dc50 8675     .P..&....{{.P.u.
    c13c:	faa6 8582 fc63 84a2 0413 83d6 314f 831c     ....c.......O1..
    c14c:	a0c1 8275 6c17 81e2 aa05 8162 6e3d 80f6     ..u..l....b.=n..
    c15c:	c972 809d c94d 8058 7873 8027 de7f 8009     r...M.X.sx'.....
    c16c:	0001 8000 de7f 8009 7873 8027 c94d 8058     ........sx'.M.X.
    c17c:	c972 809d 6e3d 80f6 aa05 8162 6c17 81e2     r...=n....b..l..
    c18c:	a0c1 8275 314f 831c 0413 83d6 fc63 84a2     ..u.O1......c...
    c19c:	faa6 8582 dc50 8675 7bed 877b b126 8893     ....P.u..{{.&...
    c1ac:	50c4 89be 2cbc 8afb 1430 8c4a d37c 8daa     .P...,..0.J.|...
    c1bc:	343b 8f1d fd4f 90a0 f2ec 9235 d6a1 93db     ;4..O.....5.....
    c1cc:	675d 9592 6180 9759 7ee1 9930 76db 9b17     ]g...aY..~0..v..
    c1dc:	fe54 9d0d c7d1 9f13 8377 a128 df21 a34b     T.......w.(.!.K.
    c1ec:	8667 a57d 22ac a7bd 5b2e aa0a d511 ac64     g.}.."...[....d.
    c1fc:	336c aecc 175c b140 200d b3c0 eacd b64b     l3..\.@.. ....K.
    c20c:	131a b8e3 32b0 bb85 e19c be31 b649 c0e8     .....2....1.I...
    c21c:	4590 c3a9 22ce c673 dfed c945 0d79 cc21     .E..."s...E.y.!.
    c22c:	3ab3 cf04 f59e d1ee cb15 d4e0 46d8 d7d9     .:...........F..
    c23c:	f3a3 dad7 5b3b dddc 0685 e0e6 7d96 e3f4     ....;[.......}..
    c24c:	47c4 e707 ebbc ea1d ef92 ed37 d8d5 f054     .G........7...T.
    c25c:	2ca2 f374 6fb7 f695 2684 f9b8 d541 fcdb     .,t..o...&..A...
    c26c:	492d 464e 2d00 6e69 0066 4e2d 4e41 2d00     -INF.-inf.-NAN.-
    c27c:	616e 006e                                   nan.

0000c280 <CSWTCH.22>:
    c280:	0001 0000 0000 0000 0000 0000 0000 0000     ................
	...
    c29c:	0001 0000 0401                                   .....

0000c2a1 <CSWTCH.23>:
    c2a1:	0004 0000 0000 0000 0000 0000 0000 0000     ................
	...
    c2bd:	0002 0000 0003                                   .....

0000c2c2 <__aeabi_ctype_table_C>:
    c2c2:	8000 8080 8080 8080 8080 9090 9090 8090     ................
    c2d2:	8080 8080 8080 8080 8080 8080 8080 8080     ................
    c2e2:	1880 0404 0404 0404 0404 0404 0404 0404     ................
    c2f2:	0204 0202 0202 0202 0202 0402 0404 0404     ................
    c302:	0404 4343 4343 4343 4141 4141 4141 4141     ..CCCCCCAAAAAAAA
    c312:	4141 4141 4141 4141 4141 4141 0404 0404     AAAAAAAAAAAA....
    c322:	0404 2323 2323 2323 2121 2121 2121 2121     ..######!!!!!!!!
    c332:	2121 2121 2121 2121 2121 2121 0404 0404     !!!!!!!!!!!!....
    c342:	0080 0000 0000 0000 0000 0000 0000 0000     ................
	...

0000c3c8 <digit_values>:
    c3c8:	0000 0000 0000 4024 0000 0000 0000 4059     ......$@......Y@
    c3d8:	0000 0000 4000 408f 0000 0000 8800 40c3     .....@.@.......@
    c3e8:	0000 0000 6a00 40f8 0000 0000 8480 412e     .....j.@.......A
    c3f8:	0000 0000 12d0 4163 0000 0000 d784 4197     ......cA.......A

0000c408 <bit_values>:
    c408:	0000 0000 0000 4024 0000 0000 0000 4059     ......$@......Y@
    c418:	0000 0000 8800 40c3 0000 0000 d784 4197     .......@.......A
    c428:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
    c438:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
    c448:	bf3c 7f73 4fdd 7515                         <.s..O.u

0000c450 <dp_h>:
	...
    c458:	0000 4000 b803 3fe2                         ...@...?

0000c460 <dp_l>:
	...
    c468:	d006 43cf fdeb 3e4c                         ...C..L>

0000c470 <bp>:
    c470:	0000 0000 0000 3ff0 0000 0000 0000 3ff8     .......?.......?

0000c480 <npio2_hw>:
    c480:	21fb 3ff9 21fb 4009 d97c 4012 21fb 4019     .!.?.!.@|..@.!.@
    c490:	6a7a 401f d97c 4022 fdbb 4025 21fb 4029     zj.@|."@..%@.!)@
    c4a0:	463a 402c 6a7a 402f 475c 4031 d97c 4032     :F,@zj/@\G1@|.2@
    c4b0:	6b9c 4034 fdbb 4035 8fdb 4037 21fb 4039     .k4@..5@..7@.!9@
    c4c0:	b41b 403a 463a 403c d85a 403d 6a7a 403f     ..:@:F<@Z.=@zj?@
    c4d0:	7e4c 4040 475c 4041 106c 4042 d97c 4042     L~@@\GA@l.B@|.B@
    c4e0:	a28c 4043 6b9c 4044 34ac 4045 fdbb 4045     ..C@.kD@.4E@..E@
    c4f0:	c6cb 4046 8fdb 4047 58eb 4048 21fb 4049     ..F@..G@.XH@.!I@

0000c500 <two_over_pi>:
    c500:	f983 00a2 4e44 006e 29fc 0015 57d1 0027     ....DNn..)...W'.
    c510:	34dd 00f5 db62 00c0 993c 0095 9041 0043     .4..b...<...A.C.
    c520:	5163 00fe debb 00ab 61b7 00c5 6e3a 0024     cQ.......a..:n$.
    c530:	4dd2 0042 0649 00e0 ea09 002e 921c 00d1     .MB.I...........
    c540:	1deb 00fe b129 001c 3ee8 00a7 35f5 0082     ....)....>...5..
    c550:	bb44 002e e99c 0084 26b4 0070 7e41 005f     D........&p.A~_.
    c560:	91d6 0039 8353 0039 f49c 0039 5f8b 0084     ..9.S.9...9.._..
    c570:	f928 00bd 1ff8 003b ffde 0097 980f 0005     (.....;.........
    c580:	2f11 00ef 5a0a 008b 1f6d 006d 7ecf 0036     ./...Z..m.m..~6.
    c590:	cb09 0027 4f46 00b7 669e 003f ea2d 005f     ..'.FO...f?.-._.
    c5a0:	27ba 0075 ebe5 00c7 7b3d 00f1 39f7 0007     .'u.....={...9..
    c5b0:	5292 008a 6bfb 00ea b11f 005f 5d08 008d     .R...k...._..]..
    c5c0:	0330 0056 fc7b 0046 abf0 006b bc20 00cf     0.V.{.F...k. ...
    c5d0:	f436 009a a9e3 001d 615e 0091 1b08 00e6     6.......^a......
    c5e0:	9985 0065 14a0 005f 408d 0068 d880 00ff     ..e..._..@h.....
    c5f0:	7327 004d 0606 0031 56ca 0015 a8c9 0073     'sM...1..V....s.
    c600:	e27b 0060 8c6b 00c0                         {.`.k...

0000c608 <init_jk>:
    c608:	0002 0000 0003 0000 0004 0000 0006 0000     ................

0000c618 <PIo2>:
    c618:	0000 4000 21fb 3ff9 0000 0000 442d 3e74     ...@.!.?....-Dt>
    c628:	0000 8000 4698 3cf8 0000 6000 cc51 3b78     .....F.<...`Q.x;
    c638:	0000 8000 1b83 39f0 0000 4000 2520 387a     .......9...@ %z8
    c648:	0000 8000 8222 36e3 0000 0000 f31d 3569     ...."..6......i5
