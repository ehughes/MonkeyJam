   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	__aeabi_ui2f
  19              		.global	__aeabi_f2iz
  20              		.section	.text.main,"ax",%progbits
  21              		.align	2
  22              		.global	main
  23              		.thumb
  24              		.thumb_func
  26              	main:
  27              	.LFB128:
  28              		.file 1 "../Sources/main.c"
   1:../Sources/main.c **** 
   2:../Sources/main.c **** /*
   3:../Sources/main.c ****  * 
   4:../Sources/main.c ****  * 
   5:../Sources/main.c ****                  
   6:../Sources/main.c ****                                               ``                                      
   7:../Sources/main.c ****                                          +    @;                                      
   8:../Sources/main.c ****                                          @#   @.                                      
   9:../Sources/main.c ****                                          @@  @@                                       
  10:../Sources/main.c ****                                         :#@ @+@                                       
  11:../Sources/main.c ****                                         @+@@#+@                                       
  12:../Sources/main.c ****                                        `@+@+++@@`                                     
  13:../Sources/main.c ****                                        @++++++@@@@                                    
  14:../Sources/main.c ****                                      #@+++++++++++##                                  
  15:../Sources/main.c ****                              .@@@@@@@@+++++++++++++@@@@+                              
  16:../Sources/main.c ****                            .@#+@@@@###++++++++++++#@@@@@@                             
  17:../Sources/main.c ****                           #@++@@++++++++++++++++++++++@@@@                            
  18:../Sources/main.c ****                          #@++@#+++++++++++++++++++++++++#@#                           
  19:../Sources/main.c ****                         :@++#@++++++++''''''''''++++++++++@@                          
  20:../Sources/main.c ****                         @+++@++++++++'''''''''''''+++++++++@#'                        
  21:../Sources/main.c ****                        ##++++++++++''''''''''''''''+++++++++++@                       
  22:../Sources/main.c ****                        @+++++++++@@@#+'''''''''''''+#+++++++++#@                      
  23:../Sources/main.c ****                       :#+++++++@:,,,:@@@@#+'''+#@@':;@@#+++++++@                      
  24:../Sources/main.c ****                       @++++++#@,,,,,,,,,,;'+++;,,,,,,,,@@++++++@@    +@@@@@@'         
  25:../Sources/main.c ****         `@@@@@@@@,    @++++++@,,,,,,,,,,,,,,,,,,,,,,,,,,@@++++++@  @@++++++++@@       
  26:../Sources/main.c ****        @@++++++++@@  ;++++++@,,,,,,,,,,,,,,,,,,,,,,,,,,,,@@+++++@:@#+++++++++++@`     
  27:../Sources/main.c ****      ,@++++++++++++@`@++++++#,,,,,,,,,,,,,,,,,,,,,,,,,,,,,@+++++@@++++++++++++++@`    
  28:../Sources/main.c ****     :@++++++++++++++@@+++++@,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,@@+++++@+++++++++++++++@    
  29:../Sources/main.c ****    `@+++++++++++++++#@+++++@,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,:@+++++@+++@@@@@@@++++++@   
  30:../Sources/main.c ****    @+++++#@@@@@@@+++##++++';,,,,,::::,,,,,,,,,,,,,::::,,,,,@+++++@##@@@@@@@@@@++++@:  
  31:../Sources/main.c ****   '#++++@@@@@@@@@@##@+++++#,,,,,::::::,,,,,,,,,,,::::::,,,,@#++++@@@@@@;::::+@@++++@  
  32:../Sources/main.c ****   @++++@@;:::::'@@@@@+++++@,,,,,::@#@':,,,,,,,,,:#:`+'::,,,#@++++@@@:,,,,:::::@@+++@` 
  33:../Sources/main.c ****  ,@+++@@:::::,,,,,@@@+++++@,,,,::@````@,,,,,,,,:@````.;:,,,;@++++@#,,,,,,,,::::@++++@ 
  34:../Sources/main.c ****  @+++#@::::,,,,,,,,'@+++++@,,,,:@``````;,,,,,,,;``````#:,,,:@++++#;,,,,,,,,,:::'@+++@ 
  35:../Sources/main.c ****  @+++@;::,,,,,,,,,,,@+++++@,,,,::``````#,,,,,,,@```````',,,,@++++#,,,,,,,,,,,:::@+++@ 
  36:../Sources/main.c ****  @+++@:::,,,,,,,,,,,@+++++#,,,:'````````:,,,,,:````,```@:,,:@++++@,,,,,,,,,,,,::@#++#.
  37:../Sources/main.c **** ,#++#@::,,,,,,,,,,,,@+++++#,,,:@``;##,``#,,,,,'``;###``#:,,:#++++@,,,,,,,,,,,,::+@+++'
  38:../Sources/main.c **** '+++@+::,,,,,,,,,,,,@+++++@,,:#';;'';'.;@,,,,,#:.';'';;+#,,'+++++@,,,,,,,,,,,,::;@+++#
  39:../Sources/main.c **** #+++@;::,,,,,,,,,,,,@+++++@,+,:'`:;;;;:.'+,,,''.,;;;;;`::;,@+++++@,,,,,,,,,,,,::;@+++@
  40:../Sources/main.c **** @+++@;::,,,,,,,,,,,,@+++++@,',,'`;;;``;.';,,:,'`;.`;;;`;,,#@++++#+,,,,,,,,,,,,::'@+++@
  41:../Sources/main.c **** #+++@'::,,,,,,,,,,,,@#++++@,;,,'`;;;``;`':++#,'`;:`;;;`',,#@++++@,,,,,,,,,,,,,::@#++++
  42:../Sources/main.c **** ++++#@::,,,,,,,,,,,,:@++++@,#,,;`:;:;;;`':#+#,;`:;;:;;`;,,'#++++@,,,,,,,,,,,,,::@+++#;
  43:../Sources/main.c **** :#+++@::,,,,,,,,,,,,,@+++++'@,,,.`;;;;:.:',,,,,.`;;;;.`,,,@+++++@,,,,,,,,,,,,:::@+++@`
  44:../Sources/main.c ****  @+++@;::,,,,,,,,,,,,@+++++@:,,,'`;;;;`,,;,,,+,'`;;;;`',,'@+++++@,,,,,,,,,,,:::@++++@ 
  45:../Sources/main.c ****  @++++@:::,,,,,,,,,,,,@++++#,+,,,,`;;..'#,,,,,',.`,.`,,,,@@++++#',,,,,,,,,,:::'#++++@ 
  46:../Sources/main.c ****  @#++++#:::,,,,,,,,,,:@+++++@,',,:....'+,,;';,,+;,..:,,,@@@++++@:,,,,,,,,,:::'@++++@` 
  47:../Sources/main.c ****   @++++##::::,,,,,,,::'+++++#@,#'::'+#,'@@@#@@@;:#';:;#;#@+++++@:::,,,,:::::##++++#@  
  48:../Sources/main.c ****   @@+++++@::::::,,::::@@++###@@,,,,,,,#@':,,@,;@,,,,,,,,@@##+++@+:::::::::;@++++++@   
  49:../Sources/main.c ****    @#+++++@#:::::::::@#@######@,,,,,,,@:,@@,@',@,,,,,,,@@######@#@::::::+@#++++++@    
  50:../Sources/main.c ****     @#++++++@@;::::'@##@####@@@,,,,,,,@@,#;,:,@@,,,,,,:@@######@###@@@@@#++++++#@     
  51:../Sources/main.c ****      @@+++++++@@@@@###@@##@@@:,,,,,,,,,,,,,,,,,,,,,,,,,,,:#@@##@@@#+++++++++++@#      
  52:../Sources/main.c ****       ,@+++++++++++#@@+@@@,,,,,,,,,,,,,,,,,+,,,,,,,,,,,,,,,,,;@@ +@@@#####@@@+        
  53:../Sources/main.c ****         .@@@@@@@@@@@. ,@;,,,,,,,,,,,,,,,,,,',,,,,,,,,,,,,,,,,,,@`   `;#@#'.           
  54:../Sources/main.c ****             `,:,`     @@,,,,,,,,,,,,,,,,,,,',,,,,,,,,,,,@@,,,,,,@                     
  55:../Sources/main.c ****                      `@,,,,,,'@@;,,,,,,,,,,,,,,,,,,,,,#@@+,,,,,,@                     
  56:../Sources/main.c ****                      '@,,,,,,@,@@@#,,,,,,,,,,,,,,,,,#@@@,,,,,,,,@;                    
  57:../Sources/main.c ****                      ,@:,,,,,,,,'@;#@@#':,,,,,,;#@@@@@#,,,,,,,,:@                     
  58:../Sources/main.c ****                       @@,,,,,,,,,:@,```';+@@@@#+:``:@;,,,,,,,,,@+                     
  59:../Sources/main.c ****                        @@,,,,,,,,,,@```;   .  `````@,,,,,,,,,,@+                      
  60:../Sources/main.c ****                         :@;,,,,,,,,,@+,.      ``:+@,,,,,,,,,@@`                       
  61:../Sources/main.c ****                           '@',,,,,,,,@``.,:;;:.`.@,,,,,,,+@@`                         
  62:../Sources/main.c ****                             :@@',,,,,,@'`    ``.@;,,,,#@@.                            
  63:../Sources/main.c ****                                ;@@#,,,,@@:` `,@@+,,;@@`                               
  64:../Sources/main.c ****                                   '@@@,,:@@@@@@;,,@@                                  
  65:../Sources/main.c ****                                      @@@+,,:;,,,,@`                                   
  66:../Sources/main.c ****                                        :@@+,,,,+@                                     
  67:../Sources/main.c ****                                           ;@@@@                                                    
  68:../Sources/main.c **** 
  69:../Sources/main.c ****  * 
  70:../Sources/main.c ****  */
  71:../Sources/main.c **** 
  72:../Sources/main.c **** #include "Derivative.h" /* include peripheral declarations */
  73:../Sources/main.c **** #include "arm_math.h"
  74:../Sources/main.c **** #include "drivers/frdm-K20-def.h"
  75:../Sources/main.c **** #include "drivers/mcg/mcg.h"
  76:../Sources/main.c **** #include "drivers/sai/sai.h"
  77:../Sources/main.c **** #include "cpu/arm_cm4.h"
  78:../Sources/main.c **** #include "DSP/AudioIF.h"
  79:../Sources/main.c **** #include "DSP/AudioProcess.h"
  80:../Sources/main.c **** #include "drivers/adc16/adc16.h"
  81:../Sources/main.c **** #include "drivers/io.h"
  82:../Sources/main.c **** #include "DSP/IIR.h"
  83:../Sources/main.c **** 
  84:../Sources/main.c **** 
  85:../Sources/main.c **** int main(void)
  86:../Sources/main.c **** 									{
  29              		.loc 1 86 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 20
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 83B0     		sub	sp, sp, #12
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 32
  44 0004 02AF     		add	r7, sp, #8
  45              	.LCFI2:
  46              		.cfi_def_cfa 7, 24
  87:../Sources/main.c **** 
  88:../Sources/main.c ****     //Get up and running to 50MHz!
  89:../Sources/main.c ****     pll_init(8000000, LOW_POWER, CRYSTAL, 4, 25, 1);
  47              		.loc 1 89 0
  48 0006 4FF01903 		mov	r3, #25
  49 000a 0093     		str	r3, [sp, #0]
  50 000c 4FF00103 		mov	r3, #1
  51 0010 0193     		str	r3, [sp, #4]
  52 0012 4FF49050 		mov	r0, #4608
  53 0016 C0F27A00 		movt	r0, 122
  54 001a 4FF00001 		mov	r1, #0
  55 001e 4FF00102 		mov	r2, #1
  56 0022 4FF00403 		mov	r3, #4
  57 0026 FFF7FEFF 		bl	pll_init
  90:../Sources/main.c ****     InitIO();
  58              		.loc 1 90 0
  59 002a FFF7FEFF 		bl	InitIO
  91:../Sources/main.c ****     InitAudioProcess();
  60              		.loc 1 91 0
  61 002e FFF7FEFF 		bl	InitAudioProcess
  92:../Sources/main.c ****     EnableInterrupts;
  62              		.loc 1 92 0
  63              	@ 92 "../Sources/main.c" 1
  64 0032 62B6     		 CPSIE i
  65              	@ 0 "" 2
  93:../Sources/main.c ****     
  94:../Sources/main.c ****     //Main Loop....  All audio processing goes on in the IRQ routine for the SAI!
  95:../Sources/main.c ****     //The main loop will just read the pots and send updated coefficients to the processing IRQs
  96:../Sources/main.c ****     //Note that computations in the foreground do not have to be very fast.  They will be using cyc
  97:../Sources/main.c ****     //processing interrupt routines.  For now we will have no other IRQs to devote as much CPU time
  98:../Sources/main.c ****     //audio processing
  99:../Sources/main.c ****     
 100:../Sources/main.c ****     //Switch into the desired Patch
 101:../Sources/main.c ****    
 102:../Sources/main.c ****    // ChangePatch(PATCH_PASS_THROUGH);
 103:../Sources/main.c ****     ChangePatch(PATCH_OVERDRIVE);
  66              		.loc 1 103 0
  67              		.thumb
  68 0034 4FF00300 		mov	r0, #3
  69 0038 FFF7FEFF 		bl	ChangePatch
  70              	.L9:
 104:../Sources/main.c ****    // ChangePatch(PATCH_TUBEY_CLEAN);
 105:../Sources/main.c ****    //  ChangePatch(PATCH_OD_DEMO_SINE_TEST);
 106:../Sources/main.c ****     for(;;)
 107:../Sources/main.c ****         {
 108:../Sources/main.c ****     	
 109:../Sources/main.c ****     		//For Maker Faire Demo
 110:../Sources/main.c ****     		if(!IO_ZETA_IS_ON)
  71              		.loc 1 110 0
  72 003c 4FF28003 		movw	r3, #61568
  73 0040 C4F20F03 		movt	r3, 16399
  74 0044 1B69     		ldr	r3, [r3, #16]
  75 0046 03F00103 		and	r3, r3, #1
  76 004a 002B     		cmp	r3, #0
  77 004c 07D1     		bne	.L2
 111:../Sources/main.c ****     		{
 112:../Sources/main.c ****     			CurrentPatch = PATCH_TUBEY_CLEAN;
  78              		.loc 1 112 0
  79 004e 40F20003 		movw	r3, #:lower16:CurrentPatch
  80 0052 C0F20003 		movt	r3, #:upper16:CurrentPatch
  81 0056 4FF00202 		mov	r2, #2
  82 005a 1A70     		strb	r2, [r3, #0]
  83 005c 06E0     		b	.L3
  84              	.L2:
 113:../Sources/main.c ****     		}
 114:../Sources/main.c ****     		else
 115:../Sources/main.c ****     		{
 116:../Sources/main.c ****     			CurrentPatch =PATCH_OVERDRIVE;
  85              		.loc 1 116 0
  86 005e 40F20003 		movw	r3, #:lower16:CurrentPatch
  87 0062 C0F20003 		movt	r3, #:upper16:CurrentPatch
  88 0066 4FF00302 		mov	r2, #3
  89 006a 1A70     		strb	r2, [r3, #0]
  90              	.L3:
 117:../Sources/main.c ****     		}
 118:../Sources/main.c ****     	
 119:../Sources/main.c ****             //In the main loop we will  read in the potentiometer values and update the processing 
 120:../Sources/main.c ****             switch(CurrentPatch)
  91              		.loc 1 120 0
  92 006c 40F20003 		movw	r3, #:lower16:CurrentPatch
  93 0070 C0F20003 		movt	r3, #:upper16:CurrentPatch
  94 0074 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  95 0076 032B     		cmp	r3, #3
  96 0078 79D0     		beq	.L6
  97 007a 072B     		cmp	r3, #7
  98 007c 00F0ED80 		beq	.L7
  99 0080 022B     		cmp	r3, #2
 100 0082 40F00181 		bne	.L10
 101              	.L5:
 121:../Sources/main.c ****                 {
 122:../Sources/main.c ****                     case PATCH_TUBEY_CLEAN:
 123:../Sources/main.c ****                     	SetPotLimits(POT_ALPHA,1000,4000);
 102              		.loc 1 123 0
 103 0086 4FF00000 		mov	r0, #0
 104 008a 4FF00001 		mov	r1, #0
 105 008e C4F27A41 		movt	r1, 17530
 106 0092 4FF00002 		mov	r2, #0
 107 0096 C4F27A52 		movt	r2, 17786
 108 009a FFF7FEFF 		bl	SetPotLimits
 124:../Sources/main.c ****                     	                        //Since a Q31 is 31 bits of fraction and 1 bit of sign
 125:../Sources/main.c ****                     	                        //multiply a binary value of 31 bits by the float and 
 126:../Sources/main.c ****                     	                        OD_Level = (q31_t)((float)0x7fffffff);
 109              		.loc 1 126 0
 110 009e 40F20003 		movw	r3, #:lower16:OD_Level
 111 00a2 C0F20003 		movt	r3, #:upper16:OD_Level
 112 00a6 6FF00042 		mvn	r2, #-2147483648
 113 00aa 1A60     		str	r2, [r3, #0]
 127:../Sources/main.c ****                     	                        SetPotLimits(POT_BETA,0.001,1.5);
 114              		.loc 1 127 0
 115 00ac 4FF00100 		mov	r0, #1
 116 00b0 41F26F21 		movw	r1, #4719
 117 00b4 C3F68321 		movt	r1, 14979
 118 00b8 4FF07F52 		mov	r2, #1069547520
 119 00bc FFF7FEFF 		bl	SetPotLimits
 128:../Sources/main.c ****                     	                        SetPotLimits(POT_GAMMA,-15,15.0 );
 120              		.loc 1 128 0
 121 00c0 4FF00200 		mov	r0, #2
 122 00c4 4FF00001 		mov	r1, #0
 123 00c8 CCF27011 		movt	r1, 49520
 124 00cc 4FF00002 		mov	r2, #0
 125 00d0 C4F27012 		movt	r2, 16752
 126 00d4 FFF7FEFF 		bl	SetPotLimits
 129:../Sources/main.c ****                     	                       
 130:../Sources/main.c ****                     	                        DesignAudioBiquadIIR_q31_t(&MyIIR[0].Shadow_Coef,// Po
 127              		.loc 1 130 0
 128 00d8 40F20003 		movw	r3, #:lower16:AudioSampleRate
 129 00dc C0F20003 		movt	r3, #:upper16:AudioSampleRate
 130 00e0 1B68     		ldr	r3, [r3, #0]
 131 00e2 1846     		mov	r0, r3
 132 00e4 FFF7FEFF 		bl	__aeabi_ui2f
 133 00e8 0546     		mov	r5, r0
 134 00ea 4FF00000 		mov	r0, #0
 135 00ee FFF7FEFF 		bl	ReadPOT
 136 00f2 0446     		mov	r4, r0
 137 00f4 4FF00100 		mov	r0, #1
 138 00f8 FFF7FEFF 		bl	ReadPOT
 139 00fc 0646     		mov	r6, r0
 140 00fe 4FF00200 		mov	r0, #2
 141 0102 FFF7FEFF 		bl	ReadPOT
 142 0106 0346     		mov	r3, r0
 143 0108 0096     		str	r6, [sp, #0]	@ float
 144 010a 0193     		str	r3, [sp, #4]	@ float
 145 010c 5F48     		ldr	r0, .L11
 146 010e 4FF00601 		mov	r1, #6
 147 0112 2A46     		mov	r2, r5
 148 0114 2346     		mov	r3, r4
 149 0116 FFF7FEFF 		bl	DesignAudioBiquadIIR_q31_t
 131:../Sources/main.c ****                     	                                                    BIQUAD_PEAKING_EQ,
 132:../Sources/main.c ****                     	                                                   AudioSampleRate, //System S
 133:../Sources/main.c ****                     	                                                   ReadPOT(POT_ALPHA), //f0 ("
 134:../Sources/main.c ****                     	                                                   //Corner Frequency, or shel
 135:../Sources/main.c ****                     	                                                   //on which filter type.  Th
 136:../Sources/main.c ****                     	                                                   ReadPOT(POT_BETA),//(Q - th
 137:../Sources/main.c ****                     	                                                   // the classic EE Q.  That 
 138:../Sources/main.c ****                     	                                                   // a boost of N dB followed
 139:../Sources/main.c ****                     	                                                   // f0/Fs results in a preci
 140:../Sources/main.c ****                     	                                                   ReadPOT(POT_GAMMA)// dBgain
 141:../Sources/main.c ****                     	                                                  );
 142:../Sources/main.c ****                     	                      
 143:../Sources/main.c ****                     	                        DesignAudioBiquadIIR_q31_t(&MyIIR[1].Shadow_Coef,// Po
 150              		.loc 1 143 0
 151 011a 40F20003 		movw	r3, #:lower16:AudioSampleRate
 152 011e C0F20003 		movt	r3, #:upper16:AudioSampleRate
 153 0122 1B68     		ldr	r3, [r3, #0]
 154 0124 1846     		mov	r0, r3
 155 0126 FFF7FEFF 		bl	__aeabi_ui2f
 156 012a 0346     		mov	r3, r0
 157 012c 4FF08042 		mov	r2, #1073741824
 158 0130 0092     		str	r2, [sp, #0]	@ float
 159 0132 4FF00002 		mov	r2, #0
 160 0136 0192     		str	r2, [sp, #4]	@ float
 161 0138 5548     		ldr	r0, .L11+4
 162 013a 4FF00001 		mov	r1, #0
 163 013e 1A46     		mov	r2, r3
 164 0140 4FF40053 		mov	r3, #8192
 165 0144 C4F2CB53 		movt	r3, 17867
 166 0148 FFF7FEFF 		bl	DesignAudioBiquadIIR_q31_t
 144:../Sources/main.c ****                     	                                                                 BIQUAD_LOW_PA
 145:../Sources/main.c ****                     	                                                                 AudioSampleRa
 146:../Sources/main.c ****                     	                                                                 6500, //("whe
 147:../Sources/main.c ****                     	                                                                 //Corner Freq
 148:../Sources/main.c ****                     	                                                                 //on which fi
 149:../Sources/main.c ****                     	                                                                 2.0,//(the EE
 150:../Sources/main.c ****                     	                                                                 // the classi
 151:../Sources/main.c ****                     	                                                                 // a boost of
 152:../Sources/main.c ****                     	                                                                 // f0/Fs resu
 153:../Sources/main.c ****                     	                                                                 0// (used onl
 154:../Sources/main.c ****                     	                                                                );
 155:../Sources/main.c ****                     	           
 156:../Sources/main.c ****                     	                        MyIIR[0].Update = 1;
 167              		.loc 1 156 0
 168 014c 40F20003 		movw	r3, #:lower16:MyIIR
 169 0150 C0F20003 		movt	r3, #:upper16:MyIIR
 170 0154 4FF00102 		mov	r2, #1
 171 0158 83F84820 		strb	r2, [r3, #72]
 157:../Sources/main.c ****                     	                        MyIIR[1].Update = 1;
 172              		.loc 1 157 0
 173 015c 40F20003 		movw	r3, #:lower16:MyIIR
 174 0160 C0F20003 		movt	r3, #:upper16:MyIIR
 175 0164 4FF00102 		mov	r2, #1
 176 0168 83F89820 		strb	r2, [r3, #152]
 158:../Sources/main.c ****                     	                        
 159:../Sources/main.c ****                         break;
 177              		.loc 1 159 0
 178 016c 8DE0     		b	.L8
 179              	.L6:
 160:../Sources/main.c **** 
 161:../Sources/main.c ****                     case PATCH_OVERDRIVE:
 162:../Sources/main.c ****                         //The use of the variable OD_Level is documented in the audio process routi
 163:../Sources/main.c ****                         //THis doesn't necessary need to be called every time through the loop but 
 164:../Sources/main.c ****                         OD_Level =  (q31_t)0x7fffffff;
 180              		.loc 1 164 0
 181 016e 40F20003 		movw	r3, #:lower16:OD_Level
 182 0172 C0F20003 		movt	r3, #:upper16:OD_Level
 183 0176 6FF00042 		mvn	r2, #-2147483648
 184 017a 1A60     		str	r2, [r3, #0]
 165:../Sources/main.c ****                         SetPotLimits(POT_BETA,0.01,.7);
 185              		.loc 1 165 0
 186 017c 4FF00100 		mov	r0, #1
 187 0180 4DF20A71 		movw	r1, #55050
 188 0184 C3F62341 		movt	r1, 15395
 189 0188 43F23332 		movw	r2, #13107
 190 018c C3F63372 		movt	r2, 16179
 191 0190 FFF7FEFF 		bl	SetPotLimits
 166:../Sources/main.c ****                         SetPotLimits(POT_GAMMA,50,350);
 192              		.loc 1 166 0
 193 0194 4FF00200 		mov	r0, #2
 194 0198 4FF00001 		mov	r1, #0
 195 019c C4F24821 		movt	r1, 16968
 196 01a0 4FF00002 		mov	r2, #0
 197 01a4 C4F2AF32 		movt	r2, 17327
 198 01a8 FFF7FEFF 		bl	SetPotLimits
 167:../Sources/main.c ****                         SetPotLimits(POT_ALPHA,-40,80);
 199              		.loc 1 167 0
 200 01ac 4FF00000 		mov	r0, #0
 201 01b0 4FF00001 		mov	r1, #0
 202 01b4 CCF22021 		movt	r1, 49696
 203 01b8 4FF00002 		mov	r2, #0
 204 01bc C4F2A022 		movt	r2, 17056
 205 01c0 FFF7FEFF 		bl	SetPotLimits
 168:../Sources/main.c ****                         DesignAudioBiquadIIR_q31_t(&MyIIR[0].Shadow_Coef,// Pointer to the IIR Stru
 206              		.loc 1 168 0
 207 01c4 40F20003 		movw	r3, #:lower16:AudioSampleRate
 208 01c8 C0F20003 		movt	r3, #:upper16:AudioSampleRate
 209 01cc 1B68     		ldr	r3, [r3, #0]
 210 01ce 1846     		mov	r0, r3
 211 01d0 FFF7FEFF 		bl	__aeabi_ui2f
 212 01d4 0546     		mov	r5, r0
 213 01d6 4FF00200 		mov	r0, #2
 214 01da FFF7FEFF 		bl	ReadPOT
 215 01de 0446     		mov	r4, r0
 216 01e0 4FF00100 		mov	r0, #1
 217 01e4 FFF7FEFF 		bl	ReadPOT
 218 01e8 0646     		mov	r6, r0
 219 01ea 4FF00000 		mov	r0, #0
 220 01ee FFF7FEFF 		bl	ReadPOT
 221 01f2 0346     		mov	r3, r0
 222 01f4 0096     		str	r6, [sp, #0]	@ float
 223 01f6 0193     		str	r3, [sp, #4]	@ float
 224 01f8 2448     		ldr	r0, .L11
 225 01fa 4FF00601 		mov	r1, #6
 226 01fe 2A46     		mov	r2, r5
 227 0200 2346     		mov	r3, r4
 228 0202 FFF7FEFF 		bl	DesignAudioBiquadIIR_q31_t
 169:../Sources/main.c ****                                                    BIQUAD_PEAKING_EQ,
 170:../Sources/main.c ****                                                    AudioSampleRate, //System Sample Rate
 171:../Sources/main.c ****                                                    ReadPOT(POT_GAMMA), //("wherever it's happenin',
 172:../Sources/main.c ****                                                    //Corner Frequency, or shelf midpoint frequency,
 173:../Sources/main.c ****                                                    //on which filter type.  The "significant freque
 174:../Sources/main.c ****                                                    ReadPOT(POT_BETA),//(the EE kind of definition, 
 175:../Sources/main.c ****                                                    // the classic EE Q.  That adjustment in definit
 176:../Sources/main.c ****                                                    // a boost of N dB followed by a cut of N dB for
 177:../Sources/main.c ****                                                    // f0/Fs results in a precisely flat unity gain 
 178:../Sources/main.c ****                                                    ReadPOT(POT_ALPHA)// (used only for peaking and 
 179:../Sources/main.c ****                                                   );
 180:../Sources/main.c ****                         DesignAudioBiquadIIR_q31_t(&MyIIR[1].Shadow_Coef,// Pointer to the IIR Stru
 229              		.loc 1 180 0
 230 0206 40F20003 		movw	r3, #:lower16:AudioSampleRate
 231 020a C0F20003 		movt	r3, #:upper16:AudioSampleRate
 232 020e 1B68     		ldr	r3, [r3, #0]
 233 0210 1846     		mov	r0, r3
 234 0212 FFF7FEFF 		bl	__aeabi_ui2f
 235 0216 0346     		mov	r3, r0
 236 0218 4FF08042 		mov	r2, #1073741824
 237 021c 0092     		str	r2, [sp, #0]	@ float
 238 021e 4FF00002 		mov	r2, #0
 239 0222 0192     		str	r2, [sp, #4]	@ float
 240 0224 1A48     		ldr	r0, .L11+4
 241 0226 4FF00001 		mov	r1, #0
 242 022a 1A46     		mov	r2, r3
 243 022c 4FF00003 		mov	r3, #0
 244 0230 C4F2FA43 		movt	r3, 17658
 245 0234 FFF7FEFF 		bl	DesignAudioBiquadIIR_q31_t
 181:../Sources/main.c ****                                                    BIQUAD_LOW_PASS_FILTER,
 182:../Sources/main.c ****                                                    AudioSampleRate, //System Sample Rate
 183:../Sources/main.c ****                                                    2000, //("wherever it's happenin', man."  Center
 184:../Sources/main.c ****                                                    //Corner Frequency, or shelf midpoint frequency,
 185:../Sources/main.c ****                                                    //on which filter type.  The "significant freque
 186:../Sources/main.c ****                                                    2.0,//(the EE kind of definition, except for pea
 187:../Sources/main.c ****                                                    // the classic EE Q.  That adjustment in definit
 188:../Sources/main.c ****                                                    // a boost of N dB followed by a cut of N dB for
 189:../Sources/main.c ****                                                    // f0/Fs results in a precisely flat unity gain 
 190:../Sources/main.c ****                                                    0// (used only for peaking and shelving filters)
 191:../Sources/main.c ****                                                   );
 192:../Sources/main.c ****                         //Copy in our value,   From there it will be used in the interrupt routine
 193:../Sources/main.c ****                         MyIIR[0].Update = 1;
 246              		.loc 1 193 0
 247 0238 40F20003 		movw	r3, #:lower16:MyIIR
 248 023c C0F20003 		movt	r3, #:upper16:MyIIR
 249 0240 4FF00102 		mov	r2, #1
 250 0244 83F84820 		strb	r2, [r3, #72]
 194:../Sources/main.c ****                         MyIIR[1].Update = 1;
 251              		.loc 1 194 0
 252 0248 40F20003 		movw	r3, #:lower16:MyIIR
 253 024c C0F20003 		movt	r3, #:upper16:MyIIR
 254 0250 4FF00102 		mov	r2, #1
 255 0254 83F89820 		strb	r2, [r3, #152]
 195:../Sources/main.c ****                         break;
 256              		.loc 1 195 0
 257 0258 17E0     		b	.L8
 258              	.L7:
 196:../Sources/main.c ****                         
 197:../Sources/main.c ****                     case PATCH_OD_DEMO_SINE_TEST:     
 198:../Sources/main.c ****                     	
 199:../Sources/main.c ****                     	 SetPotLimits(POT_ALPHA,0,0x7fffffff);
 259              		.loc 1 199 0
 260 025a 4FF00000 		mov	r0, #0
 261 025e 4FF00001 		mov	r1, #0
 262 0262 4FF09E42 		mov	r2, #1325400064
 263 0266 FFF7FEFF 		bl	SetPotLimits
 200:../Sources/main.c ****                     	 OD_Level = ReadPOT(POT_ALPHA);
 264              		.loc 1 200 0
 265 026a 4FF00000 		mov	r0, #0
 266 026e FFF7FEFF 		bl	ReadPOT
 267 0272 0346     		mov	r3, r0
 268 0274 1846     		mov	r0, r3
 269 0276 FFF7FEFF 		bl	__aeabi_f2iz
 270 027a 0246     		mov	r2, r0
 271 027c 40F20003 		movw	r3, #:lower16:OD_Level
 272 0280 C0F20003 		movt	r3, #:upper16:OD_Level
 273 0284 1A60     		str	r2, [r3, #0]
 201:../Sources/main.c ****                     	 
 202:../Sources/main.c ****                     	break;
 274              		.loc 1 202 0
 275 0286 00E0     		b	.L8
 276              	.L10:
 203:../Sources/main.c ****                     	
 204:../Sources/main.c ****                     	
 205:../Sources/main.c ****                         
 206:../Sources/main.c ****                     default:
 207:../Sources/main.c ****                         break;
 277              		.loc 1 207 0
 278 0288 00BF     		nop
 279              	.L8:
 208:../Sources/main.c ****                 }
 209:../Sources/main.c ****         }
 280              		.loc 1 209 0
 281 028a D7E6     		b	.L9
 282              	.L12:
 283              		.align	2
 284              	.L11:
 285 028c 30000000 		.word	MyIIR+48
 286 0290 80000000 		.word	MyIIR+128
 287              		.cfi_endproc
 288              	.LFE128:
 290              		.text
 291              	.Letext0:
 292              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 293              		.file 3 "C:/Users/ehughes/Documents/GitHub/MonkeyJam/MonkeyJam/Project_Headers/MK20D5.h"
 294              		.file 4 "C:/Users/ehughes/Documents/GitHub/MonkeyJam/CMSIS_DSP_3.2/Sources/Include/arm_math.h"
 295              		.file 5 "../Sources/DSP/IIR.h"
 296              		.file 6 "../Sources/DSP/AudioIF.h"
 297              		.file 7 "../Sources/DSP/AudioProcess.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\ehughes\AppData\Local\Temp\ccOpsHgV.s:21     .text.main:00000000 $t
C:\Users\ehughes\AppData\Local\Temp\ccOpsHgV.s:26     .text.main:00000000 main
C:\Users\ehughes\AppData\Local\Temp\ccOpsHgV.s:285    .text.main:0000028c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_ui2f
__aeabi_f2iz
pll_init
InitIO
InitAudioProcess
ChangePatch
CurrentPatch
SetPotLimits
OD_Level
AudioSampleRate
ReadPOT
DesignAudioBiquadIIR_q31_t
MyIIR
