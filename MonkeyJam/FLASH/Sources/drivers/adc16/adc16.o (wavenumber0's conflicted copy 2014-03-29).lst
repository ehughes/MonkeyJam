   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"adc16.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.ADC_Cal,"ax",%progbits
  19              		.align	2
  20              		.global	ADC_Cal
  21              		.thumb
  22              		.thumb_func
  24              	ADC_Cal:
  25              	.LFB0:
  26              		.file 1 "../Sources/drivers/adc16/adc16.c"
   1:../Sources/drivers/adc16/adc16.c **** /*
   2:../Sources/drivers/adc16/adc16.c ****  * File:		a16dc.c
   3:../Sources/drivers/adc16/adc16.c ****  * Purpose:		Simple Driver or API for AdC16/PGA
   4:../Sources/drivers/adc16/adc16.c ****  * This file contains the following two functions:
   5:../Sources/drivers/adc16/adc16.c ****  *  1. ADC_Cal: calibrates the ADC
   6:../Sources/drivers/adc16/adc16.c ****  *  2. ADC_Config_Alt: Simply configures an ADC per a structure
   7:../Sources/drivers/adc16/adc16.c ****  *
   8:../Sources/drivers/adc16/adc16.c ****  * Typical usage: Fill the structure with the ADC and PGA register contents
   9:../Sources/drivers/adc16/adc16.c ****  * needed for the ADC usage.
  10:../Sources/drivers/adc16/adc16.c **** 
  11:../Sources/drivers/adc16/adc16.c ****  * a) Call the ADC_Config_Alt function to configure an ADC, (ADC0 or ADC1)
  12:../Sources/drivers/adc16/adc16.c ****  * b) Call the ADC_Cal function to calibrate that ADC
  13:../Sources/drivers/adc16/adc16.c ****  * c) Call the ADC_Config_Alt function again to restore desired configuation
  14:../Sources/drivers/adc16/adc16.c ****  *    after a calibration
  15:../Sources/drivers/adc16/adc16.c ****  *
  16:../Sources/drivers/adc16/adc16.c ****  *
  17:../Sources/drivers/adc16/adc16.c ****  */
  18:../Sources/drivers/adc16/adc16.c **** 
  19:../Sources/drivers/adc16/adc16.c **** #include "derivative.h"
  20:../Sources/drivers/adc16/adc16.c **** #include "adc16.h"
  21:../Sources/drivers/adc16/adc16.c **** 
  22:../Sources/drivers/adc16/adc16.c **** #include "../../cpu/arm_cm4.h"
  23:../Sources/drivers/adc16/adc16.c **** 
  24:../Sources/drivers/adc16/adc16.c **** 
  25:../Sources/drivers/adc16/adc16.c **** //#define ADC0_irq_no 38
  26:../Sources/drivers/adc16/adc16.c **** // Bit shifting of bitfiled is already taken into account so
  27:../Sources/drivers/adc16/adc16.c **** // bitfiled values are always represented as relative to their position.
  28:../Sources/drivers/adc16/adc16.c **** 
  29:../Sources/drivers/adc16/adc16.c **** /************************* #Defines ******************************************/
  30:../Sources/drivers/adc16/adc16.c **** 
  31:../Sources/drivers/adc16/adc16.c **** #define A   0x0
  32:../Sources/drivers/adc16/adc16.c **** #define B   0x1
  33:../Sources/drivers/adc16/adc16.c **** 
  34:../Sources/drivers/adc16/adc16.c **** /////// NOTE: the following defines relate to the ADC register definitions
  35:../Sources/drivers/adc16/adc16.c **** /////// and the content follows the reference manual, using the same symbols.
  36:../Sources/drivers/adc16/adc16.c **** 
  37:../Sources/drivers/adc16/adc16.c **** 
  38:../Sources/drivers/adc16/adc16.c **** //// ADCSC1 (register)
  39:../Sources/drivers/adc16/adc16.c **** // Conversion Complete (COCO) mask
  40:../Sources/drivers/adc16/adc16.c **** 
  41:../Sources/drivers/adc16/adc16.c **** #define COCO_COMPLETE   ADC_SC1_COCO_MASK
  42:../Sources/drivers/adc16/adc16.c **** #define COCO_NOT        0x00
  43:../Sources/drivers/adc16/adc16.c **** 
  44:../Sources/drivers/adc16/adc16.c **** // ADC interrupts: enabled, or disabled.
  45:../Sources/drivers/adc16/adc16.c **** 
  46:../Sources/drivers/adc16/adc16.c **** #define AIEN_ON     ADC_SC1_AIEN_MASK
  47:../Sources/drivers/adc16/adc16.c **** #define AIEN_OFF    0x00
  48:../Sources/drivers/adc16/adc16.c **** 
  49:../Sources/drivers/adc16/adc16.c **** // Differential or Single ended ADC input
  50:../Sources/drivers/adc16/adc16.c **** 
  51:../Sources/drivers/adc16/adc16.c **** #define DIFF_SINGLE         0x00
  52:../Sources/drivers/adc16/adc16.c **** #define DIFF_DIFFERENTIAL   ADC_SC1_DIFF_MASK
  53:../Sources/drivers/adc16/adc16.c **** 
  54:../Sources/drivers/adc16/adc16.c **** //// ADCCFG1
  55:../Sources/drivers/adc16/adc16.c **** // Power setting of ADC
  56:../Sources/drivers/adc16/adc16.c **** 
  57:../Sources/drivers/adc16/adc16.c **** #define ADLPC_LOW       ADC_CFG1_ADLPC_MASK
  58:../Sources/drivers/adc16/adc16.c **** #define ADLPC_NORMAL    0x00
  59:../Sources/drivers/adc16/adc16.c **** 
  60:../Sources/drivers/adc16/adc16.c **** // Clock divisor
  61:../Sources/drivers/adc16/adc16.c **** 
  62:../Sources/drivers/adc16/adc16.c **** #define ADIV_1  0x00
  63:../Sources/drivers/adc16/adc16.c **** #define ADIV_2  0x01
  64:../Sources/drivers/adc16/adc16.c **** #define ADIV_4  0x02
  65:../Sources/drivers/adc16/adc16.c **** #define ADIV_8  0x03
  66:../Sources/drivers/adc16/adc16.c **** 
  67:../Sources/drivers/adc16/adc16.c **** // Long samle time, or Short sample time
  68:../Sources/drivers/adc16/adc16.c **** 
  69:../Sources/drivers/adc16/adc16.c **** #define ADLSMP_LONG     ADC_CFG1_ADLSMP_MASK
  70:../Sources/drivers/adc16/adc16.c **** #define ADLSMP_SHORT    0x00
  71:../Sources/drivers/adc16/adc16.c **** 
  72:../Sources/drivers/adc16/adc16.c **** // How many bits for the conversion?  8, 12, 10, or 16 (single ended).
  73:../Sources/drivers/adc16/adc16.c **** 
  74:../Sources/drivers/adc16/adc16.c **** #define MODE_8  0x00
  75:../Sources/drivers/adc16/adc16.c **** #define MODE_12 0x01
  76:../Sources/drivers/adc16/adc16.c **** #define MODE_10 0x02
  77:../Sources/drivers/adc16/adc16.c **** #define MODE_16 0x03
  78:../Sources/drivers/adc16/adc16.c **** 
  79:../Sources/drivers/adc16/adc16.c **** // ADC Input Clock Source choice? Bus clock, Bus clock/2, "altclk", or the
  80:../Sources/drivers/adc16/adc16.c **** //                                ADC's own asynchronous clock for less noise
  81:../Sources/drivers/adc16/adc16.c **** 
  82:../Sources/drivers/adc16/adc16.c **** #define ADICLK_BUS      0x00
  83:../Sources/drivers/adc16/adc16.c **** #define ADICLK_BUS_2    0x01
  84:../Sources/drivers/adc16/adc16.c **** #define ADICLK_ALTCLK   0x02
  85:../Sources/drivers/adc16/adc16.c **** #define ADICLK_ADACK    0x03
  86:../Sources/drivers/adc16/adc16.c **** 
  87:../Sources/drivers/adc16/adc16.c **** //// ADCCFG2
  88:../Sources/drivers/adc16/adc16.c **** // Select between B or A channels
  89:../Sources/drivers/adc16/adc16.c **** 
  90:../Sources/drivers/adc16/adc16.c **** #define MUXSEL_ADCB ADC_CFG2_MUXSEL_MASK
  91:../Sources/drivers/adc16/adc16.c **** #define MUXSEL_ADCA 0x00
  92:../Sources/drivers/adc16/adc16.c **** 
  93:../Sources/drivers/adc16/adc16.c **** // Ansync clock output enable: enable, or disable the output of it
  94:../Sources/drivers/adc16/adc16.c **** 
  95:../Sources/drivers/adc16/adc16.c **** #define ADACKEN_ENABLED     ADC_CFG2_ADACKEN_MASK
  96:../Sources/drivers/adc16/adc16.c **** #define ADACKEN_DISABLED    0x00
  97:../Sources/drivers/adc16/adc16.c **** 
  98:../Sources/drivers/adc16/adc16.c **** // High speed or low speed conversion mode
  99:../Sources/drivers/adc16/adc16.c **** 
 100:../Sources/drivers/adc16/adc16.c **** #define ADHSC_HISPEED   ADC_CFG2_ADHSC_MASK
 101:../Sources/drivers/adc16/adc16.c **** #define ADHSC_NORMAL    0x00
 102:../Sources/drivers/adc16/adc16.c **** 
 103:../Sources/drivers/adc16/adc16.c **** // Long Sample Time selector: 20, 12, 6, or 2 extra clocks for a longer sample time
 104:../Sources/drivers/adc16/adc16.c **** 
 105:../Sources/drivers/adc16/adc16.c **** #define ADLSTS_20   0x00
 106:../Sources/drivers/adc16/adc16.c **** #define ADLSTS_12   0x01
 107:../Sources/drivers/adc16/adc16.c **** #define ADLSTS_6    0x02
 108:../Sources/drivers/adc16/adc16.c **** #define ADLSTS_2    0x03
 109:../Sources/drivers/adc16/adc16.c **** 
 110:../Sources/drivers/adc16/adc16.c **** ////ADCSC2
 111:../Sources/drivers/adc16/adc16.c **** // Read-only status bit indicating conversion status
 112:../Sources/drivers/adc16/adc16.c **** 
 113:../Sources/drivers/adc16/adc16.c **** #define ADACT_ACTIVE    ADC_SC2_ADACT_MASK
 114:../Sources/drivers/adc16/adc16.c **** #define ADACT_INACTIVE  0x00
 115:../Sources/drivers/adc16/adc16.c **** 
 116:../Sources/drivers/adc16/adc16.c **** // Trigger for starting conversion: Hardware trigger, or software trigger.
 117:../Sources/drivers/adc16/adc16.c **** // For using PDB, the Hardware trigger option is selected.
 118:../Sources/drivers/adc16/adc16.c **** 
 119:../Sources/drivers/adc16/adc16.c **** #define ADTRG_HW    ADC_SC2_ADTRG_MASK
 120:../Sources/drivers/adc16/adc16.c **** #define ADTRG_SW    0x00
 121:../Sources/drivers/adc16/adc16.c **** 
 122:../Sources/drivers/adc16/adc16.c **** // ADC Compare Function Enable: Disabled, or Enabled.
 123:../Sources/drivers/adc16/adc16.c **** 
 124:../Sources/drivers/adc16/adc16.c **** #define ACFE_DISABLED   0x00
 125:../Sources/drivers/adc16/adc16.c **** #define ACFE_ENABLED    ADC_SC2_ACFE_MASK
 126:../Sources/drivers/adc16/adc16.c **** 
 127:../Sources/drivers/adc16/adc16.c **** // Compare Function Greater Than Enable: Greater, or Less.
 128:../Sources/drivers/adc16/adc16.c **** 
 129:../Sources/drivers/adc16/adc16.c **** #define ACFGT_GREATER   ADC_SC2_ACFGT_MASK
 130:../Sources/drivers/adc16/adc16.c **** #define ACFGT_LESS      0x00
 131:../Sources/drivers/adc16/adc16.c **** 
 132:../Sources/drivers/adc16/adc16.c **** // Compare Function Range Enable: Enabled or Disabled.
 133:../Sources/drivers/adc16/adc16.c **** 
 134:../Sources/drivers/adc16/adc16.c **** #define ACREN_ENABLED   ADC_SC2_ACREN_MASK
 135:../Sources/drivers/adc16/adc16.c **** #define ACREN_DISABLED  0x00
 136:../Sources/drivers/adc16/adc16.c **** 
 137:../Sources/drivers/adc16/adc16.c **** // DMA enable: enabled or disabled.
 138:../Sources/drivers/adc16/adc16.c **** 
 139:../Sources/drivers/adc16/adc16.c **** #define DMAEN_ENABLED   ADC_SC2_DMAEN_MASK
 140:../Sources/drivers/adc16/adc16.c **** #define DMAEN_DISABLED  0x00
 141:../Sources/drivers/adc16/adc16.c **** 
 142:../Sources/drivers/adc16/adc16.c **** // Voltage Reference selection for the ADC conversions
 143:../Sources/drivers/adc16/adc16.c **** // (***not*** the PGA which uses VREFO only).
 144:../Sources/drivers/adc16/adc16.c **** // VREFH and VREFL (0) , or VREFO (1).
 145:../Sources/drivers/adc16/adc16.c **** 
 146:../Sources/drivers/adc16/adc16.c **** #define REFSEL_EXT      0x00
 147:../Sources/drivers/adc16/adc16.c **** #define REFSEL_ALT      0x01
 148:../Sources/drivers/adc16/adc16.c **** #define REFSEL_RES      0x02    /* reserved */
 149:../Sources/drivers/adc16/adc16.c **** #define REFSEL_RES_EXT  0x03    /* reserved but defaults to Vref */
 150:../Sources/drivers/adc16/adc16.c **** 
 151:../Sources/drivers/adc16/adc16.c **** ////ADCSC3
 152:../Sources/drivers/adc16/adc16.c **** // Calibration begin or off
 153:../Sources/drivers/adc16/adc16.c **** 
 154:../Sources/drivers/adc16/adc16.c **** #define CAL_BEGIN   ADC_SC3_CAL_MASK
 155:../Sources/drivers/adc16/adc16.c **** #define CAL_OFF     0x00
 156:../Sources/drivers/adc16/adc16.c **** 
 157:../Sources/drivers/adc16/adc16.c **** // Status indicating Calibration failed, or normal success
 158:../Sources/drivers/adc16/adc16.c **** 
 159:../Sources/drivers/adc16/adc16.c **** #define CALF_FAIL   ADC_SC3_CALF_MASK
 160:../Sources/drivers/adc16/adc16.c **** #define CALF_NORMAL 0x00
 161:../Sources/drivers/adc16/adc16.c **** 
 162:../Sources/drivers/adc16/adc16.c **** // ADC to continously convert, or do a sinle conversion
 163:../Sources/drivers/adc16/adc16.c **** 
 164:../Sources/drivers/adc16/adc16.c **** #define ADCO_CONTINUOUS ADC_SC3_ADCO_MASK
 165:../Sources/drivers/adc16/adc16.c **** #define ADCO_SINGLE     0x00
 166:../Sources/drivers/adc16/adc16.c **** 
 167:../Sources/drivers/adc16/adc16.c **** // Averaging enabled in the ADC, or not.
 168:../Sources/drivers/adc16/adc16.c **** 
 169:../Sources/drivers/adc16/adc16.c **** #define AVGE_ENABLED    ADC_SC3_AVGE_MASK
 170:../Sources/drivers/adc16/adc16.c **** #define AVGE_DISABLED   0x00
 171:../Sources/drivers/adc16/adc16.c **** 
 172:../Sources/drivers/adc16/adc16.c **** // How many to average prior to "interrupting" the MCU?  4, 8, 16, or 32
 173:../Sources/drivers/adc16/adc16.c **** 
 174:../Sources/drivers/adc16/adc16.c **** #define AVGS_4  0x00
 175:../Sources/drivers/adc16/adc16.c **** #define AVGS_8  0x01
 176:../Sources/drivers/adc16/adc16.c **** #define AVGS_16 0x02
 177:../Sources/drivers/adc16/adc16.c **** #define AVGS_32 0x03
 178:../Sources/drivers/adc16/adc16.c **** 
 179:../Sources/drivers/adc16/adc16.c **** ////PGA
 180:../Sources/drivers/adc16/adc16.c **** // PGA enabled or not?
 181:../Sources/drivers/adc16/adc16.c **** 
 182:../Sources/drivers/adc16/adc16.c **** #define PGAEN_ENABLED   ADC_PGA_PGAEN_MASK
 183:../Sources/drivers/adc16/adc16.c **** #define PGAEN_DISABLED  0x00
 184:../Sources/drivers/adc16/adc16.c **** 
 185:../Sources/drivers/adc16/adc16.c **** // Chopper stabilization of the amplifier, or not.
 186:../Sources/drivers/adc16/adc16.c **** 
 187:../Sources/drivers/adc16/adc16.c **** #define PGACHP_CHOP     ADC_PGA_PGACHP_MASK
 188:../Sources/drivers/adc16/adc16.c **** #define PGACHP_NOCHOP   0x00
 189:../Sources/drivers/adc16/adc16.c **** 
 190:../Sources/drivers/adc16/adc16.c **** // PGA in low power mode, or normal mode.
 191:../Sources/drivers/adc16/adc16.c **** 
 192:../Sources/drivers/adc16/adc16.c **** #define PGALP_LOW       ADC_PGA_PGALP_MASK
 193:../Sources/drivers/adc16/adc16.c **** #define PGALP_NORMAL    0x00
 194:../Sources/drivers/adc16/adc16.c **** 
 195:../Sources/drivers/adc16/adc16.c **** // Gain of PGA.  Selectable from 1 to 64.
 196:../Sources/drivers/adc16/adc16.c **** 
 197:../Sources/drivers/adc16/adc16.c **** #define PGAG_1  0x00
 198:../Sources/drivers/adc16/adc16.c **** #define PGAG_2  0x01
 199:../Sources/drivers/adc16/adc16.c **** #define PGAG_4  0x02
 200:../Sources/drivers/adc16/adc16.c **** #define PGAG_8  0x03
 201:../Sources/drivers/adc16/adc16.c **** #define PGAG_16 0x04
 202:../Sources/drivers/adc16/adc16.c **** #define PGAG_32 0x05
 203:../Sources/drivers/adc16/adc16.c **** #define PGAG_64 0x06
 204:../Sources/drivers/adc16/adc16.c **** 
 205:../Sources/drivers/adc16/adc16.c **** /////////// The above values fit into the structure below to select ADC/PGA
 206:../Sources/drivers/adc16/adc16.c **** /////////// configuration desired:
 207:../Sources/drivers/adc16/adc16.c **** 
 208:../Sources/drivers/adc16/adc16.c **** typedef struct adc_cfg
 209:../Sources/drivers/adc16/adc16.c **** {
 210:../Sources/drivers/adc16/adc16.c ****     uint8_t     CONFIG1;
 211:../Sources/drivers/adc16/adc16.c ****     uint8_t     CONFIG2;
 212:../Sources/drivers/adc16/adc16.c ****     uint16_t    COMPARE1;
 213:../Sources/drivers/adc16/adc16.c ****     uint16_t    COMPARE2;
 214:../Sources/drivers/adc16/adc16.c ****     uint8_t     STATUS2;
 215:../Sources/drivers/adc16/adc16.c ****     uint8_t     STATUS3;
 216:../Sources/drivers/adc16/adc16.c ****     uint8_t     STATUS1A;
 217:../Sources/drivers/adc16/adc16.c ****     uint8_t     STATUS1B;
 218:../Sources/drivers/adc16/adc16.c ****     uint32_t    PGA;
 219:../Sources/drivers/adc16/adc16.c **** }
 220:../Sources/drivers/adc16/adc16.c **** *tADC_ConfigPtr, tADC_Config;
 221:../Sources/drivers/adc16/adc16.c **** 
 222:../Sources/drivers/adc16/adc16.c **** #define CAL_BLK_NUMREC  18
 223:../Sources/drivers/adc16/adc16.c **** 
 224:../Sources/drivers/adc16/adc16.c **** typedef struct adc_cal
 225:../Sources/drivers/adc16/adc16.c **** {
 226:../Sources/drivers/adc16/adc16.c ****     uint16_t    OFS;
 227:../Sources/drivers/adc16/adc16.c ****     uint16_t    PG;
 228:../Sources/drivers/adc16/adc16.c ****     uint16_t    MG;
 229:../Sources/drivers/adc16/adc16.c ****     uint8_t     CLPD;
 230:../Sources/drivers/adc16/adc16.c ****     uint8_t     CLPS;
 231:../Sources/drivers/adc16/adc16.c ****     uint16_t    CLP4;
 232:../Sources/drivers/adc16/adc16.c ****     uint16_t    CLP3;
 233:../Sources/drivers/adc16/adc16.c ****     uint8_t     CLP2;
 234:../Sources/drivers/adc16/adc16.c ****     uint8_t     CLP1;
 235:../Sources/drivers/adc16/adc16.c ****     uint8_t     CLP0;
 236:../Sources/drivers/adc16/adc16.c ****     uint8_t     dummy;
 237:../Sources/drivers/adc16/adc16.c ****     uint8_t     CLMD;
 238:../Sources/drivers/adc16/adc16.c ****     uint8_t     CLMS;
 239:../Sources/drivers/adc16/adc16.c ****     uint16_t    CLM4;
 240:../Sources/drivers/adc16/adc16.c ****     uint16_t    CLM3;
 241:../Sources/drivers/adc16/adc16.c ****     uint8_t     CLM2;
 242:../Sources/drivers/adc16/adc16.c ****     uint8_t     CLM1;
 243:../Sources/drivers/adc16/adc16.c ****     uint8_t     CLM0;
 244:../Sources/drivers/adc16/adc16.c **** } tADC_Cal_Blk;
 245:../Sources/drivers/adc16/adc16.c **** 
 246:../Sources/drivers/adc16/adc16.c **** // function prototypes:
 247:../Sources/drivers/adc16/adc16.c **** 
 248:../Sources/drivers/adc16/adc16.c **** uint8_t ADC_Cal(ADC_MemMapPtr);
 249:../Sources/drivers/adc16/adc16.c **** 
 250:../Sources/drivers/adc16/adc16.c **** void    ADC_Config_Alt(ADC_MemMapPtr, tADC_ConfigPtr);
 251:../Sources/drivers/adc16/adc16.c **** 
 252:../Sources/drivers/adc16/adc16.c **** void    ADC_Read_Cal(ADC_MemMapPtr, tADC_Cal_Blk *);
 253:../Sources/drivers/adc16/adc16.c **** 
 254:../Sources/drivers/adc16/adc16.c **** /******************************************************************************
 255:../Sources/drivers/adc16/adc16.c **** Function 1. Name	AUTO CAL ROUTINE
 256:../Sources/drivers/adc16/adc16.c **** 
 257:../Sources/drivers/adc16/adc16.c **** Parameters		ADC module pointer points to adc0 or adc1 register map
 258:../Sources/drivers/adc16/adc16.c ****                          base address.
 259:../Sources/drivers/adc16/adc16.c **** Returns			Zero indicates success.
 260:../Sources/drivers/adc16/adc16.c **** Notes         		Calibrates the ADC16. Required to meet specifications
 261:../Sources/drivers/adc16/adc16.c ****                         after reset and before a conversion is initiated.
 262:../Sources/drivers/adc16/adc16.c **** ******************************************************************************/
 263:../Sources/drivers/adc16/adc16.c **** 
 264:../Sources/drivers/adc16/adc16.c **** uint8 ADC_Cal
 265:../Sources/drivers/adc16/adc16.c **** (ADC_MemMapPtr   adcmap)
 266:../Sources/drivers/adc16/adc16.c **** {
  27              		.loc 1 266 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 267:../Sources/drivers/adc16/adc16.c ****     /*~~~~~~~~~~~~~~~~~~~~*/
 268:../Sources/drivers/adc16/adc16.c **** 
 269:../Sources/drivers/adc16/adc16.c ****     /*~~~~~~~~~~~~~~~~~~~~*/
 270:../Sources/drivers/adc16/adc16.c **** 
 271:../Sources/drivers/adc16/adc16.c ****     /*~~~~~~~~~~~~~~~~~~~~*/
 272:../Sources/drivers/adc16/adc16.c **** 
 273:../Sources/drivers/adc16/adc16.c ****     /*~~~~~~~~~~~~~~~~~~~~*/
 274:../Sources/drivers/adc16/adc16.c **** 
 275:../Sources/drivers/adc16/adc16.c ****     /*~~~~~~~~~~~~~~~~~~~~*/
 276:../Sources/drivers/adc16/adc16.c **** 
 277:../Sources/drivers/adc16/adc16.c ****     /*~~~~~~~~~~~~~~~~~~~~*/
 278:../Sources/drivers/adc16/adc16.c **** 
 279:../Sources/drivers/adc16/adc16.c ****     unsigned short  cal_var;
 280:../Sources/drivers/adc16/adc16.c **** 
 281:../Sources/drivers/adc16/adc16.c ****     /*~~~~~~~~~~~~~~~~~~~~*/
 282:../Sources/drivers/adc16/adc16.c **** 
 283:../Sources/drivers/adc16/adc16.c ****     /*~~~~~~~~~~~~~~~~~~~~*/
 284:../Sources/drivers/adc16/adc16.c **** 
 285:../Sources/drivers/adc16/adc16.c ****     /*~~~~~~~~~~~~~~~~~~~~*/
 286:../Sources/drivers/adc16/adc16.c **** 
 287:../Sources/drivers/adc16/adc16.c ****     /*~~~~~~~~~~~~~~~~~~~~*/
 288:../Sources/drivers/adc16/adc16.c **** 
 289:../Sources/drivers/adc16/adc16.c ****     /*~~~~~~~~~~~~~~~~~~~~*/
 290:../Sources/drivers/adc16/adc16.c **** 
 291:../Sources/drivers/adc16/adc16.c ****     /*~~~~~~~~~~~~~~~~~~~~*/
 292:../Sources/drivers/adc16/adc16.c **** 
 293:../Sources/drivers/adc16/adc16.c ****     ADC_SC2_REG(adcmap) &= ~ADC_SC2_ADTRG_MASK; // Enable Software Conversion Trigger for Calibrati
  33              		.loc 1 293 0
  34 0000 036A     		ldr	r3, [r0, #32]
  35 0002 23F04001 		bic	r1, r3, #64
 266:../Sources/drivers/adc16/adc16.c **** {
  36              		.loc 1 266 0
  37 0006 F0B4     		push	{r4, r5, r6, r7}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 16
  40              		.cfi_offset 4, -16
  41              		.cfi_offset 5, -12
  42              		.cfi_offset 6, -8
  43              		.cfi_offset 7, -4
  44              		.loc 1 293 0
  45 0008 0162     		str	r1, [r0, #32]
 294:../Sources/drivers/adc16/adc16.c ****     ADC_SC3_REG(adcmap) &= (~ADC_SC3_ADCO_MASK &~ADC_SC3_AVGS_MASK);    // set single conversion, c
  46              		.loc 1 294 0
  47 000a 426A     		ldr	r2, [r0, #36]
  48 000c 22F00B03 		bic	r3, r2, #11
  49 0010 4362     		str	r3, [r0, #36]
 295:../Sources/drivers/adc16/adc16.c ****     ADC_SC3_REG(adcmap) |= (ADC_SC3_AVGE_MASK | ADC_SC3_AVGS(AVGS_32)); // Turn averaging ON and se
  50              		.loc 1 295 0
  51 0012 416A     		ldr	r1, [r0, #36]
  52 0014 41F00702 		orr	r2, r1, #7
  53 0018 4262     		str	r2, [r0, #36]
 296:../Sources/drivers/adc16/adc16.c ****     ADC_SC3_REG(adcmap) |= ADC_SC3_CAL_MASK;    // Start CAL
  54              		.loc 1 296 0
  55 001a 436A     		ldr	r3, [r0, #36]
  56 001c 43F08001 		orr	r1, r3, #128
  57 0020 4162     		str	r1, [r0, #36]
  58              	.L2:
 297:../Sources/drivers/adc16/adc16.c ****     while((ADC_SC1_REG(adcmap, A) & ADC_SC1_COCO_MASK) == COCO_NOT);
  59              		.loc 1 297 0
  60 0022 0268     		ldr	r2, [r0, #0]
  61 0024 1306     		lsls	r3, r2, #24
  62 0026 FCD5     		bpl	.L2
 298:../Sources/drivers/adc16/adc16.c **** 
 299:../Sources/drivers/adc16/adc16.c ****     // Wait calibration end
 300:../Sources/drivers/adc16/adc16.c **** 
 301:../Sources/drivers/adc16/adc16.c ****     if((ADC_SC3_REG(adcmap) & ADC_SC3_CALF_MASK) == CALF_FAIL)
  63              		.loc 1 301 0
  64 0028 436A     		ldr	r3, [r0, #36]
  65 002a 13F04003 		ands	r3, r3, #64
  66 002e 30D1     		bne	.L4
  67              	.LVL1:
 302:../Sources/drivers/adc16/adc16.c ****     {
 303:../Sources/drivers/adc16/adc16.c ****         return(1);      // Check for Calibration fail error and return
 304:../Sources/drivers/adc16/adc16.c ****     }
 305:../Sources/drivers/adc16/adc16.c **** 
 306:../Sources/drivers/adc16/adc16.c ****     // Calculate plus-side calibration
 307:../Sources/drivers/adc16/adc16.c **** 
 308:../Sources/drivers/adc16/adc16.c ****     cal_var = 0x00;
 309:../Sources/drivers/adc16/adc16.c ****     cal_var = ADC_CLP0_REG(adcmap);
  68              		.loc 1 309 0
  69 0030 C76C     		ldr	r7, [r0, #76]
  70              	.LVL2:
 310:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLP1_REG(adcmap);
  71              		.loc 1 310 0
  72 0032 826C     		ldr	r2, [r0, #72]
 311:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLP2_REG(adcmap);
  73              		.loc 1 311 0
  74 0034 466C     		ldr	r6, [r0, #68]
 312:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLP3_REG(adcmap);
  75              		.loc 1 312 0
  76 0036 056C     		ldr	r5, [r0, #64]
 313:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLP4_REG(adcmap);
  77              		.loc 1 313 0
  78 0038 C46B     		ldr	r4, [r0, #60]
 314:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLPS_REG(adcmap);
  79              		.loc 1 314 0
  80 003a 816B     		ldr	r1, [r0, #56]
 310:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLP1_REG(adcmap);
  81              		.loc 1 310 0
  82 003c 12FA87F7 		uxtah	r7, r2, r7
  83              	.LVL3:
 311:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLP2_REG(adcmap);
  84              		.loc 1 311 0
  85 0040 16FA87F2 		uxtah	r2, r6, r7
  86              	.LVL4:
 312:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLP3_REG(adcmap);
  87              		.loc 1 312 0
  88 0044 15FA82F6 		uxtah	r6, r5, r2
  89              	.LVL5:
 313:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLP4_REG(adcmap);
  90              		.loc 1 313 0
  91 0048 14FA86F5 		uxtah	r5, r4, r6
  92              	.LVL6:
  93              		.loc 1 314 0
  94 004c 11FA85F4 		uxtah	r4, r1, r5
  95              	.LVL7:
 315:../Sources/drivers/adc16/adc16.c ****     cal_var = cal_var / 2;
  96              		.loc 1 315 0
  97 0050 C4F34E01 		ubfx	r1, r4, #1, #15
  98              	.LVL8:
 316:../Sources/drivers/adc16/adc16.c ****     cal_var |= 0x8000;  // Set MSB
 317:../Sources/drivers/adc16/adc16.c ****     ADC_PG_REG(adcmap) = ADC_PG_PG(cal_var);
  99              		.loc 1 317 0
 100 0054 41F40047 		orr	r7, r1, #32768
 101 0058 C762     		str	r7, [r0, #44]
 102              	.LVL9:
 318:../Sources/drivers/adc16/adc16.c **** 
 319:../Sources/drivers/adc16/adc16.c ****     // Calculate minus-side calibration
 320:../Sources/drivers/adc16/adc16.c **** 
 321:../Sources/drivers/adc16/adc16.c ****     cal_var = 0x00;
 322:../Sources/drivers/adc16/adc16.c ****     cal_var = ADC_CLM0_REG(adcmap);
 103              		.loc 1 322 0
 104 005a C76E     		ldr	r7, [r0, #108]
 105              	.LVL10:
 323:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLM1_REG(adcmap);
 106              		.loc 1 323 0
 107 005c 826E     		ldr	r2, [r0, #104]
 324:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLM2_REG(adcmap);
 108              		.loc 1 324 0
 109 005e 466E     		ldr	r6, [r0, #100]
 325:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLM3_REG(adcmap);
 110              		.loc 1 325 0
 111 0060 056E     		ldr	r5, [r0, #96]
 326:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLM4_REG(adcmap);
 112              		.loc 1 326 0
 113 0062 C46D     		ldr	r4, [r0, #92]
 327:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLMS_REG(adcmap);
 114              		.loc 1 327 0
 115 0064 816D     		ldr	r1, [r0, #88]
 323:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLM1_REG(adcmap);
 116              		.loc 1 323 0
 117 0066 12FA87F2 		uxtah	r2, r2, r7
 118              	.LVL11:
 324:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLM2_REG(adcmap);
 119              		.loc 1 324 0
 120 006a 16FA82F2 		uxtah	r2, r6, r2
 121              	.LVL12:
 325:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLM3_REG(adcmap);
 122              		.loc 1 325 0
 123 006e 15FA82F2 		uxtah	r2, r5, r2
 124              	.LVL13:
 326:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLM4_REG(adcmap);
 125              		.loc 1 326 0
 126 0072 14FA82F2 		uxtah	r2, r4, r2
 127              	.LVL14:
 128              		.loc 1 327 0
 129 0076 11FA82F1 		uxtah	r1, r1, r2
 130              	.LVL15:
 328:../Sources/drivers/adc16/adc16.c ****     cal_var = cal_var / 2;
 131              		.loc 1 328 0
 132 007a C1F34E02 		ubfx	r2, r1, #1, #15
 133              	.LVL16:
 329:../Sources/drivers/adc16/adc16.c ****     cal_var |= 0x8000;  // Set MSB
 330:../Sources/drivers/adc16/adc16.c ****     ADC_MG_REG(adcmap) = ADC_MG_MG(cal_var);
 134              		.loc 1 330 0
 135 007e 42F40041 		orr	r1, r2, #32768
 136 0082 0163     		str	r1, [r0, #48]
 331:../Sources/drivers/adc16/adc16.c ****     ADC_SC3_REG(adcmap) &= ~ADC_SC3_CAL_MASK;   /* Clear CAL bit */
 137              		.loc 1 331 0
 138 0084 426A     		ldr	r2, [r0, #36]
 139              	.LVL17:
 140 0086 22F08001 		bic	r1, r2, #128
 141 008a 4162     		str	r1, [r0, #36]
 332:../Sources/drivers/adc16/adc16.c ****     return(0);
 142              		.loc 1 332 0
 143 008c 1846     		mov	r0, r3
 144              	.LVL18:
 145              	.L3:
 333:../Sources/drivers/adc16/adc16.c **** }
 146              		.loc 1 333 0
 147 008e F0BC     		pop	{r4, r5, r6, r7}
 148 0090 7047     		bx	lr
 149              	.LVL19:
 150              	.L4:
 303:../Sources/drivers/adc16/adc16.c ****         return(1);      // Check for Calibration fail error and return
 151              		.loc 1 303 0
 152 0092 0120     		movs	r0, #1
 153              	.LVL20:
 154 0094 FBE7     		b	.L3
 155              		.cfi_endproc
 156              	.LFE0:
 158 0096 00BF     		.section	.text.ADC_Config,"ax",%progbits
 159              		.align	2
 160              		.global	ADC_Config
 161              		.thumb
 162              		.thumb_func
 164              	ADC_Config:
 165              	.LFB1:
 334:../Sources/drivers/adc16/adc16.c **** 
 335:../Sources/drivers/adc16/adc16.c **** /******************************************************************************
 336:../Sources/drivers/adc16/adc16.c **** Function   : Name 	ADC_Config_Alt
 337:../Sources/drivers/adc16/adc16.c **** Parameters :		the register values to be set in the adc in a structure
 338:../Sources/drivers/adc16/adc16.c **** Returns		 :	NONE
 339:../Sources/drivers/adc16/adc16.c **** Notes       	Configures ADC0 or ADC1 depending on adcmap
 340:../Sources/drivers/adc16/adc16.c ****               Prior to calling this function populate the structure
 341:../Sources/drivers/adc16/adc16.c ****               elements with the desired ADC configuration.
 342:../Sources/drivers/adc16/adc16.c **** ******************************************************************************/
 343:../Sources/drivers/adc16/adc16.c **** 
 344:../Sources/drivers/adc16/adc16.c **** void ADC_Config
 345:../Sources/drivers/adc16/adc16.c **** (
 346:../Sources/drivers/adc16/adc16.c ****     ADC_MemMapPtr   adcmap,
 347:../Sources/drivers/adc16/adc16.c ****     uint8_t         CONFIG1,
 348:../Sources/drivers/adc16/adc16.c ****     uint8_t         CONFIG2,
 349:../Sources/drivers/adc16/adc16.c ****     uint16_t        COMPARE1,
 350:../Sources/drivers/adc16/adc16.c ****     uint16_t        COMPARE2,
 351:../Sources/drivers/adc16/adc16.c ****     uint8_t         STATUS2,
 352:../Sources/drivers/adc16/adc16.c ****     uint8_t         STATUS3,
 353:../Sources/drivers/adc16/adc16.c ****     uint8_t         STATUS1A,
 354:../Sources/drivers/adc16/adc16.c ****     uint8_t         STATUS1B,
 355:../Sources/drivers/adc16/adc16.c ****     uint32_t        PGA
 356:../Sources/drivers/adc16/adc16.c **** )
 357:../Sources/drivers/adc16/adc16.c **** {
 166              		.loc 1 357 0
 167              		.cfi_startproc
 168              		@ args = 24, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170              		@ link register save eliminated.
 171              	.LVL21:
 358:../Sources/drivers/adc16/adc16.c ****     ADC_CFG1_REG(adcmap) = CONFIG1;
 172              		.loc 1 358 0
 173 0000 8160     		str	r1, [r0, #8]
 359:../Sources/drivers/adc16/adc16.c ****     ADC_CFG2_REG(adcmap) = CONFIG2;
 174              		.loc 1 359 0
 175 0002 C260     		str	r2, [r0, #12]
 360:../Sources/drivers/adc16/adc16.c ****     ADC_CV1_REG(adcmap) = COMPARE1;
 361:../Sources/drivers/adc16/adc16.c ****     ADC_CV2_REG(adcmap) = COMPARE2;
 362:../Sources/drivers/adc16/adc16.c ****     ADC_SC2_REG(adcmap) = STATUS2;
 176              		.loc 1 362 0
 177 0004 9DF80410 		ldrb	r1, [sp, #4]	@ zero_extendqisi2
 178              	.LVL22:
 360:../Sources/drivers/adc16/adc16.c ****     ADC_CV1_REG(adcmap) = COMPARE1;
 179              		.loc 1 360 0
 180 0008 8361     		str	r3, [r0, #24]
 361:../Sources/drivers/adc16/adc16.c ****     ADC_CV2_REG(adcmap) = COMPARE2;
 181              		.loc 1 361 0
 182 000a BDF80030 		ldrh	r3, [sp, #0]
 183              	.LVL23:
 363:../Sources/drivers/adc16/adc16.c ****     ADC_SC3_REG(adcmap) = STATUS3;
 184              		.loc 1 363 0
 185 000e 9DF80820 		ldrb	r2, [sp, #8]	@ zero_extendqisi2
 186              	.LVL24:
 361:../Sources/drivers/adc16/adc16.c ****     ADC_CV2_REG(adcmap) = COMPARE2;
 187              		.loc 1 361 0
 188 0012 C361     		str	r3, [r0, #28]
 362:../Sources/drivers/adc16/adc16.c ****     ADC_SC2_REG(adcmap) = STATUS2;
 189              		.loc 1 362 0
 190 0014 0162     		str	r1, [r0, #32]
 364:../Sources/drivers/adc16/adc16.c ****     ADC_SC1_REG(adcmap, A) = STATUS1A;
 191              		.loc 1 364 0
 192 0016 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
 365:../Sources/drivers/adc16/adc16.c ****     ADC_SC1_REG(adcmap, B) = STATUS1B;
 193              		.loc 1 365 0
 194 001a 9DF81010 		ldrb	r1, [sp, #16]	@ zero_extendqisi2
 363:../Sources/drivers/adc16/adc16.c ****     ADC_SC3_REG(adcmap) = STATUS3;
 195              		.loc 1 363 0
 196 001e 4262     		str	r2, [r0, #36]
 364:../Sources/drivers/adc16/adc16.c ****     ADC_SC1_REG(adcmap, A) = STATUS1A;
 197              		.loc 1 364 0
 198 0020 0360     		str	r3, [r0, #0]
 199              		.loc 1 365 0
 200 0022 4160     		str	r1, [r0, #4]
 201 0024 7047     		bx	lr
 202              		.cfi_endproc
 203              	.LFE1:
 205 0026 00BF     		.section	.text.ADC_Config_Alt,"ax",%progbits
 206              		.align	2
 207              		.global	ADC_Config_Alt
 208              		.thumb
 209              		.thumb_func
 211              	ADC_Config_Alt:
 212              	.LFB2:
 366:../Sources/drivers/adc16/adc16.c **** }
 367:../Sources/drivers/adc16/adc16.c **** 
 368:../Sources/drivers/adc16/adc16.c **** /* */
 369:../Sources/drivers/adc16/adc16.c **** 
 370:../Sources/drivers/adc16/adc16.c **** void ADC_Config_Alt
 371:../Sources/drivers/adc16/adc16.c **** (
 372:../Sources/drivers/adc16/adc16.c ****     ADC_MemMapPtr   adcmap,
 373:../Sources/drivers/adc16/adc16.c ****     tADC_ConfigPtr  ADC_CfgPtr
 374:../Sources/drivers/adc16/adc16.c **** )
 375:../Sources/drivers/adc16/adc16.c **** {
 213              		.loc 1 375 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 218              	.LVL25:
 219 0000 10B4     		push	{r4}
 220              	.LCFI1:
 221              		.cfi_def_cfa_offset 4
 222              		.cfi_offset 4, -4
 376:../Sources/drivers/adc16/adc16.c ****     ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
 223              		.loc 1 376 0
 224 0002 0B78     		ldrb	r3, [r1, #0]	@ zero_extendqisi2
 377:../Sources/drivers/adc16/adc16.c ****     ADC_CFG2_REG(adcmap) = ADC_CfgPtr->CONFIG2;
 378:../Sources/drivers/adc16/adc16.c ****     ADC_CV1_REG(adcmap) = ADC_CfgPtr->COMPARE1;
 225              		.loc 1 378 0
 226 0004 4A88     		ldrh	r2, [r1, #2]
 376:../Sources/drivers/adc16/adc16.c ****     ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
 227              		.loc 1 376 0
 228 0006 8360     		str	r3, [r0, #8]
 377:../Sources/drivers/adc16/adc16.c ****     ADC_CFG2_REG(adcmap) = ADC_CfgPtr->CONFIG2;
 229              		.loc 1 377 0
 230 0008 4C78     		ldrb	r4, [r1, #1]	@ zero_extendqisi2
 379:../Sources/drivers/adc16/adc16.c ****     ADC_CV2_REG(adcmap) = ADC_CfgPtr->COMPARE2;
 231              		.loc 1 379 0
 232 000a 8B88     		ldrh	r3, [r1, #4]
 377:../Sources/drivers/adc16/adc16.c ****     ADC_CFG2_REG(adcmap) = ADC_CfgPtr->CONFIG2;
 233              		.loc 1 377 0
 234 000c C460     		str	r4, [r0, #12]
 378:../Sources/drivers/adc16/adc16.c ****     ADC_CV1_REG(adcmap) = ADC_CfgPtr->COMPARE1;
 235              		.loc 1 378 0
 236 000e 8261     		str	r2, [r0, #24]
 237              		.loc 1 379 0
 238 0010 C361     		str	r3, [r0, #28]
 380:../Sources/drivers/adc16/adc16.c ****     ADC_SC2_REG(adcmap) = ADC_CfgPtr->STATUS2;
 239              		.loc 1 380 0
 240 0012 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 241 0014 0262     		str	r2, [r0, #32]
 381:../Sources/drivers/adc16/adc16.c ****     ADC_SC3_REG(adcmap) = ADC_CfgPtr->STATUS3;
 242              		.loc 1 381 0
 243 0016 CB79     		ldrb	r3, [r1, #7]	@ zero_extendqisi2
 244 0018 4362     		str	r3, [r0, #36]
 382:../Sources/drivers/adc16/adc16.c **** 
 383:../Sources/drivers/adc16/adc16.c ****     // ADC_PGA_REG(adcmap)  = ADC_CfgPtr->PGA;  //not one on P0
 384:../Sources/drivers/adc16/adc16.c **** 
 385:../Sources/drivers/adc16/adc16.c ****     ADC_SC1_REG(adcmap, A) = ADC_CfgPtr->STATUS1A;
 245              		.loc 1 385 0
 246 001a 0A7A     		ldrb	r2, [r1, #8]	@ zero_extendqisi2
 247 001c 0260     		str	r2, [r0, #0]
 386:../Sources/drivers/adc16/adc16.c ****     ADC_SC1_REG(adcmap, B) = ADC_CfgPtr->STATUS1B;
 248              		.loc 1 386 0
 249 001e 497A     		ldrb	r1, [r1, #9]	@ zero_extendqisi2
 250              	.LVL26:
 251 0020 4160     		str	r1, [r0, #4]
 387:../Sources/drivers/adc16/adc16.c **** }
 252              		.loc 1 387 0
 253 0022 10BC     		pop	{r4}
 254 0024 7047     		bx	lr
 255              		.cfi_endproc
 256              	.LFE2:
 258 0026 00BF     		.section	.text.ADC_Read_Cal,"ax",%progbits
 259              		.align	2
 260              		.global	ADC_Read_Cal
 261              		.thumb
 262              		.thumb_func
 264              	ADC_Read_Cal:
 265              	.LFB3:
 388:../Sources/drivers/adc16/adc16.c **** 
 389:../Sources/drivers/adc16/adc16.c **** /* */
 390:../Sources/drivers/adc16/adc16.c **** 
 391:../Sources/drivers/adc16/adc16.c **** void ADC_Read_Cal
 392:../Sources/drivers/adc16/adc16.c **** (
 393:../Sources/drivers/adc16/adc16.c ****     ADC_MemMapPtr   adcmap,
 394:../Sources/drivers/adc16/adc16.c ****     tADC_Cal_Blk    *blk
 395:../Sources/drivers/adc16/adc16.c **** )
 396:../Sources/drivers/adc16/adc16.c **** {
 266              		.loc 1 396 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270              		@ link register save eliminated.
 271              	.LVL27:
 272 0000 30B4     		push	{r4, r5}
 273              	.LCFI2:
 274              		.cfi_def_cfa_offset 8
 275              		.cfi_offset 4, -8
 276              		.cfi_offset 5, -4
 397:../Sources/drivers/adc16/adc16.c ****     blk->OFS = ADC_OFS_REG(adcmap);
 277              		.loc 1 397 0
 278 0002 846A     		ldr	r4, [r0, #40]
 398:../Sources/drivers/adc16/adc16.c ****     blk->PG = ADC_PG_REG(adcmap);
 279              		.loc 1 398 0
 280 0004 C26A     		ldr	r2, [r0, #44]
 399:../Sources/drivers/adc16/adc16.c ****     blk->MG = ADC_MG_REG(adcmap);
 281              		.loc 1 399 0
 282 0006 056B     		ldr	r5, [r0, #48]
 400:../Sources/drivers/adc16/adc16.c ****     blk->CLPD = ADC_CLPD_REG(adcmap);
 283              		.loc 1 400 0
 284 0008 436B     		ldr	r3, [r0, #52]
 397:../Sources/drivers/adc16/adc16.c ****     blk->OFS = ADC_OFS_REG(adcmap);
 285              		.loc 1 397 0
 286 000a 0C80     		strh	r4, [r1, #0]	@ movhi
 287              		.loc 1 400 0
 288 000c 8B71     		strb	r3, [r1, #6]
 401:../Sources/drivers/adc16/adc16.c ****     blk->CLPS = ADC_CLPS_REG(adcmap);
 289              		.loc 1 401 0
 290 000e 846B     		ldr	r4, [r0, #56]
 398:../Sources/drivers/adc16/adc16.c ****     blk->PG = ADC_PG_REG(adcmap);
 291              		.loc 1 398 0
 292 0010 4A80     		strh	r2, [r1, #2]	@ movhi
 293              		.loc 1 401 0
 294 0012 CC71     		strb	r4, [r1, #7]
 402:../Sources/drivers/adc16/adc16.c ****     blk->CLP4 = ADC_CLP4_REG(adcmap);
 295              		.loc 1 402 0
 296 0014 C46B     		ldr	r4, [r0, #60]
 403:../Sources/drivers/adc16/adc16.c ****     blk->CLP3 = ADC_CLP3_REG(adcmap);
 297              		.loc 1 403 0
 298 0016 026C     		ldr	r2, [r0, #64]
 404:../Sources/drivers/adc16/adc16.c ****     blk->CLP2 = ADC_CLP2_REG(adcmap);
 299              		.loc 1 404 0
 300 0018 436C     		ldr	r3, [r0, #68]
 399:../Sources/drivers/adc16/adc16.c ****     blk->MG = ADC_MG_REG(adcmap);
 301              		.loc 1 399 0
 302 001a 8D80     		strh	r5, [r1, #4]	@ movhi
 303              		.loc 1 404 0
 304 001c 0B73     		strb	r3, [r1, #12]
 405:../Sources/drivers/adc16/adc16.c ****     blk->CLP1 = ADC_CLP1_REG(adcmap);
 305              		.loc 1 405 0
 306 001e 836C     		ldr	r3, [r0, #72]
 402:../Sources/drivers/adc16/adc16.c ****     blk->CLP4 = ADC_CLP4_REG(adcmap);
 307              		.loc 1 402 0
 308 0020 0C81     		strh	r4, [r1, #8]	@ movhi
 309              		.loc 1 405 0
 310 0022 4B73     		strb	r3, [r1, #13]
 406:../Sources/drivers/adc16/adc16.c ****     blk->CLP0 = ADC_CLP0_REG(adcmap);
 311              		.loc 1 406 0
 312 0024 C46C     		ldr	r4, [r0, #76]
 403:../Sources/drivers/adc16/adc16.c ****     blk->CLP3 = ADC_CLP3_REG(adcmap);
 313              		.loc 1 403 0
 314 0026 4A81     		strh	r2, [r1, #10]	@ movhi
 315              		.loc 1 406 0
 316 0028 8C73     		strb	r4, [r1, #14]
 407:../Sources/drivers/adc16/adc16.c ****     blk->CLMD = ADC_CLMD_REG(adcmap);
 317              		.loc 1 407 0
 318 002a 426D     		ldr	r2, [r0, #84]
 319 002c 0A74     		strb	r2, [r1, #16]
 408:../Sources/drivers/adc16/adc16.c ****     blk->CLMS = ADC_CLMS_REG(adcmap);
 320              		.loc 1 408 0
 321 002e 836D     		ldr	r3, [r0, #88]
 322 0030 4B74     		strb	r3, [r1, #17]
 409:../Sources/drivers/adc16/adc16.c ****     blk->CLM4 = ADC_CLM4_REG(adcmap);
 323              		.loc 1 409 0
 324 0032 C46D     		ldr	r4, [r0, #92]
 410:../Sources/drivers/adc16/adc16.c ****     blk->CLM3 = ADC_CLM3_REG(adcmap);
 325              		.loc 1 410 0
 326 0034 026E     		ldr	r2, [r0, #96]
 411:../Sources/drivers/adc16/adc16.c ****     blk->CLM2 = ADC_CLM2_REG(adcmap);
 327              		.loc 1 411 0
 328 0036 436E     		ldr	r3, [r0, #100]
 409:../Sources/drivers/adc16/adc16.c ****     blk->CLM4 = ADC_CLM4_REG(adcmap);
 329              		.loc 1 409 0
 330 0038 4C82     		strh	r4, [r1, #18]	@ movhi
 331              		.loc 1 411 0
 332 003a 8B75     		strb	r3, [r1, #22]
 412:../Sources/drivers/adc16/adc16.c ****     blk->CLM1 = ADC_CLM1_REG(adcmap);
 333              		.loc 1 412 0
 334 003c 836E     		ldr	r3, [r0, #104]
 410:../Sources/drivers/adc16/adc16.c ****     blk->CLM3 = ADC_CLM3_REG(adcmap);
 335              		.loc 1 410 0
 336 003e 8A82     		strh	r2, [r1, #20]	@ movhi
 337              		.loc 1 412 0
 338 0040 CB75     		strb	r3, [r1, #23]
 413:../Sources/drivers/adc16/adc16.c ****     blk->CLM0 = ADC_CLM0_REG(adcmap);
 339              		.loc 1 413 0
 340 0042 C06E     		ldr	r0, [r0, #108]
 341              	.LVL28:
 342 0044 0876     		strb	r0, [r1, #24]
 414:../Sources/drivers/adc16/adc16.c **** }
 343              		.loc 1 414 0
 344 0046 30BC     		pop	{r4, r5}
 345 0048 7047     		bx	lr
 346              		.cfi_endproc
 347              	.LFE3:
 349 004a 00BF     		.section	.text.InitADC_12Bit,"ax",%progbits
 350              		.align	2
 351              		.global	InitADC_12Bit
 352              		.thumb
 353              		.thumb_func
 355              	InitADC_12Bit:
 356              	.LFB4:
 415:../Sources/drivers/adc16/adc16.c **** 
 416:../Sources/drivers/adc16/adc16.c **** 
 417:../Sources/drivers/adc16/adc16.c **** tADC_Config Master_Adc_Config;
 418:../Sources/drivers/adc16/adc16.c **** 
 419:../Sources/drivers/adc16/adc16.c **** void InitADC_12Bit()
 420:../Sources/drivers/adc16/adc16.c **** {
 357              		.loc 1 420 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361              		@ link register save eliminated.
 421:../Sources/drivers/adc16/adc16.c **** 	SIM_SCGC6 |= SIM_SCGC6_ADC0_MASK;
 362              		.loc 1 421 0
 363 0000 48F22000 		movw	r0, #32800
 364 0004 C4F20400 		movt	r0, 16388
 420:../Sources/drivers/adc16/adc16.c **** {
 365              		.loc 1 420 0
 366 0008 2DE9F003 		push	{r4, r5, r6, r7, r8, r9}
 367              	.LCFI3:
 368              		.cfi_def_cfa_offset 24
 369              		.cfi_offset 4, -24
 370              		.cfi_offset 5, -20
 371              		.cfi_offset 6, -16
 372              		.cfi_offset 7, -12
 373              		.cfi_offset 8, -8
 374              		.cfi_offset 9, -4
 375              	.LBB18:
 376              	.LBB19:
 376:../Sources/drivers/adc16/adc16.c ****     ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
 377              		.loc 1 376 0
 378 000c 4FF43043 		mov	r3, #45056
 379              	.LBE19:
 380              	.LBE18:
 381              		.loc 1 421 0
 382 0010 D0F81C90 		ldr	r9, [r0, #28]
 422:../Sources/drivers/adc16/adc16.c **** 	
 423:../Sources/drivers/adc16/adc16.c **** 	// setup the initial ADC default configuration to get setup for calibration
 424:../Sources/drivers/adc16/adc16.c **** 	
 425:../Sources/drivers/adc16/adc16.c **** 	 Master_Adc_Config.CONFIG1  = ADLPC_NORMAL
 383              		.loc 1 425 0
 384 0014 474A     		ldr	r2, .L20
 385              	.LBB22:
 386              	.LBB20:
 376:../Sources/drivers/adc16/adc16.c ****     ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
 387              		.loc 1 376 0
 388 0016 C4F20303 		movt	r3, 16387
 389              	.LBE20:
 390              	.LBE22:
 426:../Sources/drivers/adc16/adc16.c **** 	                            | ADC_CFG1_ADIV(ADIV_4)
 427:../Sources/drivers/adc16/adc16.c **** 	                            | ADLSMP_LONG
 428:../Sources/drivers/adc16/adc16.c **** 	                            | ADC_CFG1_MODE(MODE_12)
 429:../Sources/drivers/adc16/adc16.c **** 	                            | ADC_CFG1_ADICLK(ADICLK_BUS);
 430:../Sources/drivers/adc16/adc16.c **** 	 Master_Adc_Config.CONFIG2  = MUXSEL_ADCA
 431:../Sources/drivers/adc16/adc16.c **** 	                            | ADACKEN_DISABLED
 432:../Sources/drivers/adc16/adc16.c **** 	                            | ADHSC_HISPEED
 433:../Sources/drivers/adc16/adc16.c **** 	                            | ADC_CFG2_ADLSTS(ADLSTS_20) ;
 434:../Sources/drivers/adc16/adc16.c **** 	 
 435:../Sources/drivers/adc16/adc16.c **** 	 Master_Adc_Config.COMPARE1 = 0x1234u ;                 // can be anything
 436:../Sources/drivers/adc16/adc16.c **** 	 Master_Adc_Config.COMPARE2 = 0x5678u ;                 // can be anything
 437:../Sources/drivers/adc16/adc16.c **** 	                                                        // since not using
 438:../Sources/drivers/adc16/adc16.c **** 	                                                        // compare feature
 439:../Sources/drivers/adc16/adc16.c **** 	 Master_Adc_Config.STATUS2  = 
 440:../Sources/drivers/adc16/adc16.c **** 	                             ACFE_DISABLED
 441:../Sources/drivers/adc16/adc16.c **** 	                            | ACFGT_GREATER
 442:../Sources/drivers/adc16/adc16.c **** 	                            | ACREN_ENABLED
 443:../Sources/drivers/adc16/adc16.c **** 	                            | DMAEN_DISABLED
 444:../Sources/drivers/adc16/adc16.c **** 	                            | ADC_SC2_REFSEL(REFSEL_EXT);
 445:../Sources/drivers/adc16/adc16.c **** 
 446:../Sources/drivers/adc16/adc16.c **** 	 Master_Adc_Config.STATUS3  = CAL_OFF
 447:../Sources/drivers/adc16/adc16.c **** 	                            | ADCO_SINGLE
 448:../Sources/drivers/adc16/adc16.c **** 	                            | AVGE_ENABLED
 449:../Sources/drivers/adc16/adc16.c **** 	                            | ADC_SC3_AVGS(AVGS_16);
 450:../Sources/drivers/adc16/adc16.c **** 
 451:../Sources/drivers/adc16/adc16.c **** 	 Master_Adc_Config.STATUS1A = AIEN_OFF | DIFF_SINGLE | ADC_SC1_ADCH(31);
 391              		.loc 1 451 0
 392 001a 1F21     		movs	r1, #31
 435:../Sources/drivers/adc16/adc16.c **** 	 Master_Adc_Config.COMPARE1 = 0x1234u ;                 // can be anything
 393              		.loc 1 435 0
 394 001c 41F23427 		movw	r7, #4660
 436:../Sources/drivers/adc16/adc16.c **** 	 Master_Adc_Config.COMPARE2 = 0x5678u ;                 // can be anything
 395              		.loc 1 436 0
 396 0020 45F27866 		movw	r6, #22136
 439:../Sources/drivers/adc16/adc16.c **** 	 Master_Adc_Config.STATUS2  = 
 397              		.loc 1 439 0
 398 0024 1825     		movs	r5, #24
 446:../Sources/drivers/adc16/adc16.c **** 	 Master_Adc_Config.STATUS3  = CAL_OFF
 399              		.loc 1 446 0
 400 0026 0624     		movs	r4, #6
 425:../Sources/drivers/adc16/adc16.c **** 	 Master_Adc_Config.CONFIG1  = ADLPC_NORMAL
 401              		.loc 1 425 0
 402 0028 4FF05408 		mov	r8, #84
 430:../Sources/drivers/adc16/adc16.c **** 	 Master_Adc_Config.CONFIG2  = MUXSEL_ADCA
 403              		.loc 1 430 0
 404 002c 4FF0040C 		mov	ip, #4
 421:../Sources/drivers/adc16/adc16.c **** 	SIM_SCGC6 |= SIM_SCGC6_ADC0_MASK;
 405              		.loc 1 421 0
 406 0030 49F00069 		orr	r9, r9, #134217728
 407 0034 C0F81C90 		str	r9, [r0, #28]
 439:../Sources/drivers/adc16/adc16.c **** 	 Master_Adc_Config.STATUS2  = 
 408              		.loc 1 439 0
 409 0038 9571     		strb	r5, [r2, #6]
 425:../Sources/drivers/adc16/adc16.c **** 	 Master_Adc_Config.CONFIG1  = ADLPC_NORMAL
 410              		.loc 1 425 0
 411 003a 82F80080 		strb	r8, [r2, #0]
 430:../Sources/drivers/adc16/adc16.c **** 	 Master_Adc_Config.CONFIG2  = MUXSEL_ADCA
 412              		.loc 1 430 0
 413 003e 82F801C0 		strb	ip, [r2, #1]
 446:../Sources/drivers/adc16/adc16.c **** 	 Master_Adc_Config.STATUS3  = CAL_OFF
 414              		.loc 1 446 0
 415 0042 D471     		strb	r4, [r2, #7]
 416              		.loc 1 451 0
 417 0044 1172     		strb	r1, [r2, #8]
 452:../Sources/drivers/adc16/adc16.c **** 	 Master_Adc_Config.STATUS1B = AIEN_OFF | DIFF_SINGLE | ADC_SC1_ADCH(31);
 418              		.loc 1 452 0
 419 0046 5172     		strb	r1, [r2, #9]
 420              	.LVL29:
 435:../Sources/drivers/adc16/adc16.c **** 	 Master_Adc_Config.COMPARE1 = 0x1234u ;                 // can be anything
 421              		.loc 1 435 0
 422 0048 5780     		strh	r7, [r2, #2]	@ movhi
 436:../Sources/drivers/adc16/adc16.c **** 	 Master_Adc_Config.COMPARE2 = 0x5678u ;                 // can be anything
 423              		.loc 1 436 0
 424 004a 9680     		strh	r6, [r2, #4]	@ movhi
 425              	.LBB23:
 426              	.LBB21:
 376:../Sources/drivers/adc16/adc16.c ****     ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
 427              		.loc 1 376 0
 428 004c C3F80880 		str	r8, [r3, #8]
 377:../Sources/drivers/adc16/adc16.c ****     ADC_CFG2_REG(adcmap) = ADC_CfgPtr->CONFIG2;
 429              		.loc 1 377 0
 430 0050 C3F80CC0 		str	ip, [r3, #12]
 378:../Sources/drivers/adc16/adc16.c ****     ADC_CV1_REG(adcmap) = ADC_CfgPtr->COMPARE1;
 431              		.loc 1 378 0
 432 0054 9F61     		str	r7, [r3, #24]
 379:../Sources/drivers/adc16/adc16.c ****     ADC_CV2_REG(adcmap) = ADC_CfgPtr->COMPARE2;
 433              		.loc 1 379 0
 434 0056 DE61     		str	r6, [r3, #28]
 380:../Sources/drivers/adc16/adc16.c ****     ADC_SC2_REG(adcmap) = ADC_CfgPtr->STATUS2;
 435              		.loc 1 380 0
 436 0058 1D62     		str	r5, [r3, #32]
 381:../Sources/drivers/adc16/adc16.c ****     ADC_SC3_REG(adcmap) = ADC_CfgPtr->STATUS3;
 437              		.loc 1 381 0
 438 005a 5C62     		str	r4, [r3, #36]
 385:../Sources/drivers/adc16/adc16.c ****     ADC_SC1_REG(adcmap, A) = ADC_CfgPtr->STATUS1A;
 439              		.loc 1 385 0
 440 005c 1960     		str	r1, [r3, #0]
 386:../Sources/drivers/adc16/adc16.c ****     ADC_SC1_REG(adcmap, B) = ADC_CfgPtr->STATUS1B;
 441              		.loc 1 386 0
 442 005e 5960     		str	r1, [r3, #4]
 443              	.LVL30:
 444              	.LBE21:
 445              	.LBE23:
 446              	.LBB24:
 447              	.LBB25:
 293:../Sources/drivers/adc16/adc16.c ****     ADC_SC2_REG(adcmap) &= ~ADC_SC2_ADTRG_MASK; // Enable Software Conversion Trigger for Calibrati
 448              		.loc 1 293 0
 449 0060 186A     		ldr	r0, [r3, #32]
 450 0062 20F04002 		bic	r2, r0, #64
 451 0066 1A62     		str	r2, [r3, #32]
 294:../Sources/drivers/adc16/adc16.c ****     ADC_SC3_REG(adcmap) &= (~ADC_SC3_ADCO_MASK &~ADC_SC3_AVGS_MASK);    // set single conversion, c
 452              		.loc 1 294 0
 453 0068 596A     		ldr	r1, [r3, #36]
 454 006a 21F00B07 		bic	r7, r1, #11
 455 006e 5F62     		str	r7, [r3, #36]
 295:../Sources/drivers/adc16/adc16.c ****     ADC_SC3_REG(adcmap) |= (ADC_SC3_AVGE_MASK | ADC_SC3_AVGS(AVGS_32)); // Turn averaging ON and se
 456              		.loc 1 295 0
 457 0070 5E6A     		ldr	r6, [r3, #36]
 458 0072 46F00705 		orr	r5, r6, #7
 459 0076 5D62     		str	r5, [r3, #36]
 296:../Sources/drivers/adc16/adc16.c ****     ADC_SC3_REG(adcmap) |= ADC_SC3_CAL_MASK;    // Start CAL
 460              		.loc 1 296 0
 461 0078 5C6A     		ldr	r4, [r3, #36]
 462 007a 44F08000 		orr	r0, r4, #128
 463 007e 5862     		str	r0, [r3, #36]
 297:../Sources/drivers/adc16/adc16.c ****     while((ADC_SC1_REG(adcmap, A) & ADC_SC1_COCO_MASK) == COCO_NOT);
 464              		.loc 1 297 0
 465 0080 1946     		mov	r1, r3
 466              	.L14:
 467 0082 0A68     		ldr	r2, [r1, #0]
 468 0084 4FF43043 		mov	r3, #45056
 469 0088 1006     		lsls	r0, r2, #24
 470 008a C4F20303 		movt	r3, 16387
 471 008e F8D5     		bpl	.L14
 301:../Sources/drivers/adc16/adc16.c ****     if((ADC_SC3_REG(adcmap) & ADC_SC3_CALF_MASK) == CALF_FAIL)
 472              		.loc 1 301 0
 473 0090 5F6A     		ldr	r7, [r3, #36]
 474 0092 7A06     		lsls	r2, r7, #25
 475 0094 2DD4     		bmi	.L15
 476              	.LVL31:
 309:../Sources/drivers/adc16/adc16.c ****     cal_var = ADC_CLP0_REG(adcmap);
 477              		.loc 1 309 0
 478 0096 DE6C     		ldr	r6, [r3, #76]
 479              	.LVL32:
 310:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLP1_REG(adcmap);
 480              		.loc 1 310 0
 481 0098 9A6C     		ldr	r2, [r3, #72]
 311:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLP2_REG(adcmap);
 482              		.loc 1 311 0
 483 009a 5D6C     		ldr	r5, [r3, #68]
 312:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLP3_REG(adcmap);
 484              		.loc 1 312 0
 485 009c 1C6C     		ldr	r4, [r3, #64]
 313:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLP4_REG(adcmap);
 486              		.loc 1 313 0
 487 009e D86B     		ldr	r0, [r3, #60]
 314:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLPS_REG(adcmap);
 488              		.loc 1 314 0
 489 00a0 996B     		ldr	r1, [r3, #56]
 310:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLP1_REG(adcmap);
 490              		.loc 1 310 0
 491 00a2 12FA86F7 		uxtah	r7, r2, r6
 492              	.LVL33:
 311:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLP2_REG(adcmap);
 493              		.loc 1 311 0
 494 00a6 15FA87F6 		uxtah	r6, r5, r7
 495              	.LVL34:
 312:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLP3_REG(adcmap);
 496              		.loc 1 312 0
 497 00aa 14FA86F2 		uxtah	r2, r4, r6
 498              	.LVL35:
 313:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLP4_REG(adcmap);
 499              		.loc 1 313 0
 500 00ae 10FA82F5 		uxtah	r5, r0, r2
 501              	.LVL36:
 314:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLPS_REG(adcmap);
 502              		.loc 1 314 0
 503 00b2 11FA85F4 		uxtah	r4, r1, r5
 504              	.LVL37:
 315:../Sources/drivers/adc16/adc16.c ****     cal_var = cal_var / 2;
 505              		.loc 1 315 0
 506 00b6 C4F34E00 		ubfx	r0, r4, #1, #15
 507              	.LVL38:
 317:../Sources/drivers/adc16/adc16.c ****     ADC_PG_REG(adcmap) = ADC_PG_PG(cal_var);
 508              		.loc 1 317 0
 509 00ba 40F40041 		orr	r1, r0, #32768
 510 00be D962     		str	r1, [r3, #44]
 511              	.LVL39:
 322:../Sources/drivers/adc16/adc16.c ****     cal_var = ADC_CLM0_REG(adcmap);
 512              		.loc 1 322 0
 513 00c0 DF6E     		ldr	r7, [r3, #108]
 514              	.LVL40:
 323:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLM1_REG(adcmap);
 515              		.loc 1 323 0
 516 00c2 9E6E     		ldr	r6, [r3, #104]
 324:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLM2_REG(adcmap);
 517              		.loc 1 324 0
 518 00c4 5D6E     		ldr	r5, [r3, #100]
 325:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLM3_REG(adcmap);
 519              		.loc 1 325 0
 520 00c6 1C6E     		ldr	r4, [r3, #96]
 326:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLM4_REG(adcmap);
 521              		.loc 1 326 0
 522 00c8 D86D     		ldr	r0, [r3, #92]
 327:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLMS_REG(adcmap);
 523              		.loc 1 327 0
 524 00ca 996D     		ldr	r1, [r3, #88]
 323:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLM1_REG(adcmap);
 525              		.loc 1 323 0
 526 00cc 16FA87F2 		uxtah	r2, r6, r7
 527              	.LVL41:
 324:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLM2_REG(adcmap);
 528              		.loc 1 324 0
 529 00d0 15FA82F7 		uxtah	r7, r5, r2
 530              	.LVL42:
 325:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLM3_REG(adcmap);
 531              		.loc 1 325 0
 532 00d4 14FA87F6 		uxtah	r6, r4, r7
 533              	.LVL43:
 326:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLM4_REG(adcmap);
 534              		.loc 1 326 0
 535 00d8 10FA86F5 		uxtah	r5, r0, r6
 536              	.LVL44:
 327:../Sources/drivers/adc16/adc16.c ****     cal_var += ADC_CLMS_REG(adcmap);
 537              		.loc 1 327 0
 538 00dc 11FA85F4 		uxtah	r4, r1, r5
 539              	.LVL45:
 328:../Sources/drivers/adc16/adc16.c ****     cal_var = cal_var / 2;
 540              		.loc 1 328 0
 541 00e0 C4F34E00 		ubfx	r0, r4, #1, #15
 542              	.LVL46:
 330:../Sources/drivers/adc16/adc16.c ****     ADC_MG_REG(adcmap) = ADC_MG_MG(cal_var);
 543              		.loc 1 330 0
 544 00e4 40F40041 		orr	r1, r0, #32768
 545 00e8 1963     		str	r1, [r3, #48]
 331:../Sources/drivers/adc16/adc16.c ****     ADC_SC3_REG(adcmap) &= ~ADC_SC3_CAL_MASK;   /* Clear CAL bit */
 546              		.loc 1 331 0
 547 00ea 5A6A     		ldr	r2, [r3, #36]
 548 00ec 22F08007 		bic	r7, r2, #128
 549 00f0 5F62     		str	r7, [r3, #36]
 550              	.LVL47:
 551              	.L15:
 552              	.LBE25:
 553              	.LBE24:
 554              	.LBB26:
 555              	.LBB27:
 376:../Sources/drivers/adc16/adc16.c ****     ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
 556              		.loc 1 376 0
 557 00f2 4FF43043 		mov	r3, #45056
 558 00f6 C4F20303 		movt	r3, 16387
 385:../Sources/drivers/adc16/adc16.c ****     ADC_SC1_REG(adcmap, A) = ADC_CfgPtr->STATUS1A;
 559              		.loc 1 385 0
 560 00fa 1F22     		movs	r2, #31
 376:../Sources/drivers/adc16/adc16.c ****     ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
 561              		.loc 1 376 0
 562 00fc 5427     		movs	r7, #84
 377:../Sources/drivers/adc16/adc16.c ****     ADC_CFG2_REG(adcmap) = ADC_CfgPtr->CONFIG2;
 563              		.loc 1 377 0
 564 00fe 0426     		movs	r6, #4
 378:../Sources/drivers/adc16/adc16.c ****     ADC_CV1_REG(adcmap) = ADC_CfgPtr->COMPARE1;
 565              		.loc 1 378 0
 566 0100 41F23425 		movw	r5, #4660
 379:../Sources/drivers/adc16/adc16.c ****     ADC_CV2_REG(adcmap) = ADC_CfgPtr->COMPARE2;
 567              		.loc 1 379 0
 568 0104 45F27864 		movw	r4, #22136
 380:../Sources/drivers/adc16/adc16.c ****     ADC_SC2_REG(adcmap) = ADC_CfgPtr->STATUS2;
 569              		.loc 1 380 0
 570 0108 1820     		movs	r0, #24
 381:../Sources/drivers/adc16/adc16.c ****     ADC_SC3_REG(adcmap) = ADC_CfgPtr->STATUS3;
 571              		.loc 1 381 0
 572 010a 0621     		movs	r1, #6
 376:../Sources/drivers/adc16/adc16.c ****     ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
 573              		.loc 1 376 0
 574 010c 9F60     		str	r7, [r3, #8]
 377:../Sources/drivers/adc16/adc16.c ****     ADC_CFG2_REG(adcmap) = ADC_CfgPtr->CONFIG2;
 575              		.loc 1 377 0
 576 010e DE60     		str	r6, [r3, #12]
 378:../Sources/drivers/adc16/adc16.c ****     ADC_CV1_REG(adcmap) = ADC_CfgPtr->COMPARE1;
 577              		.loc 1 378 0
 578 0110 9D61     		str	r5, [r3, #24]
 379:../Sources/drivers/adc16/adc16.c ****     ADC_CV2_REG(adcmap) = ADC_CfgPtr->COMPARE2;
 579              		.loc 1 379 0
 580 0112 DC61     		str	r4, [r3, #28]
 380:../Sources/drivers/adc16/adc16.c ****     ADC_SC2_REG(adcmap) = ADC_CfgPtr->STATUS2;
 581              		.loc 1 380 0
 582 0114 1862     		str	r0, [r3, #32]
 381:../Sources/drivers/adc16/adc16.c ****     ADC_SC3_REG(adcmap) = ADC_CfgPtr->STATUS3;
 583              		.loc 1 381 0
 584 0116 5962     		str	r1, [r3, #36]
 385:../Sources/drivers/adc16/adc16.c ****     ADC_SC1_REG(adcmap, A) = ADC_CfgPtr->STATUS1A;
 585              		.loc 1 385 0
 586 0118 1A60     		str	r2, [r3, #0]
 386:../Sources/drivers/adc16/adc16.c ****     ADC_SC1_REG(adcmap, B) = ADC_CfgPtr->STATUS1B;
 587              		.loc 1 386 0
 588 011a 5A60     		str	r2, [r3, #4]
 589              	.LVL48:
 590              	.LBE27:
 591              	.LBE26:
 592              	.LBB28:
 593              	.LBB29:
 376:../Sources/drivers/adc16/adc16.c ****     ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
 594              		.loc 1 376 0
 595 011c 9F60     		str	r7, [r3, #8]
 377:../Sources/drivers/adc16/adc16.c ****     ADC_CFG2_REG(adcmap) = ADC_CfgPtr->CONFIG2;
 596              		.loc 1 377 0
 597 011e DE60     		str	r6, [r3, #12]
 378:../Sources/drivers/adc16/adc16.c ****     ADC_CV1_REG(adcmap) = ADC_CfgPtr->COMPARE1;
 598              		.loc 1 378 0
 599 0120 9D61     		str	r5, [r3, #24]
 379:../Sources/drivers/adc16/adc16.c ****     ADC_CV2_REG(adcmap) = ADC_CfgPtr->COMPARE2;
 600              		.loc 1 379 0
 601 0122 DC61     		str	r4, [r3, #28]
 380:../Sources/drivers/adc16/adc16.c ****     ADC_SC2_REG(adcmap) = ADC_CfgPtr->STATUS2;
 602              		.loc 1 380 0
 603 0124 1862     		str	r0, [r3, #32]
 381:../Sources/drivers/adc16/adc16.c ****     ADC_SC3_REG(adcmap) = ADC_CfgPtr->STATUS3;
 604              		.loc 1 381 0
 605 0126 5962     		str	r1, [r3, #36]
 385:../Sources/drivers/adc16/adc16.c ****     ADC_SC1_REG(adcmap, A) = ADC_CfgPtr->STATUS1A;
 606              		.loc 1 385 0
 607 0128 1A60     		str	r2, [r3, #0]
 386:../Sources/drivers/adc16/adc16.c ****     ADC_SC1_REG(adcmap, B) = ADC_CfgPtr->STATUS1B;
 608              		.loc 1 386 0
 609 012a 5A60     		str	r2, [r3, #4]
 610              	.LBE29:
 611              	.LBE28:
 453:../Sources/drivers/adc16/adc16.c **** 
 454:../Sources/drivers/adc16/adc16.c **** 	// Configure ADC as it will be used, but becuase ADC_SC1_ADCH is 31,
 455:../Sources/drivers/adc16/adc16.c **** 	// the ADC will be inactive.  Channel 31 is just disable function.
 456:../Sources/drivers/adc16/adc16.c **** 	// There really is no channel 31.
 457:../Sources/drivers/adc16/adc16.c **** 
 458:../Sources/drivers/adc16/adc16.c **** 	 ADC_Config_Alt(ADC0_BASE_PTR, &Master_Adc_Config);  // config ADC
 459:../Sources/drivers/adc16/adc16.c **** 
 460:../Sources/drivers/adc16/adc16.c **** 	// Calibrate the ADC in the configuration in which it will be used:
 461:../Sources/drivers/adc16/adc16.c **** 	 ADC_Cal(ADC0_BASE_PTR);                    // do the calibration
 462:../Sources/drivers/adc16/adc16.c **** 
 463:../Sources/drivers/adc16/adc16.c **** 	// The structure still has the desired configuration.  So restore it.
 464:../Sources/drivers/adc16/adc16.c **** 	// Why restore it?  The calibration makes some adjustments to the
 465:../Sources/drivers/adc16/adc16.c **** 	// configuration of the ADC.  The are now undone:
 466:../Sources/drivers/adc16/adc16.c **** 
 467:../Sources/drivers/adc16/adc16.c **** 	// config the ADC again to desired conditions
 468:../Sources/drivers/adc16/adc16.c **** 	 ADC_Config_Alt(ADC0_BASE_PTR, &Master_Adc_Config);
 469:../Sources/drivers/adc16/adc16.c **** 
 470:../Sources/drivers/adc16/adc16.c **** 
 471:../Sources/drivers/adc16/adc16.c **** 	// *****************************************************************************
 472:../Sources/drivers/adc16/adc16.c **** 	//      ADC0 using the PDB trigger in ping pong
 473:../Sources/drivers/adc16/adc16.c **** 	// *****************************************************************************
 474:../Sources/drivers/adc16/adc16.c **** 
 475:../Sources/drivers/adc16/adc16.c **** 	// use interrupts, single ended mode, and real channel numbers now:
 476:../Sources/drivers/adc16/adc16.c **** 	
 477:../Sources/drivers/adc16/adc16.c **** 	 ADC_Config_Alt(ADC0_BASE_PTR, &Master_Adc_Config);  // config ADC0
 478:../Sources/drivers/adc16/adc16.c **** }
 612              		.loc 1 478 0
 613 012c BDE8F003 		pop	{r4, r5, r6, r7, r8, r9}
 614 0130 7047     		bx	lr
 615              	.L21:
 616 0132 00BF     		.align	2
 617              	.L20:
 618 0134 00000000 		.word	Master_Adc_Config
 619              		.cfi_endproc
 620              	.LFE4:
 622              		.section	.text.StartADC0_SingleEnded,"ax",%progbits
 623              		.align	2
 624              		.global	StartADC0_SingleEnded
 625              		.thumb
 626              		.thumb_func
 628              	StartADC0_SingleEnded:
 629              	.LFB5:
 479:../Sources/drivers/adc16/adc16.c **** 
 480:../Sources/drivers/adc16/adc16.c **** 
 481:../Sources/drivers/adc16/adc16.c **** 
 482:../Sources/drivers/adc16/adc16.c **** 
 483:../Sources/drivers/adc16/adc16.c **** 
 484:../Sources/drivers/adc16/adc16.c **** void StartADC0_SingleEnded(uint8_t Channel,uint8_t MuxSide)
 485:../Sources/drivers/adc16/adc16.c **** {
 630              		.loc 1 485 0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 0
 633              		@ frame_needed = 0, uses_anonymous_args = 0
 634              		@ link register save eliminated.
 635              	.LVL49:
 486:../Sources/drivers/adc16/adc16.c **** 	if(MuxSide == 0)
 487:../Sources/drivers/adc16/adc16.c **** 	{
 488:../Sources/drivers/adc16/adc16.c **** 		//Select The a side of the MUX
 489:../Sources/drivers/adc16/adc16.c **** 		ADC0_CFG1 &= ~(ADC_CFG2_MUXSEL_MASK);
 636              		.loc 1 489 0
 637 0000 4FF43043 		mov	r3, #45056
 638 0004 C4F20303 		movt	r3, 16387
 639 0008 9A68     		ldr	r2, [r3, #8]
 486:../Sources/drivers/adc16/adc16.c **** 	if(MuxSide == 0)
 640              		.loc 1 486 0
 641 000a 41B1     		cbz	r1, .L25
 490:../Sources/drivers/adc16/adc16.c **** 	}
 491:../Sources/drivers/adc16/adc16.c **** 	else
 492:../Sources/drivers/adc16/adc16.c **** 	{
 493:../Sources/drivers/adc16/adc16.c **** 		//Select The b side of the MUX
 494:../Sources/drivers/adc16/adc16.c **** 		ADC0_CFG1 |= (ADC_CFG2_MUXSEL_MASK);
 642              		.loc 1 494 0
 643 000c 42F01001 		orr	r1, r2, #16
 644              	.LVL50:
 645 0010 9960     		str	r1, [r3, #8]
 646              	.L24:
 495:../Sources/drivers/adc16/adc16.c **** 	}
 496:../Sources/drivers/adc16/adc16.c **** 	
 497:../Sources/drivers/adc16/adc16.c **** 	ADC0_SC1A  = Channel;
 647              		.loc 1 497 0
 648 0012 4FF43043 		mov	r3, #45056
 649 0016 C4F20303 		movt	r3, 16387
 650 001a 1860     		str	r0, [r3, #0]
 651 001c 7047     		bx	lr
 652              	.LVL51:
 653              	.L25:
 489:../Sources/drivers/adc16/adc16.c **** 		ADC0_CFG1 &= ~(ADC_CFG2_MUXSEL_MASK);
 654              		.loc 1 489 0
 655 001e 22F01002 		bic	r2, r2, #16
 656 0022 9A60     		str	r2, [r3, #8]
 657 0024 F5E7     		b	.L24
 658              		.cfi_endproc
 659              	.LFE5:
 661 0026 00BF     		.section	.text.ReadADC0_SingleEnded,"ax",%progbits
 662              		.align	2
 663              		.global	ReadADC0_SingleEnded
 664              		.thumb
 665              		.thumb_func
 667              	ReadADC0_SingleEnded:
 668              	.LFB6:
 498:../Sources/drivers/adc16/adc16.c **** }
 499:../Sources/drivers/adc16/adc16.c **** 
 500:../Sources/drivers/adc16/adc16.c **** uint16_t ReadADC0_SingleEnded(uint8_t Channel,uint8_t MuxSide)
 501:../Sources/drivers/adc16/adc16.c **** {
 669              		.loc 1 501 0
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 0
 672              		@ frame_needed = 0, uses_anonymous_args = 0
 673              		@ link register save eliminated.
 674              	.LVL52:
 675              	.LBB30:
 676              	.LBB31:
 489:../Sources/drivers/adc16/adc16.c **** 		ADC0_CFG1 &= ~(ADC_CFG2_MUXSEL_MASK);
 677              		.loc 1 489 0
 678 0000 4FF43043 		mov	r3, #45056
 679 0004 C4F20303 		movt	r3, 16387
 680 0008 9A68     		ldr	r2, [r3, #8]
 486:../Sources/drivers/adc16/adc16.c **** 	if(MuxSide == 0)
 681              		.loc 1 486 0
 682 000a 91B9     		cbnz	r1, .L27
 489:../Sources/drivers/adc16/adc16.c **** 		ADC0_CFG1 &= ~(ADC_CFG2_MUXSEL_MASK);
 683              		.loc 1 489 0
 684 000c 22F01002 		bic	r2, r2, #16
 685 0010 9A60     		str	r2, [r3, #8]
 686              	.LVL53:
 687              	.L28:
 497:../Sources/drivers/adc16/adc16.c **** 	ADC0_SC1A  = Channel;
 688              		.loc 1 497 0
 689 0012 4FF43043 		mov	r3, #45056
 690 0016 C4F20303 		movt	r3, 16387
 691              	.LBE31:
 692              	.LBE30:
 502:../Sources/drivers/adc16/adc16.c **** 	StartADC0_SingleEnded(Channel,MuxSide);
 503:../Sources/drivers/adc16/adc16.c **** 	
 504:../Sources/drivers/adc16/adc16.c **** 	while((ADC0_SC1A & ADC_SC1_COCO_MASK) == 0)
 693              		.loc 1 504 0
 694 001a 1946     		mov	r1, r3
 695              	.LBB34:
 696              	.LBB32:
 497:../Sources/drivers/adc16/adc16.c **** 	ADC0_SC1A  = Channel;
 697              		.loc 1 497 0
 698 001c 1860     		str	r0, [r3, #0]
 699              	.LVL54:
 700              	.L29:
 701              	.LBE32:
 702              	.LBE34:
 703              		.loc 1 504 0
 704 001e 0868     		ldr	r0, [r1, #0]
 705 0020 4FF43043 		mov	r3, #45056
 706 0024 0206     		lsls	r2, r0, #24
 707 0026 C4F20303 		movt	r3, 16387
 708 002a F8D5     		bpl	.L29
 505:../Sources/drivers/adc16/adc16.c **** 	{
 506:../Sources/drivers/adc16/adc16.c **** 		//Wait For Conversion Complete
 507:../Sources/drivers/adc16/adc16.c **** 	}
 508:../Sources/drivers/adc16/adc16.c **** 	
 509:../Sources/drivers/adc16/adc16.c **** 	return ADC0_RA;
 709              		.loc 1 509 0
 710 002c 1A69     		ldr	r2, [r3, #16]
 510:../Sources/drivers/adc16/adc16.c **** 	
 511:../Sources/drivers/adc16/adc16.c **** }
 711              		.loc 1 511 0
 712 002e 90B2     		uxth	r0, r2
 713 0030 7047     		bx	lr
 714              	.LVL55:
 715              	.L27:
 716              	.LBB35:
 717              	.LBB33:
 494:../Sources/drivers/adc16/adc16.c **** 		ADC0_CFG1 |= (ADC_CFG2_MUXSEL_MASK);
 718              		.loc 1 494 0
 719 0032 42F01001 		orr	r1, r2, #16
 720              	.LVL56:
 721 0036 9960     		str	r1, [r3, #8]
 722 0038 EBE7     		b	.L28
 723              	.LBE33:
 724              	.LBE35:
 725              		.cfi_endproc
 726              	.LFE6:
 728              		.comm	Master_Adc_Config,16,4
 729 003a 00BF     		.text
 730              	.Letext0:
 731              		.file 2 "C:/Freescale/CW MCU v10.5/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 732              		.file 3 "C:/Users/ehughes/Dropbox/FRDM/FRDM-JAM/SRC/MonkeyJam/MonkeyJam/Project_Headers/MK20D5.h"
 733              		.file 4 "../Sources/drivers/adc16/../../cpu/arm_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 adc16.c
C:\Users\ehughes\AppData\Local\Temp\ccE7IUBa.s:19     .text.ADC_Cal:00000000 $t
C:\Users\ehughes\AppData\Local\Temp\ccE7IUBa.s:24     .text.ADC_Cal:00000000 ADC_Cal
C:\Users\ehughes\AppData\Local\Temp\ccE7IUBa.s:159    .text.ADC_Config:00000000 $t
C:\Users\ehughes\AppData\Local\Temp\ccE7IUBa.s:164    .text.ADC_Config:00000000 ADC_Config
C:\Users\ehughes\AppData\Local\Temp\ccE7IUBa.s:206    .text.ADC_Config_Alt:00000000 $t
C:\Users\ehughes\AppData\Local\Temp\ccE7IUBa.s:211    .text.ADC_Config_Alt:00000000 ADC_Config_Alt
C:\Users\ehughes\AppData\Local\Temp\ccE7IUBa.s:259    .text.ADC_Read_Cal:00000000 $t
C:\Users\ehughes\AppData\Local\Temp\ccE7IUBa.s:264    .text.ADC_Read_Cal:00000000 ADC_Read_Cal
C:\Users\ehughes\AppData\Local\Temp\ccE7IUBa.s:350    .text.InitADC_12Bit:00000000 $t
C:\Users\ehughes\AppData\Local\Temp\ccE7IUBa.s:355    .text.InitADC_12Bit:00000000 InitADC_12Bit
C:\Users\ehughes\AppData\Local\Temp\ccE7IUBa.s:618    .text.InitADC_12Bit:00000134 $d
                            *COM*:00000010 Master_Adc_Config
C:\Users\ehughes\AppData\Local\Temp\ccE7IUBa.s:623    .text.StartADC0_SingleEnded:00000000 $t
C:\Users\ehughes\AppData\Local\Temp\ccE7IUBa.s:628    .text.StartADC0_SingleEnded:00000000 StartADC0_SingleEnded
C:\Users\ehughes\AppData\Local\Temp\ccE7IUBa.s:662    .text.ReadADC0_SingleEnded:00000000 $t
C:\Users\ehughes\AppData\Local\Temp\ccE7IUBa.s:667    .text.ReadADC0_SingleEnded:00000000 ReadADC0_SingleEnded
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
