   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"IO.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.InitIO,"ax",%progbits
  19              		.align	2
  20              		.global	InitIO
  21              		.thumb
  22              		.thumb_func
  24              	InitIO:
  25              	.LFB0:
  26              		.file 1 "../Sources/drivers/IO.c"
   1:../Sources/drivers/IO.c **** #include "derivative.h"
   2:../Sources/drivers/IO.c **** #include "IO.h"
   3:../Sources/drivers/IO.c **** #include "../DSP/AudioIF.h"
   4:../Sources/drivers/IO.c **** #include "adc16/adc16.h"
   5:../Sources/drivers/IO.c **** 
   6:../Sources/drivers/IO.c **** void InitIO()
   7:../Sources/drivers/IO.c **** {
  27              		.loc 1 7 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              	.LCFI1:
  38              		.cfi_def_cfa_register 7
   8:../Sources/drivers/IO.c ****     //enable Clocks to All the Ports
   9:../Sources/drivers/IO.c ****     SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK |
  39              		.loc 1 9 0
  40 0004 4FF4E043 		mov	r3, #28672
  41 0008 C4F20403 		movt	r3, 16388
  42 000c 4FF4E042 		mov	r2, #28672
  43 0010 C4F20402 		movt	r2, 16388
  44 0014 02F58152 		add	r2, r2, #4128
  45 0018 02F11802 		add	r2, r2, #24
  46 001c 1268     		ldr	r2, [r2, #0]
  47 001e 42F47852 		orr	r2, r2, #15872
  48 0022 03F58153 		add	r3, r3, #4128
  49 0026 03F11803 		add	r3, r3, #24
  50 002a 1A60     		str	r2, [r3, #0]
  10:../Sources/drivers/IO.c ****                  SIM_SCGC5_PORTB_MASK |
  11:../Sources/drivers/IO.c ****                  SIM_SCGC5_PORTC_MASK |
  12:../Sources/drivers/IO.c ****                  SIM_SCGC5_PORTD_MASK |
  13:../Sources/drivers/IO.c ****                  SIM_SCGC5_PORTE_MASK;
  14:../Sources/drivers/IO.c ****     InitADC_12Bit();
  51              		.loc 1 14 0
  52 002c FFF7FEFF 		bl	InitADC_12Bit
  15:../Sources/drivers/IO.c ****     //This sets the SAI unit for 32MHz, 256x oversampling on the ADC/ Dacs
  16:../Sources/drivers/IO.c ****     InitAudioIO(50000000, 24000, 256);
  53              		.loc 1 16 0
  54 0030 4FF28000 		movw	r0, #61568
  55 0034 C0F2FA20 		movt	r0, 762
  56 0038 45F6C051 		movw	r1, #24000
  57 003c 4FF48072 		mov	r2, #256
  58 0040 FFF7FEFF 		bl	InitAudioIO
  17:../Sources/drivers/IO.c ****     PORTC_PCR(0) = PORT_PCR_MUX(1);
  59              		.loc 1 17 0
  60 0044 4FF43043 		mov	r3, #45056
  61 0048 C4F20403 		movt	r3, 16388
  62 004c 4FF48072 		mov	r2, #256
  63 0050 1A60     		str	r2, [r3, #0]
  18:../Sources/drivers/IO.c ****     PORTC_PCR(4) = PORT_PCR_MUX(1);
  64              		.loc 1 18 0
  65 0052 4FF43043 		mov	r3, #45056
  66 0056 C4F20403 		movt	r3, 16388
  67 005a 4FF48072 		mov	r2, #256
  68 005e 1A61     		str	r2, [r3, #16]
  19:../Sources/drivers/IO.c ****     PORTC_PCR(9) = PORT_PCR_MUX(1);
  69              		.loc 1 19 0
  70 0060 4FF43043 		mov	r3, #45056
  71 0064 C4F20403 		movt	r3, 16388
  72 0068 4FF48072 		mov	r2, #256
  73 006c 5A62     		str	r2, [r3, #36]
  20:../Sources/drivers/IO.c ****     IO_DELTA_IS_OUTPUT;
  74              		.loc 1 20 0
  75 006e 4FF28003 		movw	r3, #61568
  76 0072 C4F20F03 		movt	r3, 16399
  77 0076 4FF28002 		movw	r2, #61568
  78 007a C4F20F02 		movt	r2, 16399
  79 007e 5269     		ldr	r2, [r2, #20]
  80 0080 42F01002 		orr	r2, r2, #16
  81 0084 5A61     		str	r2, [r3, #20]
  21:../Sources/drivers/IO.c **** }
  82              		.loc 1 21 0
  83 0086 80BD     		pop	{r7, pc}
  84              		.cfi_endproc
  85              	.LFE0:
  87              		.global	PotMin
  88              		.section	.bss.PotMin,"aw",%nobits
  89              		.align	2
  92              	PotMin:
  93 0000 00000000 		.space	12
  93      00000000 
  93      00000000 
  94              		.global	PotMax
  95              		.section	.data.PotMax,"aw",%progbits
  96              		.align	2
  99              	PotMax:
 100 0000 0000803F 		.word	1065353216
 101 0004 0000803F 		.word	1065353216
 102 0008 0000803F 		.word	1065353216
 103              		.section	.text.SetPotLimits,"ax",%progbits
 104              		.align	2
 105              		.global	SetPotLimits
 106              		.thumb
 107              		.thumb_func
 109              	SetPotLimits:
 110              	.LFB1:
  22:../Sources/drivers/IO.c **** 
  23:../Sources/drivers/IO.c **** 
  24:../Sources/drivers/IO.c **** 
  25:../Sources/drivers/IO.c **** float PotMin[3] = {0,0,0};
  26:../Sources/drivers/IO.c **** float PotMax[3] = {1,1,1};
  27:../Sources/drivers/IO.c **** 
  28:../Sources/drivers/IO.c **** 
  29:../Sources/drivers/IO.c **** //THis function is used to set the maximum/minimum limits that will be returned by ReadPOT
  30:../Sources/drivers/IO.c **** void SetPotLimits(uint8_t Channel,float Min, float Max)
  31:../Sources/drivers/IO.c **** {
 111              		.loc 1 31 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 16
 114              		@ frame_needed = 1, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116 0000 80B4     		push	{r7}
 117              	.LCFI2:
 118              		.cfi_def_cfa_offset 4
 119              		.cfi_offset 7, -4
 120 0002 85B0     		sub	sp, sp, #20
 121              	.LCFI3:
 122              		.cfi_def_cfa_offset 24
 123 0004 00AF     		add	r7, sp, #0
 124              	.LCFI4:
 125              		.cfi_def_cfa_register 7
 126 0006 0346     		mov	r3, r0
 127 0008 B960     		str	r1, [r7, #8]	@ float
 128 000a 7A60     		str	r2, [r7, #4]	@ float
 129 000c FB73     		strb	r3, [r7, #15]
  32:../Sources/drivers/IO.c ****     if(Channel>2)
 130              		.loc 1 32 0
 131 000e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 132 0010 022B     		cmp	r3, #2
 133 0012 02D9     		bls	.L3
  33:../Sources/drivers/IO.c ****         {
  34:../Sources/drivers/IO.c ****             Channel = 0;
 134              		.loc 1 34 0
 135 0014 4FF00003 		mov	r3, #0
 136 0018 FB73     		strb	r3, [r7, #15]
 137              	.L3:
  35:../Sources/drivers/IO.c ****         }
  36:../Sources/drivers/IO.c **** 
  37:../Sources/drivers/IO.c ****     PotMin[Channel] = Min;
 138              		.loc 1 37 0
 139 001a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 140 001c 40F20003 		movw	r3, #:lower16:PotMin
 141 0020 C0F20003 		movt	r3, #:upper16:PotMin
 142 0024 B968     		ldr	r1, [r7, #8]	@ float
 143 0026 43F82210 		str	r1, [r3, r2, lsl #2]	@ float
  38:../Sources/drivers/IO.c ****     PotMax[Channel] = Max;
 144              		.loc 1 38 0
 145 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 146 002c 40F20003 		movw	r3, #:lower16:PotMax
 147 0030 C0F20003 		movt	r3, #:upper16:PotMax
 148 0034 7968     		ldr	r1, [r7, #4]	@ float
 149 0036 43F82210 		str	r1, [r3, r2, lsl #2]	@ float
  39:../Sources/drivers/IO.c **** }
 150              		.loc 1 39 0
 151 003a 07F11407 		add	r7, r7, #20
 152 003e BD46     		mov	sp, r7
 153 0040 80BC     		pop	{r7}
 154 0042 7047     		bx	lr
 155              		.cfi_endproc
 156              	.LFE1:
 158              		.global	__aeabi_i2f
 159              		.global	__aeabi_fdiv
 160              		.global	__aeabi_fsub
 161              		.global	__aeabi_fmul
 162              		.global	__aeabi_fadd
 163              		.section	.text.ReadPOT,"ax",%progbits
 164              		.align	2
 165              		.global	ReadPOT
 166              		.thumb
 167              		.thumb_func
 169              	ReadPOT:
 170              	.LFB2:
  40:../Sources/drivers/IO.c **** 
  41:../Sources/drivers/IO.c **** 
  42:../Sources/drivers/IO.c **** //Returns potentiometer setting as a float between the values set by SetPotLimits(...)
  43:../Sources/drivers/IO.c **** float ReadPOT(uint8_t Channel)
  44:../Sources/drivers/IO.c **** {
 171              		.loc 1 44 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 16
 174              		@ frame_needed = 1, uses_anonymous_args = 0
 175 0000 80B5     		push	{r7, lr}
 176              	.LCFI5:
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 7, -8
 179              		.cfi_offset 14, -4
 180 0002 84B0     		sub	sp, sp, #16
 181              	.LCFI6:
 182              		.cfi_def_cfa_offset 24
 183 0004 00AF     		add	r7, sp, #0
 184              	.LCFI7:
 185              		.cfi_def_cfa_register 7
 186 0006 0346     		mov	r3, r0
 187 0008 FB71     		strb	r3, [r7, #7]
  45:../Sources/drivers/IO.c ****     float Pot_Value;
  46:../Sources/drivers/IO.c **** 
  47:../Sources/drivers/IO.c ****     switch (Channel)
 188              		.loc 1 47 0
 189 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 190 000c 012B     		cmp	r3, #1
 191 000e 16D0     		beq	.L6
 192 0010 022B     		cmp	r3, #2
 193 0012 29D0     		beq	.L7
 194              	.LBB2:
  48:../Sources/drivers/IO.c ****         {
  49:../Sources/drivers/IO.c ****             default:
  50:../Sources/drivers/IO.c ****             case POT_ALPHA:
  51:../Sources/drivers/IO.c ****                 Pot_Value =  (float)ReadADC0_SingleEnded(ADC0_SE13) /  4095.0; //Alpha
 195              		.loc 1 51 0
 196 0014 4FF00D00 		mov	r0, #13
 197 0018 4FF00001 		mov	r1, #0
 198 001c FFF7FEFF 		bl	ReadADC0_SingleEnded
 199 0020 0346     		mov	r3, r0
 200 0022 1846     		mov	r0, r3
 201 0024 FFF7FEFF 		bl	__aeabi_i2f
 202 0028 0346     		mov	r3, r0
 203 002a 1846     		mov	r0, r3
 204 002c 4FF47041 		mov	r1, #61440
 205 0030 C4F27F51 		movt	r1, 17791
 206 0034 FFF7FEFF 		bl	__aeabi_fdiv
 207 0038 0346     		mov	r3, r0
 208 003a FB60     		str	r3, [r7, #12]	@ float
  52:../Sources/drivers/IO.c ****                 break;
 209              		.loc 1 52 0
 210 003c 29E0     		b	.L8
 211              	.L6:
  53:../Sources/drivers/IO.c **** 
  54:../Sources/drivers/IO.c ****             case POT_BETA:
  55:../Sources/drivers/IO.c ****                 Pot_Value =  (float)ReadADC0_SingleEnded(ADC0_SE23)	/  4095.0; //beta
 212              		.loc 1 55 0
 213 003e 4FF01700 		mov	r0, #23
 214 0042 4FF00001 		mov	r1, #0
 215 0046 FFF7FEFF 		bl	ReadADC0_SingleEnded
 216 004a 0346     		mov	r3, r0
 217 004c 1846     		mov	r0, r3
 218 004e FFF7FEFF 		bl	__aeabi_i2f
 219 0052 0346     		mov	r3, r0
 220 0054 1846     		mov	r0, r3
 221 0056 4FF47041 		mov	r1, #61440
 222 005a C4F27F51 		movt	r1, 17791
 223 005e FFF7FEFF 		bl	__aeabi_fdiv
 224 0062 0346     		mov	r3, r0
 225 0064 FB60     		str	r3, [r7, #12]	@ float
  56:../Sources/drivers/IO.c ****                 break;
 226              		.loc 1 56 0
 227 0066 14E0     		b	.L8
 228              	.L7:
  57:../Sources/drivers/IO.c **** 
  58:../Sources/drivers/IO.c ****             case POT_GAMMA:
  59:../Sources/drivers/IO.c ****                 Pot_Value =  (float)ReadADC0_SingleEnded(ADC0_SE12)	/  4095.0; //Gamma
 229              		.loc 1 59 0
 230 0068 4FF00C00 		mov	r0, #12
 231 006c 4FF00001 		mov	r1, #0
 232 0070 FFF7FEFF 		bl	ReadADC0_SingleEnded
 233 0074 0346     		mov	r3, r0
 234 0076 1846     		mov	r0, r3
 235 0078 FFF7FEFF 		bl	__aeabi_i2f
 236 007c 0346     		mov	r3, r0
 237 007e 1846     		mov	r0, r3
 238 0080 4FF47041 		mov	r1, #61440
 239 0084 C4F27F51 		movt	r1, 17791
 240 0088 FFF7FEFF 		bl	__aeabi_fdiv
 241 008c 0346     		mov	r3, r0
 242 008e FB60     		str	r3, [r7, #12]	@ float
  60:../Sources/drivers/IO.c ****                 break;
 243              		.loc 1 60 0
 244 0090 00BF     		nop
 245              	.L8:
 246              	.LBE2:
  61:../Sources/drivers/IO.c ****         }
  62:../Sources/drivers/IO.c **** 
  63:../Sources/drivers/IO.c ****     //Rescale to Range
  64:../Sources/drivers/IO.c ****     Pot_Value = (Pot_Value * (PotMax[Channel] - PotMin[Channel])) + PotMin[Channel];
 247              		.loc 1 64 0
 248 0092 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 249 0094 40F20003 		movw	r3, #:lower16:PotMax
 250 0098 C0F20003 		movt	r3, #:upper16:PotMax
 251 009c 53F82220 		ldr	r2, [r3, r2, lsl #2]	@ float
 252 00a0 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 253 00a2 40F20003 		movw	r3, #:lower16:PotMin
 254 00a6 C0F20003 		movt	r3, #:upper16:PotMin
 255 00aa 53F82130 		ldr	r3, [r3, r1, lsl #2]	@ float
 256 00ae 1046     		mov	r0, r2
 257 00b0 1946     		mov	r1, r3
 258 00b2 FFF7FEFF 		bl	__aeabi_fsub
 259 00b6 0346     		mov	r3, r0
 260 00b8 1846     		mov	r0, r3
 261 00ba F968     		ldr	r1, [r7, #12]	@ float
 262 00bc FFF7FEFF 		bl	__aeabi_fmul
 263 00c0 0346     		mov	r3, r0
 264 00c2 1A46     		mov	r2, r3
 265 00c4 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 266 00c6 40F20003 		movw	r3, #:lower16:PotMin
 267 00ca C0F20003 		movt	r3, #:upper16:PotMin
 268 00ce 53F82130 		ldr	r3, [r3, r1, lsl #2]	@ float
 269 00d2 1046     		mov	r0, r2
 270 00d4 1946     		mov	r1, r3
 271 00d6 FFF7FEFF 		bl	__aeabi_fadd
 272 00da 0346     		mov	r3, r0
 273 00dc FB60     		str	r3, [r7, #12]	@ float
  65:../Sources/drivers/IO.c ****     return Pot_Value;
 274              		.loc 1 65 0
 275 00de FB68     		ldr	r3, [r7, #12]	@ float
  66:../Sources/drivers/IO.c **** }
 276              		.loc 1 66 0
 277 00e0 1846     		mov	r0, r3
 278 00e2 07F11007 		add	r7, r7, #16
 279 00e6 BD46     		mov	sp, r7
 280 00e8 80BD     		pop	{r7, pc}
 281              		.cfi_endproc
 282              	.LFE2:
 284 00ea 00BF     		.text
 285              	.Letext0:
 286              		.file 2 "C:/Freescale/CW MCU v10.5/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 287              		.file 3 "C:/Users/ehughes/Dropbox/FRDM/FRDM-JAM/SRC/MonkeyJam/MonkeyJam/Project_Headers/MK20D5.h"
DEFINED SYMBOLS
                            *ABS*:00000000 IO.c
C:\Users\ehughes\AppData\Local\Temp\ccJKvBo5.s:19     .text.InitIO:00000000 $t
C:\Users\ehughes\AppData\Local\Temp\ccJKvBo5.s:24     .text.InitIO:00000000 InitIO
C:\Users\ehughes\AppData\Local\Temp\ccJKvBo5.s:92     .bss.PotMin:00000000 PotMin
C:\Users\ehughes\AppData\Local\Temp\ccJKvBo5.s:89     .bss.PotMin:00000000 $d
C:\Users\ehughes\AppData\Local\Temp\ccJKvBo5.s:99     .data.PotMax:00000000 PotMax
C:\Users\ehughes\AppData\Local\Temp\ccJKvBo5.s:96     .data.PotMax:00000000 $d
C:\Users\ehughes\AppData\Local\Temp\ccJKvBo5.s:104    .text.SetPotLimits:00000000 $t
C:\Users\ehughes\AppData\Local\Temp\ccJKvBo5.s:109    .text.SetPotLimits:00000000 SetPotLimits
C:\Users\ehughes\AppData\Local\Temp\ccJKvBo5.s:164    .text.ReadPOT:00000000 $t
C:\Users\ehughes\AppData\Local\Temp\ccJKvBo5.s:169    .text.ReadPOT:00000000 ReadPOT
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
InitADC_12Bit
InitAudioIO
__aeabi_i2f
__aeabi_fdiv
__aeabi_fsub
__aeabi_fmul
__aeabi_fadd
ReadADC0_SingleEnded
